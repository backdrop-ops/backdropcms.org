<?php
/**
 * @file
 */

include_once __DIR__ . '/metatag.helper.test';

/**
 * Tests for the Metatag module's output caching
 */
class MetatagCoreOutputCachingTest extends MetatagTestHelper {

  /**
   * {@inheritdoc}
   */
  function setUp(array $modules = array()) {
    parent::setUp($modules);
  }

  /**
   * Test how user tokens are handled when cache is enabled.
   */
  public function testUserTokensCacheEnabled() {
    // Enable output caching.
    config_set('metatag.settings', 'cache_output', TRUE);

    // Create two user accounts.
    $account1 = $this->backdropCreateUser();
    $account2 = $this->backdropCreateUser();

    // Log in the first account.
    $this->backdropLogin($account1);

    // Load the test page.
    $this->backdropGet('account-test-page');
    $this->assertResponse(200);

    // Verify the page loaded correctly and has the correct title.
    $this->assertText('Test page for user tokens.');
    $this->assertText('Hello ' . $account1->name);
    $xpath = $this->xpath("//h1");
    $this->verbose(check_plain(var_export($xpath, TRUE)));
    $this->assertEqual(trim((string)$xpath[0]), 'Hello ' . $account1->name);

    // Confirm the page title itself.
    $this->assertTitle('Hello ' . $account1->name . ' | Backdrop CMS');

    // Log out the user.
    $this->backdropLogout();

    // Log in the second account.
    $this->backdropLogin($account2);

    // Load the test page.
    $this->backdropGet('account-test-page');
    $this->assertResponse(200);

    // Verify the page loaded correctly and now shows the second user account's
    // name on the page.
    $this->assertText('Test page for user tokens.');
    $this->assertText('Hello ' . $account2->name);
    $xpath = $this->xpath("//h1");
    $this->verbose(check_plain(var_export($xpath, TRUE)));
    $this->assertEqual(trim((string)$xpath[0]), 'Hello ' . $account2->name);

    // Confirm the page title has not been updated, which is as designed.
    $this->assertTitle('Hello ' . $account1->name . ' | Backdrop CMS');
    $this->assertNoTitle('Hello ' . $account2->name . ' | Backdrop CMS');
  }

  /**
   * Test how user tokens are handled when cache is Disabled.
   */
  public function testUserTokensCacheDisabled() {
    // Disable output caching.
    config_set('metatag.settings', 'cache_output', FALSE);

    // Create two user accounts.
    $account1 = $this->backdropCreateUser();
    $account2 = $this->backdropCreateUser();

    // Log in the first account.
    $this->backdropLogin($account1);

    // Load the test page.
    $this->backdropGet('account-test-page');
    $this->assertResponse(200);

    // Verify the page loaded correctly and has the correct title.
    $this->assertText('Test page for user tokens.');
    $this->assertText('Hello ' . $account1->name);
    $xpath = $this->xpath("//h1");
    $this->verbose(check_plain(var_export($xpath, TRUE)));
    $this->assertEqual(trim((string)$xpath[0]), 'Hello ' . $account1->name);

    // Confirm the page title itself.
    $this->assertTitle('Hello ' . $account1->name . ' | Backdrop CMS');

    // Log out the user.
    $this->backdropLogout().

    // Log in the second account.
    $this->backdropLogin($account2);

    // Load the test page.
    $this->backdropGet('account-test-page');
    $this->assertResponse(200);

    // Verify the page loaded correctly and now shows the second user account's
    // name on the page.
    $this->assertText('Test page for user tokens.');
    $this->assertText('Hello ' . $account2->name);
    $xpath = $this->xpath("//h1");
    $this->verbose(check_plain(var_export($xpath, TRUE)));
    $this->assertEqual(trim((string)$xpath[0]), 'Hello ' . $account2->name);

    // Confirm the page title has changed, i.e. it shows the second account name
    // rather than the first.
    $this->assertNoTitle('Hello ' . $account1->name . ' | Backdrop CMS');
    $this->assertTitle('Hello ' . $account2->name . ' | Backdrop CMS');
  }

}
