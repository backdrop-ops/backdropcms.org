<?php
/**
 * @file
 * Tests for the Metatag module and user entities.
 */

include_once __DIR__ . '/metatag.helper.test';

class MetatagCoreUserTest extends MetatagTestHelper {

  /**
   * Tests creation of a standard entity.
   */
  public function testEntityCreationWorkflow() {
    // Create an admin user and log them in.
    if (!isset($this->adminUser)) {
      $this->adminUser = $this->createAdminUser();
    }
    $this->backdropLogin($this->adminUser);

    // Assign default values for the new vocabulary.

    // Load the page for overriding the User configuration.
    $this->backdropGet('admin/config/metadata/metatags/config/user');
    $this->assertResponse(200);

    // Verify the page loaded correct.
    $this->assertText('User');

    // Submit the form with some values.
    $this->backdropPost(NULL, array(
      'metatags[und][abstract][value]' => '[user:name]',
    ), t('Save'));
    $this->assertResponse(200);

    // Verify the page loaded correctly.
    $this->assertText(strip_tags(t('The meta tag defaults for @label have been saved.', array('@label' => 'User account'))));

    // Verify that the user was redirected to the settings page again.
    $this->assertEqual($this->getUrl(), url('admin/config/metadata/metatags', array('absolute' => TRUE)));

    // Load the user's edit form.
    $this->backdropGet('user/' . $this->adminUser->uid . '/edit');
    $this->assertResponse(200);

    // Verify the page loaded correctly.
    $this->assertRaw($this->adminUser->name);

    // Verify that it's possible to submit values to the form.
    $this->backdropPost(NULL, array(
      'metatags[und][abstract][value]' => '[user:name] ponies',
    ), t('Save'));
    $this->assertResponse(200);

    // Verify that the user object saved correctly.
    $this->assertText(strip_tags(t('The changes have been saved.')));

    // Manually load the admin account.
    $account = user_load($this->adminUser->uid);

    // Only the non-default values are stored.
    $expected = array(
      'und' => array(
        'abstract' => array(
          'value' => '[user:name] ponies',
        ),
      ),
    );

    $this->assertEqual($expected, $account->metatags);

    // Confirm the user profile tags work correctly.
    $this->assertUserEntityTags($this->adminUser);
  }

}
