{"version":3,"sources":["vs/base/worker/fake","vs/base/worker/vs/loader.js","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/arrays.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/diff/diffChange.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/diff/diff.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/errors.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/functional.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/iterator.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/keyCodes.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/lifecycle.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/linkedList.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/event.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/cancellation.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/platform.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/strings.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/types.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/uri.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/common/worker/simpleWorker.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/core/position.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/core/range.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/core/selection.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/core/token.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/core/uint.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/core/characterClassifier.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/diff/diffComputer.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/model/wordHelper.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/modes/linkComputer.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/modes/supports/inplaceReplaceSupport.ts","vs/base/worker/vs/editor/common/standalone/promise-polyfill/polyfill.js","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/standalone/standaloneEnums.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/standalone/standaloneBase.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/viewModel/prefixSumComputer.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/model/mirrorTextModel.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/editor/common/services/editorSimpleWorker.ts","vs/base/worker/file:/Users/penlv/code/vscode/out-editor-src/vs/base/worker/workerMain.ts"],"names":["__m","__M","deps","result","i","len","length","_amdLoaderGlobal","this","_commonjsGlobal","global","AMDLoader","Environment","_detected","_isWindows","_isNode","_isElectronRenderer","_isWebWorker","Object","defineProperty","prototype","get","_detect","enumerable","configurable","module","exports","process","versions","electron","type","importScripts","navigator","userAgent","indexOf","platform","LoaderEvent","detail","timestamp","LoaderEventRecorder","loaderAvailableTimestamp","_events","record","push","Utilities","getHighPerformanceTimestamp","getEvents","NullLoaderEventRecorder","INSTANCE","fileUriToFilePath","isWindows","uri","decodeURI","replace","test","substr","startsWith","haystack","needle","endsWith","containsQueryString","url","isAbsolutePath","forEachProperty","obj","callback","key","hasOwnProperty","isEmpty","recursiveClone","Array","isArray","value","generateAnonymousModule","NEXT_ANONYMOUS_ID","isAnonymousModule","id","PERFORMANCE_NOW_PROBED","HAS_PERFORMANCE_NOW","performance","now","Date","ConfigurationOptionsUtil","validateConfigurationOptions","options","defaultOnError","err","errorCode","console","error","moduleId","stack","neededBy","baseUrl","isBuild","paths","config","catchError","urlArgs","onError","ignoreDuplicateModules","cspNonce","nodeModules","nodeCachedData","seed","writeDelay","onData","warn","path","undefined","mergeConfigurationOptions","overwrite","base","concat","key2","value2","Configuration","env","_env","_createIgnoreDuplicateModulesMap","_createNodeModulesMap","_createSortedPathsRules","nodeRequire","main","filename","isNode","nodeMain","dirnameIndex","Math","max","lastIndexOf","substring","ignoreDuplicateModulesMap","nodeModulesMap","create","_i","_a","nodeModule","_this","sortedPathsRules","from","to","sort","a","b","cloneAndMerge","getOptionsLiteral","_applyPaths","pathRule","j","lenJ","_addUrlArgsToUrl","_addUrlArgsIfNecessaryToUrl","_addUrlArgsIfNecessaryToUrls","urls","moduleIdToPaths","results","requireToUrl","isDuplicateMessageIgnoredFor","getConfigForModule","shouldCatchError","shouldRecordStats","recordStats","OnlyOnceScriptLoader","_scriptLoader","_callbackMap","load","moduleManager","scriptSrc","errorback","isWebWorker","WorkerScriptLoader","NodeScriptLoader","BrowserScriptLoader","scriptCallbacks","triggerCallback","triggerErrorback","attachListeners","script","unbind","removeEventListener","loadEventListener","errorEventListener","e","addEventListener","document","createElement","setAttribute","getConfig","getElementsByTagName","appendChild","_didInitialize","_didPatchNodeRequire","_hasCreateCachedData","_init","_fs","_vm","_path","_crypto","Script","_initNodeRequire","that","Module","_compile","content","wrapper","wrap","cachedDataPath","_getCachedDataPath","cachedData","readFileSync","produceCachedData","compileWrapper","runInThisContext","dirname","require","mod","constructor","resolve","request","_resolveFilename","mainModule","extensions","_extensions","cache","_cache","makeRequireFunction","args","Buffer","apply","_processCachedData","opts","nodeInstrumenter","c","recorder","getRecorder","pieces","split","moduleExports_1","enqueueDefineAnonymousModule","readFile","encoding","data","normalizedScriptSrc","normalize","vmScriptSrc","isElectronRenderer","driveLetterMatch","match","toUpperCase","contents","prefix","charCodeAt","_BOM","cachedDataPath_1","_err","_loadAndEvalScript","r","globalDefineFunc","getGlobalAMDDefineFunc","receivedDefineCall","localDefineFunc","arguments","amd","call","getGlobalAMDRequireFunc","Error","basedir","hash","createHash","update","digest","basename","join","createCachedData","cachedDataRejected","_runSoon","unlink","cachedDataProduced","writeFile","minTimeout","timeout","ceil","random","setTimeout","createScriptLoader","ModuleIdResolver","fromModuleId","lastSlash","fromModulePath","_normalizeModuleId","pattern","resolveModule","ROOT","strId","dependencies","moduleIdResolver","_callback","_errorback","exportsPassedIn","unresolvedDependenciesCount","_isComplete","_safeInvokeFunction","returnedValue","producedError","_invokeFactory","strModuleId","dependenciesValues","complete","onDependencyError","isComplete","ModuleIdProvider","_nextId","_strModuleIdToIntModuleId","Map","_intModuleIdToStrModuleId","getModuleId","getMaxModuleId","set","getStrModuleId","RegularDependency","EXPORTS","MODULE","REQUIRE","PluginDependency","pluginId","pluginParam","ModuleManager","scriptLoader","defineFunc","requireFunc","_loaderAvailableTimestamp","_defineFunc","_requireFunc","_moduleIdProvider","_config","_modules2","_knownModules2","_inverseDependencies2","_inversePluginDependencies2","_currentAnnonymousDefineCall","_recorder","_buildInfoPath","_buildInfoDefineStack","_buildInfoDependencies","reset","_findRelevantLocationInStack","str","normalizedPath","stackPieces","m","stackPath","stackLine","stackColumn","trimPathOffset","line","parseInt","col","getBuildInfo","resultLen","location_1","defineStack","defineLocation","shim","getLoaderEvents","defineModule","_normalizeDependencies","map","dep","_resolve","_normalizeDependency","dependency","bangIndex","strPluginId","dependencyId","_relativeRequire","synchronousRequire","_strModuleId","configure","params","shouldOverwrite","oldShouldRecordStats","_onLoad","defineCall","_createLoadError","intModuleId","_onLoadError","seenModuleId","someoneNotified","queue","queueElement","shift","inverseDeps","inverseDep","_hasDependencyPath","fromId","toId","inQueue","dependencyModule","_findCyclePath","depth","_createRequire","toUrl","getStats","__$__nodeRequire","_loadModule","lastPathIndex","loadNextPath","currentPath_1","recorder_1","_loadPluginDependency","plugin","pluginDependency","cyclePath","reverse","inversePluginDeps","_onModuleComplete","inverseDependencyId","inverseDependency","delete","define","init","_nodeRequire_1","what","RequireFunc","DefineFunc","jQuery","_requireFunc_config","doNotInitLoader","mergeSort","compare","_sort","lo","hi","aux","mid","leftIdx","rightIdx","_merge","firstIndex","array","fn","tail","n","tail2","arr","slice","equals","one","other","itemEquals","binarySearch","comparator","low","high","comp","findFirstInSorted","p","floor","groupBy","currentGroup","element","coalesce","filter","isFalsyOrEmpty","isNonEmptyArray","distinct","keyFn","position","seen","elem","first","notFoundValue","index","flatten","range","arg","arrayInsert","target","insertIndex","insertArr","before","after","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","createStringSequence","getLength","getElementAtIndex","pos","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","Debug","Assert","condition","message","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","diffChange_1","AddOriginalElement","originalIndex","modifiedIndex","min","AddModifiedElement","getChanges","getReverseChanges","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_forwardHistory","m_reverseHistory","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","changes","ComputeDiffRecursive","PrettifyChanges","quitEarlyArr","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","diagonal","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","numDifferences","maxDifferences","numDiagonals","tempOriginalIndex","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","abs","matchLengthOfLongest","temp","change","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","splice","prevChange","bestDelta","bestScore","_boundaryScore","delta","score","_OriginalIsBoundary","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diagonalsAbove","diffEven","isPromiseCanceledError","name","canceledName","ErrorHandler","listeners","unexpectedErrorHandler","emit","forEach","listener","onUnexpectedError","onUnexpectedExternalError","errorHandler","transformErrorForSerialization","$isError","stacktrace","canceled","illegalArgument","illegalState","once","didCall","FIN","done","Iterator","iterator","next","_empty","empty","fromArray","elements","collect","getSequenceIterator","ArrayIterator","items","start","end","current","ArrayNavigator","_super","__extends","previous","last","parent","MappedIterator","createSimpleKeybinding","keybinding","OS","ctrlCmd","winCtrl","SimpleKeybinding","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","keyCode","toLowerCase","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","KeyCodeUtils","toString","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","KeyChord","firstPart","secondPart","createKeybinding","chordPart","ChordKeybinding","ctrlKey","shiftKey","altKey","metaKey","isModifierKey","toChord","isDuplicateModifierCase","parts","errors_1","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding","dispose","rest","d","isDisposable","thing","combinedDisposable","disposables","toDisposable","Disposable","_toDispose","_lifecycle_disposable_isDisposed","_register","t","None","freeze","ImmortalReference","object","Node","LinkedList","_size","_first","unshift","_insert","atTheEnd","newNode","oldLast","_last","prev","oldFirst","_remove","bind","res","node","candidate","anchor","iterator_1","Event","event","thisArgs","didFire","snapshot","each","reduce","merge","initial","output","emitter","Emitter","onFirstListenerAdd","fire","onLastListenerRemove","latch","firstCall","shouldEmit","_disposable","signal","any","events","lifecycle_1","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","clearTimeout","_output","stopwatch","getTime","_","buffer","nextTick","_buffer","flush","onFirstListenerDidAdd","echo","onListenerDidAdd","ChainableEvent","on","chain","fromNodeEventEmitter","eventName","removeListener","fromPromise","promise","then","toPromise","Promise","_globalLeakWarningThreshold","LeakageMonitor","customThreshold","_warnCountdown","_stacks","clear","check","listenerCount","threshold","count","topStack_1","topCount_1","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","remove","removeMonitor","size","_noop","_deliveryQueue","iter","event_1","EventMultiplexer","hasListeners","add","hook","functional_1","unhook","idx","EventBufferer","buffers","wrapEvent","bufferEvents","pop","Relay","listening","inputEvent","inputEventListener","CancellationToken","shortcutEvent","context","isCancellationToken","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","_isCancelled","_emitter","cancel","CancellationTokenSource","_token","LANGUAGE_DEFAULT","_isMacintosh","_isLinux","_isNative","_isWeb","rawNlsConfig","nlsConfig","JSON","parse","resolved","availableLanguages","locale","_translationsConfigFile","language","isMacintosh","isLinux","isNative","isWeb","_globals","self","globals","_setImmediate","setImmediate","escapeRegExpCharacters","ltrim","needleLen","offset","rtrim","haystackLen","isLowerAsciiLetter","code","isUpperAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","diff","String","fromCharCode","isFullWidthCharacter","charCode","isFalsyOrWhitespace","trim","pad","l","char","_formatRegexp","format","group","isNaN","escape","html","convertSimple2RegExpPattern","createRegExp","searchString","isRegex","wholeWord","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","source","exec","lastIndex","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonPrefixLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","isLowSurrogate","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isBasicASCII","containsFullWidthCharacter","UTF8_BOM_CHARACTER","startsWithUTF8BOM","safeBtoa","btoa","encodeURIComponent","repeat","s","isString","_typeof","string","isObject","isUndefined","isUndefinedOrNull","isFunction","function","validateConstraint","constraint","number","isNumber","isBoolean","isEmptyObject","validateConstraints","constraints","ctor","isNativeClass","getAllPropertyNames","proto","getPrototypeOf","getOwnPropertyNames","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","escaped","encodeTable","_makeFsPath","authority","scheme","platform_1","_asFormatted","skipEncoding","encoder","query","fragment","_slash","userinfo","_schemePattern","_singleSlashStart","_doubleSlashStart","_throwOnMissingSchema","_regexp","URI","schemeOrData","_strict","_referenceResolution","ret","_validateUri","isUri","fsPath","with","_URI","decodeURIComponent","file","components","toJSON","revive","_fsPath","_formatted","external","$mid","INITIALIZE","webWorkerWarningLogged","logOnceWebWorkerWarning","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","method","req","reject","_send","vsWorker","handleMessage","serializedMessage","_handleMessage","msg","seq","replyMessage","reply","requestMessage","strMsg","stringify","SimpleWorkerClient","workerFactory","lazyProxyReject","_worker","_protocol","postMessage","getId","loaderConfiguration","requirejs","contexts","_onModuleLoaded","_lazyProxy","availableMethods","proxy","availableMethods_1","methodName","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","info","SimpleWorkerServer","postSerializedMessage","requestHandler","_requestHandler","onmessage","initialize","loaderConfig","methods","types_1","prop","vs","handlerModule","_b","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","clone","lift","isIPosition","Range","startLineNumber","startColumn","endLineNumber","endColumn","containsPosition","containsRange","otherRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","position_1","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","range_1","Token","TokenizationResult","tokens","endState","TokenizationResult2","toUint32","v","Uint8Matrix","rows","cols","defaultValue","Uint8Array","_data","row","toUint8","toUint32Array","Uint32Array","CharacterClassifier","_defaultValue","uint_1","_asciiMap","_createAsciiMap","_map","asciiMap","_value","CharacterSet","_actual","has","computeDiff","modifiedSequence","diff_1","MAXIMUM_RUN_TIME","MINIMUM_MATCHING_CHARACTER_LENGTH","LineMarkerSequence","lines","startColumns","endColumns","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","_lines","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","txt","strings","getCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","shouldComputeCharChanges","shouldPostProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","length_2","DiffComputer","originalLines","modifiedLines","shouldMakePrettyDiff","maximumRunTimeMs","computationStartTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","originalChar","modifiedChar","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","allowInWords","USUAL_WORD_SEPARATORS_1","sep","createWordRegExp","ensureValidWordDefinition","wordDefinition","flags","getWordAtText","text","textOffset","matchIndex","word","getWordAtPosSlow","getWordAtPosFast","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","nextState","currentState","_stateMachine","_classifier","LinkComputer","_createLink","classifier","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","computeLinks","model","stateMachine","characterClassifier_1","getClassifier","lineCount","getLineCount","getLineContent","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","chClass","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","factory","finallyConstructor","reason","noop","TypeError","_state","_handled","_deferreds","doResolve","deferred","_immediateFn","cb","onFulfilled","onRejected","newValue","finale","thisArg","_unhandledRejectionFn","ex","setTimeoutFunc","prom","all","val","remaining","race","values","globalNS","window","MarkerTag","MarkerSeverity","KeyCode","SelectionDirection","ScrollbarVisibility","OverviewRulerLane","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TrackedRangeStickiness","ScrollType","CursorChangeReason","RenderMinimap","WrappingIndent","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","RenderLineNumbersType","ContentWidgetPositionPreference","OverlayWidgetPositionPreference","MouseTargetType","IndentAction","CompletionItemKind","CompletionItemInsertTextRule","CompletionTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKind","KeyMod","chord","keyCodes_1","CtrlCmd","Shift","Alt","WinCtrl","createMonacoBaseAPI","editor","languages","cancellation_1","standaloneEnums","selection_1","Uri","uri_1","token_1","PrefixSumIndexOfResult","remainder","PrefixSumComputer","prefixSum","prefixSumValidIndex","Int32Array","getCount","insertValues","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","midStop","midStart","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","MirrorTextModel","eol","versionId","_uri","_eol","_versionId","_lineStarts","getText","onEvents","changes_1","_acceptDeleteRange","_acceptInsertText","_ensureLineStarts","eolLength","linesLength","lineStartValues","prefixSumComputer_1","_setLineText","lineIndex","insertText","insertLines","newLengths","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordAtText","wordHelper_1","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","getLineWords","words","ranges_1","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","mirrorTextModel_1","BaseEditorSimpleWorker","foreignModuleFactory","_foreignModuleFactory","_foreignModule","originalUrl","modifiedUrl","ignoreTrimWhitespace","_getModel","diffComputer_1","identical","_modelsAreIdentical","originalLineCount","computeMoreMinimalEdits","modelUrl","edits","lastEol","edits_1","arrays_1","_diffLimit","editOffset","newEdit","linkComputer_1","textualSuggest","wordDef","wordDefFlags","suggestions","wordDefRegExp","currentWord","_suggestionsLimit","kind","label","computeWordRanges","words_1","selectionText","wordRange","inplaceReplaceSupport_1","loadForeignModule","createData","ctx","getMirrorModels","_getModels","foreignModule","fmr","EditorSimpleWorkerImpl","_models","keys","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","monaco","standaloneBase_1","MonacoEnvironment","monacoBaseUrl","isFirstMessage","beforeReadyMessages","ws","messageHandler","loadCode"],"mappings":"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","file":"workerMain.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/Microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\nvar _amdLoaderGlobal = this;\nvar _commonjsGlobal = typeof global === 'object' ? global : {};\nvar AMDLoader;\n(function (AMDLoader) {\n    AMDLoader.global = _amdLoaderGlobal;\n    var Environment = (function () {\n        function Environment() {\n            this._detected = false;\n            this._isWindows = false;\n            this._isNode = false;\n            this._isElectronRenderer = false;\n            this._isWebWorker = false;\n        }\n        Object.defineProperty(Environment.prototype, \"isWindows\", {\n            get: function () {\n                this._detect();\n                return this._isWindows;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isNode\", {\n            get: function () {\n                this._detect();\n                return this._isNode;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isElectronRenderer\", {\n            get: function () {\n                this._detect();\n                return this._isElectronRenderer;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isWebWorker\", {\n            get: function () {\n                this._detect();\n                return this._isWebWorker;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Environment.prototype._detect = function () {\n            if (this._detected) {\n                return;\n            }\n            this._detected = true;\n            this._isWindows = Environment._isWindows();\n            this._isNode = (typeof module !== 'undefined' && !!module.exports);\n            this._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n            this._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\n        };\n        Environment._isWindows = function () {\n            if (typeof navigator !== 'undefined') {\n                if (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\n                    return true;\n                }\n            }\n            if (typeof process !== 'undefined') {\n                return (process.platform === 'win32');\n            }\n            return false;\n        };\n        return Environment;\n    }());\n    AMDLoader.Environment = Environment;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var LoaderEvent = (function () {\n        function LoaderEvent(type, detail, timestamp) {\n            this.type = type;\n            this.detail = detail;\n            this.timestamp = timestamp;\n        }\n        return LoaderEvent;\n    }());\n    AMDLoader.LoaderEvent = LoaderEvent;\n    var LoaderEventRecorder = (function () {\n        function LoaderEventRecorder(loaderAvailableTimestamp) {\n            this._events = [new LoaderEvent(1 /* LoaderAvailable */, '', loaderAvailableTimestamp)];\n        }\n        LoaderEventRecorder.prototype.record = function (type, detail) {\n            this._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\n        };\n        LoaderEventRecorder.prototype.getEvents = function () {\n            return this._events;\n        };\n        return LoaderEventRecorder;\n    }());\n    AMDLoader.LoaderEventRecorder = LoaderEventRecorder;\n    var NullLoaderEventRecorder = (function () {\n        function NullLoaderEventRecorder() {\n        }\n        NullLoaderEventRecorder.prototype.record = function (type, detail) {\n            // Nothing to do\n        };\n        NullLoaderEventRecorder.prototype.getEvents = function () {\n            return [];\n        };\n        return NullLoaderEventRecorder;\n    }());\n    NullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\n    AMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var Utilities = (function () {\n        function Utilities() {\n        }\n        /**\n         * This method does not take care of / vs \\\n         */\n        Utilities.fileUriToFilePath = function (isWindows, uri) {\n            uri = decodeURI(uri).replace(/%23/g, '#');\n            if (isWindows) {\n                if (/^file:\\/\\/\\//.test(uri)) {\n                    // This is a URI without a hostname => return only the path segment\n                    return uri.substr(8);\n                }\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(5);\n                }\n            }\n            else {\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(7);\n                }\n            }\n            // Not sure...\n            return uri;\n        };\n        Utilities.startsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\n        };\n        Utilities.endsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\n        };\n        // only check for \"?\" before \"#\" to ensure that there is a real Query-String\n        Utilities.containsQueryString = function (url) {\n            return /^[^\\#]*\\?/gi.test(url);\n        };\n        /**\n         * Does `url` start with http:// or https:// or file:// or / ?\n         */\n        Utilities.isAbsolutePath = function (url) {\n            return /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\n        };\n        Utilities.forEachProperty = function (obj, callback) {\n            if (obj) {\n                var key = void 0;\n                for (key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                        callback(key, obj[key]);\n                    }\n                }\n            }\n        };\n        Utilities.isEmpty = function (obj) {\n            var isEmpty = true;\n            Utilities.forEachProperty(obj, function () {\n                isEmpty = false;\n            });\n            return isEmpty;\n        };\n        Utilities.recursiveClone = function (obj) {\n            if (!obj || typeof obj !== 'object') {\n                return obj;\n            }\n            var result = Array.isArray(obj) ? [] : {};\n            Utilities.forEachProperty(obj, function (key, value) {\n                if (value && typeof value === 'object') {\n                    result[key] = Utilities.recursiveClone(value);\n                }\n                else {\n                    result[key] = value;\n                }\n            });\n            return result;\n        };\n        Utilities.generateAnonymousModule = function () {\n            return '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\n        };\n        Utilities.isAnonymousModule = function (id) {\n            return Utilities.startsWith(id, '===anonymous');\n        };\n        Utilities.getHighPerformanceTimestamp = function () {\n            if (!this.PERFORMANCE_NOW_PROBED) {\n                this.PERFORMANCE_NOW_PROBED = true;\n                this.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\n            }\n            return (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\n        };\n        return Utilities;\n    }());\n    Utilities.NEXT_ANONYMOUS_ID = 1;\n    Utilities.PERFORMANCE_NOW_PROBED = false;\n    Utilities.HAS_PERFORMANCE_NOW = false;\n    AMDLoader.Utilities = Utilities;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var ConfigurationOptionsUtil = (function () {\n        function ConfigurationOptionsUtil() {\n        }\n        /**\n         * Ensure configuration options make sense\n         */\n        ConfigurationOptionsUtil.validateConfigurationOptions = function (options) {\n            function defaultOnError(err) {\n                if (err.errorCode === 'load') {\n                    console.error('Loading \"' + err.moduleId + '\" failed');\n                    console.error('Detail: ', err.detail);\n                    if (err.detail && err.detail.stack) {\n                        console.error(err.detail.stack);\n                    }\n                    console.error('Here are the modules that depend on it:');\n                    console.error(err.neededBy);\n                    return;\n                }\n                if (err.errorCode === 'factory') {\n                    console.error('The factory method of \"' + err.moduleId + '\" has thrown an exception');\n                    console.error(err.detail);\n                    if (err.detail && err.detail.stack) {\n                        console.error(err.detail.stack);\n                    }\n                    return;\n                }\n            }\n            options = options || {};\n            if (typeof options.baseUrl !== 'string') {\n                options.baseUrl = '';\n            }\n            if (typeof options.isBuild !== 'boolean') {\n                options.isBuild = false;\n            }\n            if (typeof options.paths !== 'object') {\n                options.paths = {};\n            }\n            if (typeof options.config !== 'object') {\n                options.config = {};\n            }\n            if (typeof options.catchError === 'undefined') {\n                options.catchError = false;\n            }\n            if (typeof options.urlArgs !== 'string') {\n                options.urlArgs = '';\n            }\n            if (typeof options.onError !== 'function') {\n                options.onError = defaultOnError;\n            }\n            if (typeof options.ignoreDuplicateModules !== 'object' || !Array.isArray(options.ignoreDuplicateModules)) {\n                options.ignoreDuplicateModules = [];\n            }\n            if (options.baseUrl.length > 0) {\n                if (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\n                    options.baseUrl += '/';\n                }\n            }\n            if (typeof options.cspNonce !== 'string') {\n                options.cspNonce = '';\n            }\n            if (!Array.isArray(options.nodeModules)) {\n                options.nodeModules = [];\n            }\n            if (typeof options.nodeCachedData === 'object') {\n                if (typeof options.nodeCachedData.seed !== 'string') {\n                    options.nodeCachedData.seed = 'seed';\n                }\n                if (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\n                    options.nodeCachedData.writeDelay = 1000 * 7;\n                }\n                if (typeof options.nodeCachedData.onData !== 'function') {\n                    options.nodeCachedData.onData = function (err) {\n                        if (err && err.errorCode === 'cachedDataRejected') {\n                            console.warn('Rejected cached data from file: ' + err.path);\n                        }\n                        else if (err && err.errorCode) {\n                            console.error('Problems handling cached data file: ' + err.path);\n                            console.error(err.detail);\n                        }\n                        else if (err) {\n                            console.error(err);\n                        }\n                    };\n                }\n                if (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\n                    options.nodeCachedData.onData('INVALID cached data configuration, \\'path\\' MUST be set');\n                    options.nodeCachedData = undefined;\n                }\n            }\n            return options;\n        };\n        ConfigurationOptionsUtil.mergeConfigurationOptions = function (overwrite, base) {\n            if (overwrite === void 0) { overwrite = null; }\n            if (base === void 0) { base = null; }\n            var result = AMDLoader.Utilities.recursiveClone(base || {});\n            // Merge known properties and overwrite the unknown ones\n            AMDLoader.Utilities.forEachProperty(overwrite, function (key, value) {\n                if (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\n                    result.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\n                }\n                else if (key === 'paths' && typeof result.paths !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.paths[key2] = value2; });\n                }\n                else if (key === 'config' && typeof result.config !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.config[key2] = value2; });\n                }\n                else {\n                    result[key] = AMDLoader.Utilities.recursiveClone(value);\n                }\n            });\n            return ConfigurationOptionsUtil.validateConfigurationOptions(result);\n        };\n        return ConfigurationOptionsUtil;\n    }());\n    AMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\n    var Configuration = (function () {\n        function Configuration(env, options) {\n            this._env = env;\n            this.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\n            this._createIgnoreDuplicateModulesMap();\n            this._createNodeModulesMap();\n            this._createSortedPathsRules();\n            if (this.options.baseUrl === '') {\n                if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\n                    var nodeMain = this.options.nodeRequire.main.filename;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n                if (this.options.nodeMain && this._env.isNode) {\n                    var nodeMain = this.options.nodeMain;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n            }\n        }\n        Configuration.prototype._createIgnoreDuplicateModulesMap = function () {\n            // Build a map out of the ignoreDuplicateModules array\n            this.ignoreDuplicateModulesMap = {};\n            for (var i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\n                this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\n            }\n        };\n        Configuration.prototype._createNodeModulesMap = function () {\n            // Build a map out of nodeModules array\n            this.nodeModulesMap = Object.create(null);\n            for (var _i = 0, _a = this.options.nodeModules; _i < _a.length; _i++) {\n                var nodeModule = _a[_i];\n                this.nodeModulesMap[nodeModule] = true;\n            }\n        };\n        Configuration.prototype._createSortedPathsRules = function () {\n            var _this = this;\n            // Create an array our of the paths rules, sorted descending by length to\n            // result in a more specific -> less specific order\n            this.sortedPathsRules = [];\n            AMDLoader.Utilities.forEachProperty(this.options.paths, function (from, to) {\n                if (!Array.isArray(to)) {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: [to]\n                    });\n                }\n                else {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: to\n                    });\n                }\n            });\n            this.sortedPathsRules.sort(function (a, b) {\n                return b.from.length - a.from.length;\n            });\n        };\n        /**\n         * Clone current configuration and overwrite options selectively.\n         * @param options The selective options to overwrite with.\n         * @result A new configuration\n         */\n        Configuration.prototype.cloneAndMerge = function (options) {\n            return new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\n        };\n        /**\n         * Get current options bag. Useful for passing it forward to plugins.\n         */\n        Configuration.prototype.getOptionsLiteral = function () {\n            return this.options;\n        };\n        Configuration.prototype._applyPaths = function (moduleId) {\n            var pathRule;\n            for (var i = 0, len = this.sortedPathsRules.length; i < len; i++) {\n                pathRule = this.sortedPathsRules[i];\n                if (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\n                    var result = [];\n                    for (var j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\n                        result.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\n                    }\n                    return result;\n                }\n            }\n            return [moduleId];\n        };\n        Configuration.prototype._addUrlArgsToUrl = function (url) {\n            if (AMDLoader.Utilities.containsQueryString(url)) {\n                return url + '&' + this.options.urlArgs;\n            }\n            else {\n                return url + '?' + this.options.urlArgs;\n            }\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrl = function (url) {\n            if (this.options.urlArgs) {\n                return this._addUrlArgsToUrl(url);\n            }\n            return url;\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrls = function (urls) {\n            if (this.options.urlArgs) {\n                for (var i = 0, len = urls.length; i < len; i++) {\n                    urls[i] = this._addUrlArgsToUrl(urls[i]);\n                }\n            }\n            return urls;\n        };\n        /**\n         * Transform a module id to a location. Appends .js to module ids\n         */\n        Configuration.prototype.moduleIdToPaths = function (moduleId) {\n            if (this.nodeModulesMap[moduleId] === true) {\n                // This is a node module...\n                if (this.isBuild()) {\n                    // ...and we are at build time, drop it\n                    return ['empty:'];\n                }\n                else {\n                    // ...and at runtime we create a `shortcut`-path\n                    return ['node|' + moduleId];\n                }\n            }\n            var result = moduleId;\n            var results;\n            if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\n                results = this._applyPaths(result);\n                for (var i = 0, len = results.length; i < len; i++) {\n                    if (this.isBuild() && results[i] === 'empty:') {\n                        continue;\n                    }\n                    if (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\n                        results[i] = this.options.baseUrl + results[i];\n                    }\n                    if (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\n                        results[i] = results[i] + '.js';\n                    }\n                }\n            }\n            else {\n                if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\n                    result = result + '.js';\n                }\n                results = [result];\n            }\n            return this._addUrlArgsIfNecessaryToUrls(results);\n        };\n        /**\n         * Transform a module id or url to a location.\n         */\n        Configuration.prototype.requireToUrl = function (url) {\n            var result = url;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                result = this._applyPaths(result)[0];\n                if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                    result = this.options.baseUrl + result;\n                }\n            }\n            return this._addUrlArgsIfNecessaryToUrl(result);\n        };\n        /**\n         * Flag to indicate if current execution is as part of a build.\n         */\n        Configuration.prototype.isBuild = function () {\n            return this.options.isBuild;\n        };\n        /**\n         * Test if module `moduleId` is expected to be defined multiple times\n         */\n        Configuration.prototype.isDuplicateMessageIgnoredFor = function (moduleId) {\n            return this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\n        };\n        /**\n         * Get the configuration settings for the provided module id\n         */\n        Configuration.prototype.getConfigForModule = function (moduleId) {\n            if (this.options.config) {\n                return this.options.config[moduleId];\n            }\n        };\n        /**\n         * Should errors be caught when executing module factories?\n         */\n        Configuration.prototype.shouldCatchError = function () {\n            return this.options.catchError;\n        };\n        /**\n         * Should statistics be recorded?\n         */\n        Configuration.prototype.shouldRecordStats = function () {\n            return this.options.recordStats;\n        };\n        /**\n         * Forward an error to the error handler.\n         */\n        Configuration.prototype.onError = function (err) {\n            this.options.onError(err);\n        };\n        return Configuration;\n    }());\n    AMDLoader.Configuration = Configuration;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    /**\n     * Load `scriptSrc` only once (avoid multiple <script> tags)\n     */\n    var OnlyOnceScriptLoader = (function () {\n        function OnlyOnceScriptLoader(env) {\n            this._env = env;\n            this._scriptLoader = null;\n            this._callbackMap = {};\n        }\n        OnlyOnceScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            if (!this._scriptLoader) {\n                this._scriptLoader = (this._env.isWebWorker\n                    ? new WorkerScriptLoader()\n                    : this._env.isNode\n                        ? new NodeScriptLoader(this._env)\n                        : new BrowserScriptLoader());\n            }\n            var scriptCallbacks = {\n                callback: callback,\n                errorback: errorback\n            };\n            if (this._callbackMap.hasOwnProperty(scriptSrc)) {\n                this._callbackMap[scriptSrc].push(scriptCallbacks);\n                return;\n            }\n            this._callbackMap[scriptSrc] = [scriptCallbacks];\n            this._scriptLoader.load(moduleManager, scriptSrc, function () { return _this.triggerCallback(scriptSrc); }, function (err) { return _this.triggerErrorback(scriptSrc, err); });\n        };\n        OnlyOnceScriptLoader.prototype.triggerCallback = function (scriptSrc) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].callback();\n            }\n        };\n        OnlyOnceScriptLoader.prototype.triggerErrorback = function (scriptSrc, err) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].errorback(err);\n            }\n        };\n        return OnlyOnceScriptLoader;\n    }());\n    var BrowserScriptLoader = (function () {\n        function BrowserScriptLoader() {\n        }\n        /**\n         * Attach load / error listeners to a script element and remove them when either one has fired.\n         * Implemented for browssers supporting HTML5 standard 'load' and 'error' events.\n         */\n        BrowserScriptLoader.prototype.attachListeners = function (script, callback, errorback) {\n            var unbind = function () {\n                script.removeEventListener('load', loadEventListener);\n                script.removeEventListener('error', errorEventListener);\n            };\n            var loadEventListener = function (e) {\n                unbind();\n                callback();\n            };\n            var errorEventListener = function (e) {\n                unbind();\n                errorback(e);\n            };\n            script.addEventListener('load', loadEventListener);\n            script.addEventListener('error', errorEventListener);\n        };\n        BrowserScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var script = document.createElement('script');\n            script.setAttribute('async', 'async');\n            script.setAttribute('type', 'text/javascript');\n            this.attachListeners(script, callback, errorback);\n            script.setAttribute('src', scriptSrc);\n            // Propagate CSP nonce to dynamically created script tag.\n            var cspNonce = moduleManager.getConfig().getOptionsLiteral().cspNonce;\n            if (cspNonce) {\n                script.setAttribute('nonce', cspNonce);\n            }\n            document.getElementsByTagName('head')[0].appendChild(script);\n        };\n        return BrowserScriptLoader;\n    }());\n    var WorkerScriptLoader = (function () {\n        function WorkerScriptLoader() {\n        }\n        WorkerScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            try {\n                importScripts(scriptSrc);\n                callback();\n            }\n            catch (e) {\n                errorback(e);\n            }\n        };\n        return WorkerScriptLoader;\n    }());\n    var NodeScriptLoader = (function () {\n        function NodeScriptLoader(env) {\n            this._env = env;\n            this._didInitialize = false;\n            this._didPatchNodeRequire = false;\n            this._hasCreateCachedData = false;\n        }\n        NodeScriptLoader.prototype._init = function (nodeRequire) {\n            if (this._didInitialize) {\n                return;\n            }\n            this._didInitialize = true;\n            // capture node modules\n            this._fs = nodeRequire('fs');\n            this._vm = nodeRequire('vm');\n            this._path = nodeRequire('path');\n            this._crypto = nodeRequire('crypto');\n            // check for `createCachedData`-api\n            this._hasCreateCachedData = typeof (new this._vm.Script('').createCachedData) === 'function';\n        };\n        // patch require-function of nodejs such that we can manually create a script\n        // from cached data. this is done by overriding the `Module._compile` function\n        NodeScriptLoader.prototype._initNodeRequire = function (nodeRequire, moduleManager) {\n            var nodeCachedData = moduleManager.getConfig().getOptionsLiteral().nodeCachedData;\n            if (!nodeCachedData || this._didPatchNodeRequire) {\n                return;\n            }\n            this._didPatchNodeRequire = true;\n            var that = this;\n            var Module = nodeRequire('module');\n            function makeRequireFunction(mod) {\n                var Module = mod.constructor;\n                var require = function require(path) {\n                    try {\n                        return mod.require(path);\n                    }\n                    finally {\n                        // nothing\n                    }\n                };\n                require.resolve = function resolve(request) {\n                    return Module._resolveFilename(request, mod);\n                };\n                require.main = process.mainModule;\n                require.extensions = Module._extensions;\n                require.cache = Module._cache;\n                return require;\n            }\n            Module.prototype._compile = function (content, filename) {\n                // remove shebang\n                content = content.replace(/^#!.*/, '');\n                // create wrapper function\n                var wrapper = Module.wrap(content);\n                var cachedDataPath = that._getCachedDataPath(nodeCachedData.seed, nodeCachedData.path, filename);\n                var options = { filename: filename };\n                try {\n                    options.cachedData = that._fs.readFileSync(cachedDataPath);\n                }\n                catch (e) {\n                    options.produceCachedData = !that._hasCreateCachedData;\n                }\n                var script = new that._vm.Script(wrapper, options);\n                var compileWrapper = script.runInThisContext(options);\n                var dirname = that._path.dirname(filename);\n                var require = makeRequireFunction(this);\n                var args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\n                var result = compileWrapper.apply(this.exports, args);\n                that._processCachedData(moduleManager, script, wrapper, cachedDataPath, !options.cachedData);\n                return result;\n            };\n        };\n        NodeScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            var opts = moduleManager.getConfig().getOptionsLiteral();\n            var nodeRequire = (opts.nodeRequire || AMDLoader.global.nodeRequire);\n            var nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\n            this._init(nodeRequire);\n            this._initNodeRequire(nodeRequire, moduleManager);\n            var recorder = moduleManager.getRecorder();\n            if (/^node\\|/.test(scriptSrc)) {\n                var pieces = scriptSrc.split('|');\n                var moduleExports_1 = null;\n                try {\n                    moduleExports_1 = nodeRequire(pieces[1]);\n                }\n                catch (err) {\n                    errorback(err);\n                    return;\n                }\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_1; });\n                callback();\n            }\n            else {\n                scriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\n                this._fs.readFile(scriptSrc, { encoding: 'utf8' }, function (err, data) {\n                    if (err) {\n                        errorback(err);\n                        return;\n                    }\n                    var normalizedScriptSrc = _this._path.normalize(scriptSrc);\n                    var vmScriptSrc = normalizedScriptSrc;\n                    // Make the script src friendly towards electron\n                    if (_this._env.isElectronRenderer) {\n                        var driveLetterMatch = vmScriptSrc.match(/^([a-z])\\:(.*)/i);\n                        if (driveLetterMatch) {\n                            // windows\n                            vmScriptSrc = \"file:///\" + (driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/');\n                        }\n                        else {\n                            // nix\n                            vmScriptSrc = \"file://\" + vmScriptSrc;\n                        }\n                    }\n                    var contents, prefix = '(function (require, define, __filename, __dirname) { ', suffix = '\\n});';\n                    if (data.charCodeAt(0) === NodeScriptLoader._BOM) {\n                        contents = prefix + data.substring(1) + suffix;\n                    }\n                    else {\n                        contents = prefix + data + suffix;\n                    }\n                    contents = nodeInstrumenter(contents, normalizedScriptSrc);\n                    if (!opts.nodeCachedData) {\n                        _this._loadAndEvalScript(moduleManager, scriptSrc, vmScriptSrc, contents, { filename: vmScriptSrc }, recorder, callback, errorback);\n                    }\n                    else {\n                        var cachedDataPath_1 = _this._getCachedDataPath(opts.nodeCachedData.seed, opts.nodeCachedData.path, scriptSrc);\n                        _this._fs.readFile(cachedDataPath_1, function (_err, cachedData) {\n                            // create script options\n                            var options = {\n                                filename: vmScriptSrc,\n                                produceCachedData: !_this._hasCreateCachedData && typeof cachedData === 'undefined',\n                                cachedData: cachedData\n                            };\n                            var script = _this._loadAndEvalScript(moduleManager, scriptSrc, vmScriptSrc, contents, options, recorder, callback, errorback);\n                            _this._processCachedData(moduleManager, script, contents, cachedDataPath_1, !options.cachedData);\n                        });\n                    }\n                });\n            }\n        };\n        NodeScriptLoader.prototype._loadAndEvalScript = function (moduleManager, scriptSrc, vmScriptSrc, contents, options, recorder, callback, errorback) {\n            // create script, run script\n            recorder.record(31 /* NodeBeginEvaluatingScript */, scriptSrc);\n            var script = new this._vm.Script(contents, options);\n            var r = script.runInThisContext(options);\n            var globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\n            var receivedDefineCall = false;\n            var localDefineFunc = function () {\n                receivedDefineCall = true;\n                return globalDefineFunc.apply(null, arguments);\n            };\n            localDefineFunc.amd = globalDefineFunc.amd;\n            r.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, vmScriptSrc, this._path.dirname(scriptSrc));\n            // signal done\n            recorder.record(32 /* NodeEndEvaluatingScript */, scriptSrc);\n            if (receivedDefineCall) {\n                callback();\n            }\n            else {\n                errorback(new Error(\"Didn't receive define call in \" + scriptSrc + \"!\"));\n            }\n            return script;\n        };\n        NodeScriptLoader.prototype._getCachedDataPath = function (seed, basedir, filename) {\n            var hash = this._crypto.createHash('md5').update(filename, 'utf8').update(seed, 'utf8').digest('hex');\n            var basename = this._path.basename(filename).replace(/\\.js$/, '');\n            return this._path.join(basedir, basename + \"-\" + hash + \".code\");\n        };\n        NodeScriptLoader.prototype._processCachedData = function (moduleManager, script, contents, cachedDataPath, createCachedData) {\n            var _this = this;\n            if (script.cachedDataRejected) {\n                // data rejected => delete cache file\n                moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData({\n                    errorCode: 'cachedDataRejected',\n                    path: cachedDataPath\n                });\n                NodeScriptLoader._runSoon(function () {\n                    return _this._fs.unlink(cachedDataPath, function (err) {\n                        if (err) {\n                            moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData({\n                                errorCode: 'unlink',\n                                path: cachedDataPath,\n                                detail: err\n                            });\n                        }\n                    });\n                }, moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay / 2);\n            }\n            else if (script.cachedDataProduced) {\n                // data produced => tell outside world\n                moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData(undefined, {\n                    path: cachedDataPath\n                });\n                // data produced => write cache file\n                NodeScriptLoader._runSoon(function () {\n                    return _this._fs.writeFile(cachedDataPath, script.cachedData, function (err) {\n                        if (err) {\n                            moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData({\n                                errorCode: 'writeFile',\n                                path: cachedDataPath,\n                                detail: err\n                            });\n                        }\n                    });\n                }, moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay);\n            }\n            else if (this._hasCreateCachedData && createCachedData) {\n                // NEW world\n                // data produced => tell outside world\n                moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData(undefined, {\n                    path: cachedDataPath\n                });\n                // soon'ish create and save cached data\n                NodeScriptLoader._runSoon(function () {\n                    var data = script.createCachedData(contents);\n                    _this._fs.writeFile(cachedDataPath, data, function (err) {\n                        if (!err) {\n                            return;\n                        }\n                        moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData({\n                            errorCode: 'writeFile',\n                            path: cachedDataPath,\n                            detail: err\n                        });\n                    });\n                }, moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay);\n            }\n        };\n        NodeScriptLoader._runSoon = function (callback, minTimeout) {\n            var timeout = minTimeout + Math.ceil(Math.random() * minTimeout);\n            setTimeout(callback, timeout);\n        };\n        return NodeScriptLoader;\n    }());\n    NodeScriptLoader._BOM = 0xFEFF;\n    function createScriptLoader(env) {\n        return new OnlyOnceScriptLoader(env);\n    }\n    AMDLoader.createScriptLoader = createScriptLoader;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    // ------------------------------------------------------------------------\n    // ModuleIdResolver\n    var ModuleIdResolver = (function () {\n        function ModuleIdResolver(fromModuleId) {\n            var lastSlash = fromModuleId.lastIndexOf('/');\n            if (lastSlash !== -1) {\n                this.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\n            }\n            else {\n                this.fromModulePath = '';\n            }\n        }\n        /**\n         * Normalize 'a/../name' to 'name', etc.\n         */\n        ModuleIdResolver._normalizeModuleId = function (moduleId) {\n            var r = moduleId, pattern;\n            // replace /./ => /\n            pattern = /\\/\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^./ => nothing\n            r = r.replace(/^\\.\\//g, '');\n            // replace /aa/../ => / (BUT IGNORE /../../)\n            pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^aa/../ => nothing (BUT IGNORE ../../)\n            r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\n            return r;\n        };\n        /**\n         * Resolve relative module ids\n         */\n        ModuleIdResolver.prototype.resolveModule = function (moduleId) {\n            var result = moduleId;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                if (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\n                    result = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\n                }\n            }\n            return result;\n        };\n        return ModuleIdResolver;\n    }());\n    ModuleIdResolver.ROOT = new ModuleIdResolver('');\n    AMDLoader.ModuleIdResolver = ModuleIdResolver;\n    // ------------------------------------------------------------------------\n    // Module\n    var Module = (function () {\n        function Module(id, strId, dependencies, callback, errorback, moduleIdResolver) {\n            this.id = id;\n            this.strId = strId;\n            this.dependencies = dependencies;\n            this._callback = callback;\n            this._errorback = errorback;\n            this.moduleIdResolver = moduleIdResolver;\n            this.exports = {};\n            this.exportsPassedIn = false;\n            this.unresolvedDependenciesCount = this.dependencies.length;\n            this._isComplete = false;\n        }\n        Module._safeInvokeFunction = function (callback, args) {\n            try {\n                return {\n                    returnedValue: callback.apply(AMDLoader.global, args),\n                    producedError: null\n                };\n            }\n            catch (e) {\n                return {\n                    returnedValue: null,\n                    producedError: e\n                };\n            }\n        };\n        Module._invokeFactory = function (config, strModuleId, callback, dependenciesValues) {\n            if (config.isBuild() && !AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\n                return {\n                    returnedValue: null,\n                    producedError: null\n                };\n            }\n            if (config.shouldCatchError()) {\n                return this._safeInvokeFunction(callback, dependenciesValues);\n            }\n            return {\n                returnedValue: callback.apply(AMDLoader.global, dependenciesValues),\n                producedError: null\n            };\n        };\n        Module.prototype.complete = function (recorder, config, dependenciesValues) {\n            this._isComplete = true;\n            var producedError = null;\n            if (this._callback) {\n                if (typeof this._callback === 'function') {\n                    recorder.record(21 /* BeginInvokeFactory */, this.strId);\n                    var r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\n                    producedError = r.producedError;\n                    recorder.record(22 /* EndInvokeFactory */, this.strId);\n                    if (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\n                        this.exports = r.returnedValue;\n                    }\n                }\n                else {\n                    this.exports = this._callback;\n                }\n            }\n            if (producedError) {\n                config.onError({\n                    errorCode: 'factory',\n                    moduleId: this.strId,\n                    detail: producedError\n                });\n            }\n            this.dependencies = null;\n            this._callback = null;\n            this._errorback = null;\n            this.moduleIdResolver = null;\n        };\n        /**\n         * One of the direct dependencies or a transitive dependency has failed to load.\n         */\n        Module.prototype.onDependencyError = function (err) {\n            if (this._errorback) {\n                this._errorback(err);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * Is the current module complete?\n         */\n        Module.prototype.isComplete = function () {\n            return this._isComplete;\n        };\n        return Module;\n    }());\n    AMDLoader.Module = Module;\n    var ModuleIdProvider = (function () {\n        function ModuleIdProvider() {\n            this._nextId = 0;\n            this._strModuleIdToIntModuleId = new Map();\n            this._intModuleIdToStrModuleId = [];\n            // Ensure values 0, 1, 2 are assigned accordingly with ModuleId\n            this.getModuleId('exports');\n            this.getModuleId('module');\n            this.getModuleId('require');\n        }\n        ModuleIdProvider.prototype.getMaxModuleId = function () {\n            return this._nextId;\n        };\n        ModuleIdProvider.prototype.getModuleId = function (strModuleId) {\n            var id = this._strModuleIdToIntModuleId.get(strModuleId);\n            if (typeof id === 'undefined') {\n                id = this._nextId++;\n                this._strModuleIdToIntModuleId.set(strModuleId, id);\n                this._intModuleIdToStrModuleId[id] = strModuleId;\n            }\n            return id;\n        };\n        ModuleIdProvider.prototype.getStrModuleId = function (moduleId) {\n            return this._intModuleIdToStrModuleId[moduleId];\n        };\n        return ModuleIdProvider;\n    }());\n    var RegularDependency = (function () {\n        function RegularDependency(id) {\n            this.id = id;\n        }\n        return RegularDependency;\n    }());\n    RegularDependency.EXPORTS = new RegularDependency(0 /* EXPORTS */);\n    RegularDependency.MODULE = new RegularDependency(1 /* MODULE */);\n    RegularDependency.REQUIRE = new RegularDependency(2 /* REQUIRE */);\n    AMDLoader.RegularDependency = RegularDependency;\n    var PluginDependency = (function () {\n        function PluginDependency(id, pluginId, pluginParam) {\n            this.id = id;\n            this.pluginId = pluginId;\n            this.pluginParam = pluginParam;\n        }\n        return PluginDependency;\n    }());\n    AMDLoader.PluginDependency = PluginDependency;\n    var ModuleManager = (function () {\n        function ModuleManager(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp) {\n            if (loaderAvailableTimestamp === void 0) { loaderAvailableTimestamp = 0; }\n            this._env = env;\n            this._scriptLoader = scriptLoader;\n            this._loaderAvailableTimestamp = loaderAvailableTimestamp;\n            this._defineFunc = defineFunc;\n            this._requireFunc = requireFunc;\n            this._moduleIdProvider = new ModuleIdProvider();\n            this._config = new AMDLoader.Configuration(this._env);\n            this._modules2 = [];\n            this._knownModules2 = [];\n            this._inverseDependencies2 = [];\n            this._inversePluginDependencies2 = new Map();\n            this._currentAnnonymousDefineCall = null;\n            this._recorder = null;\n            this._buildInfoPath = [];\n            this._buildInfoDefineStack = [];\n            this._buildInfoDependencies = [];\n        }\n        ModuleManager.prototype.reset = function () {\n            return new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\n        };\n        ModuleManager.prototype.getGlobalAMDDefineFunc = function () {\n            return this._defineFunc;\n        };\n        ModuleManager.prototype.getGlobalAMDRequireFunc = function () {\n            return this._requireFunc;\n        };\n        ModuleManager._findRelevantLocationInStack = function (needle, stack) {\n            var normalize = function (str) { return str.replace(/\\\\/g, '/'); };\n            var normalizedPath = normalize(needle);\n            var stackPieces = stack.split(/\\n/);\n            for (var i = 0; i < stackPieces.length; i++) {\n                var m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\n                if (m) {\n                    var stackPath = m[1];\n                    var stackLine = m[2];\n                    var stackColumn = m[3];\n                    var trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\n                    stackPath = stackPath.substr(trimPathOffset);\n                    stackPath = normalize(stackPath);\n                    if (stackPath === normalizedPath) {\n                        var r = {\n                            line: parseInt(stackLine, 10),\n                            col: parseInt(stackColumn, 10)\n                        };\n                        if (r.line === 1) {\n                            r.col -= '(function (require, define, __filename, __dirname) { '.length;\n                        }\n                        return r;\n                    }\n                }\n            }\n            throw new Error('Could not correlate define call site for needle ' + needle);\n        };\n        ModuleManager.prototype.getBuildInfo = function () {\n            if (!this._config.isBuild()) {\n                return null;\n            }\n            var result = [], resultLen = 0;\n            for (var i = 0, len = this._modules2.length; i < len; i++) {\n                var m = this._modules2[i];\n                if (!m) {\n                    continue;\n                }\n                var location_1 = this._buildInfoPath[m.id] || null;\n                var defineStack = this._buildInfoDefineStack[m.id] || null;\n                var dependencies = this._buildInfoDependencies[m.id];\n                result[resultLen++] = {\n                    id: m.strId,\n                    path: location_1,\n                    defineLocation: (location_1 && defineStack ? ModuleManager._findRelevantLocationInStack(location_1, defineStack) : null),\n                    dependencies: dependencies,\n                    shim: null,\n                    exports: m.exports\n                };\n            }\n            return result;\n        };\n        ModuleManager.prototype.getRecorder = function () {\n            if (!this._recorder) {\n                if (this._config.shouldRecordStats()) {\n                    this._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\n                }\n                else {\n                    this._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\n                }\n            }\n            return this._recorder;\n        };\n        ModuleManager.prototype.getLoaderEvents = function () {\n            return this.getRecorder().getEvents();\n        };\n        /**\n         * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\n         * @param dependecies @see defineModule\n         * @param callback @see defineModule\n         */\n        ModuleManager.prototype.enqueueDefineAnonymousModule = function (dependencies, callback) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                throw new Error('Can only have one anonymous define call per script file');\n            }\n            var stack = null;\n            if (this._config.isBuild()) {\n                stack = new Error('StackLocation').stack;\n            }\n            this._currentAnnonymousDefineCall = {\n                stack: stack,\n                dependencies: dependencies,\n                callback: callback\n            };\n        };\n        /**\n         * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\n         * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\n         * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\n         * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\n         */\n        ModuleManager.prototype.defineModule = function (strModuleId, dependencies, callback, errorback, stack, moduleIdResolver) {\n            var _this = this;\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(strModuleId); }\n            var moduleId = this._moduleIdProvider.getModuleId(strModuleId);\n            if (this._modules2[moduleId]) {\n                if (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\n                    console.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\n                }\n                // Super important! Completely ignore duplicate module definition\n                return;\n            }\n            var m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\n            this._modules2[moduleId] = m;\n            if (this._config.isBuild()) {\n                this._buildInfoDefineStack[moduleId] = stack;\n                this._buildInfoDependencies[moduleId] = m.dependencies.map(function (dep) { return _this._moduleIdProvider.getStrModuleId(dep.id); });\n            }\n            // Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\n            // unordered manner, in order to finish processing the file, execute the following method in a timeout\n            this._resolve(m);\n        };\n        ModuleManager.prototype._normalizeDependency = function (dependency, moduleIdResolver) {\n            if (dependency === 'exports') {\n                return RegularDependency.EXPORTS;\n            }\n            if (dependency === 'module') {\n                return RegularDependency.MODULE;\n            }\n            if (dependency === 'require') {\n                return RegularDependency.REQUIRE;\n            }\n            // Normalize dependency and then request it from the manager\n            var bangIndex = dependency.indexOf('!');\n            if (bangIndex >= 0) {\n                var strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\n                var pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\n                var dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\n                var pluginId = this._moduleIdProvider.getModuleId(strPluginId);\n                return new PluginDependency(dependencyId, pluginId, pluginParam);\n            }\n            return new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\n        };\n        ModuleManager.prototype._normalizeDependencies = function (dependencies, moduleIdResolver) {\n            var result = [], resultLen = 0;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                result[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\n            }\n            return result;\n        };\n        ModuleManager.prototype._relativeRequire = function (moduleIdResolver, dependencies, callback, errorback) {\n            if (typeof dependencies === 'string') {\n                return this.synchronousRequire(dependencies, moduleIdResolver);\n            }\n            this.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\n        };\n        /**\n         * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\n         * @param id The unique and absolute id of the required module\n         * @return The exports of module 'id'\n         */\n        ModuleManager.prototype.synchronousRequire = function (_strModuleId, moduleIdResolver) {\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(_strModuleId); }\n            var dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\n            var m = this._modules2[dependency.id];\n            if (!m) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\n            }\n            if (!m.isComplete()) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\n            }\n            return m.exports;\n        };\n        ModuleManager.prototype.configure = function (params, shouldOverwrite) {\n            var oldShouldRecordStats = this._config.shouldRecordStats();\n            if (shouldOverwrite) {\n                this._config = new AMDLoader.Configuration(this._env, params);\n            }\n            else {\n                this._config = this._config.cloneAndMerge(params);\n            }\n            if (this._config.shouldRecordStats() && !oldShouldRecordStats) {\n                this._recorder = null;\n            }\n        };\n        ModuleManager.prototype.getConfig = function () {\n            return this._config;\n        };\n        /**\n         * Callback from the scriptLoader when a module has been loaded.\n         * This means its code is available and has been executed.\n         */\n        ModuleManager.prototype._onLoad = function (moduleId) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                var defineCall = this._currentAnnonymousDefineCall;\n                this._currentAnnonymousDefineCall = null;\n                // Hit an anonymous define call\n                this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\n            }\n        };\n        ModuleManager.prototype._createLoadError = function (moduleId, err) {\n            var _this = this;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var neededBy = (this._inverseDependencies2[moduleId] || []).map(function (intModuleId) { return _this._moduleIdProvider.getStrModuleId(intModuleId); });\n            return {\n                errorCode: 'load',\n                moduleId: strModuleId,\n                neededBy: neededBy,\n                detail: err\n            };\n        };\n        /**\n         * Callback from the scriptLoader when a module hasn't been loaded.\n         * This means that the script was not found (e.g. 404) or there was an error in the script.\n         */\n        ModuleManager.prototype._onLoadError = function (moduleId, err) {\n            var error = this._createLoadError(moduleId, err);\n            // Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\n            var seenModuleId = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                seenModuleId[i] = false;\n            }\n            var someoneNotified = false;\n            var queue = [];\n            queue.push(moduleId);\n            seenModuleId[moduleId] = true;\n            while (queue.length > 0) {\n                var queueElement = queue.shift();\n                var m = this._modules2[queueElement];\n                if (m) {\n                    someoneNotified = m.onDependencyError(error) || someoneNotified;\n                }\n                var inverseDeps = this._inverseDependencies2[queueElement];\n                if (inverseDeps) {\n                    for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                        var inverseDep = inverseDeps[i];\n                        if (!seenModuleId[inverseDep]) {\n                            queue.push(inverseDep);\n                            seenModuleId[inverseDep] = true;\n                        }\n                    }\n                }\n            }\n            if (!someoneNotified) {\n                this._config.onError(error);\n            }\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns true if there is such a path or false otherwise.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._hasDependencyPath = function (fromId, toId) {\n            var from = this._modules2[fromId];\n            if (!from) {\n                return false;\n            }\n            var inQueue = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                inQueue[i] = false;\n            }\n            var queue = [];\n            // Insert 'from' in queue\n            queue.push(from);\n            inQueue[fromId] = true;\n            while (queue.length > 0) {\n                // Pop first inserted element of queue\n                var element = queue.shift();\n                var dependencies = element.dependencies;\n                if (dependencies) {\n                    // Walk the element's dependencies\n                    for (var i = 0, len = dependencies.length; i < len; i++) {\n                        var dependency = dependencies[i];\n                        if (dependency.id === toId) {\n                            // There is a path to 'to'\n                            return true;\n                        }\n                        var dependencyModule = this._modules2[dependency.id];\n                        if (dependencyModule && !inQueue[dependency.id]) {\n                            // Insert 'dependency' in queue\n                            inQueue[dependency.id] = true;\n                            queue.push(dependencyModule);\n                        }\n                    }\n                }\n            }\n            // There is no path to 'to'\n            return false;\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns cycle as array.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._findCyclePath = function (fromId, toId, depth) {\n            if (fromId === toId || depth === 50) {\n                return [fromId];\n            }\n            var from = this._modules2[fromId];\n            if (!from) {\n                return null;\n            }\n            // Walk the element's dependencies\n            var dependencies = from.dependencies;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                var path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\n                if (path !== null) {\n                    path.push(fromId);\n                    return path;\n                }\n            }\n            return null;\n        };\n        /**\n         * Create the local 'require' that is passed into modules\n         */\n        ModuleManager.prototype._createRequire = function (moduleIdResolver) {\n            var _this = this;\n            var result = (function (dependencies, callback, errorback) {\n                return _this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\n            });\n            result.toUrl = function (id) {\n                return _this._config.requireToUrl(moduleIdResolver.resolveModule(id));\n            };\n            result.getStats = function () {\n                return _this.getLoaderEvents();\n            };\n            result.__$__nodeRequire = AMDLoader.global.nodeRequire;\n            return result;\n        };\n        ModuleManager.prototype._loadModule = function (moduleId) {\n            var _this = this;\n            if (this._modules2[moduleId] || this._knownModules2[moduleId]) {\n                // known module\n                return;\n            }\n            this._knownModules2[moduleId] = true;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var paths = this._config.moduleIdToPaths(strModuleId);\n            var scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\n            if (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\n                paths.push('node|' + strModuleId);\n            }\n            var lastPathIndex = -1;\n            var loadNextPath = function (err) {\n                lastPathIndex++;\n                if (lastPathIndex >= paths.length) {\n                    // No more paths to try\n                    _this._onLoadError(moduleId, err);\n                }\n                else {\n                    var currentPath_1 = paths[lastPathIndex];\n                    var recorder_1 = _this.getRecorder();\n                    if (_this._config.isBuild() && currentPath_1 === 'empty:') {\n                        _this._buildInfoPath[moduleId] = currentPath_1;\n                        _this.defineModule(_this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\n                        _this._onLoad(moduleId);\n                        return;\n                    }\n                    recorder_1.record(10 /* BeginLoadingScript */, currentPath_1);\n                    _this._scriptLoader.load(_this, currentPath_1, function () {\n                        if (_this._config.isBuild()) {\n                            _this._buildInfoPath[moduleId] = currentPath_1;\n                        }\n                        recorder_1.record(11 /* EndLoadingScriptOK */, currentPath_1);\n                        _this._onLoad(moduleId);\n                    }, function (err) {\n                        recorder_1.record(12 /* EndLoadingScriptError */, currentPath_1);\n                        loadNextPath(err);\n                    });\n                }\n            };\n            loadNextPath(null);\n        };\n        /**\n         * Resolve a plugin dependency with the plugin loaded & complete\n         * @param module The module that has this dependency\n         * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\n         * @param plugin The plugin (what the plugin exports)\n         */\n        ModuleManager.prototype._loadPluginDependency = function (plugin, pluginDependency) {\n            var _this = this;\n            if (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\n                // known module\n                return;\n            }\n            this._knownModules2[pluginDependency.id] = true;\n            // Delegate the loading of the resource to the plugin\n            var load = (function (value) {\n                _this.defineModule(_this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\n            });\n            load.error = function (err) {\n                _this._config.onError(_this._createLoadError(pluginDependency.id, err));\n            };\n            plugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\n        };\n        /**\n         * Examine the dependencies of module 'module' and resolve them as needed.\n         */\n        ModuleManager.prototype._resolve = function (module) {\n            var _this = this;\n            var dependencies = module.dependencies;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                var dependency = dependencies[i];\n                if (dependency === RegularDependency.EXPORTS) {\n                    module.exportsPassedIn = true;\n                    module.unresolvedDependenciesCount--;\n                    continue;\n                }\n                if (dependency === RegularDependency.MODULE) {\n                    module.unresolvedDependenciesCount--;\n                    continue;\n                }\n                if (dependency === RegularDependency.REQUIRE) {\n                    module.unresolvedDependenciesCount--;\n                    continue;\n                }\n                var dependencyModule = this._modules2[dependency.id];\n                if (dependencyModule && dependencyModule.isComplete()) {\n                    module.unresolvedDependenciesCount--;\n                    continue;\n                }\n                if (this._hasDependencyPath(dependency.id, module.id)) {\n                    console.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\n                    var cyclePath = this._findCyclePath(dependency.id, module.id, 0);\n                    cyclePath.reverse();\n                    cyclePath.push(dependency.id);\n                    console.warn(cyclePath.map(function (id) { return _this._moduleIdProvider.getStrModuleId(id); }).join(' => \\n'));\n                    // Break the cycle\n                    module.unresolvedDependenciesCount--;\n                    continue;\n                }\n                // record inverse dependency\n                this._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\n                this._inverseDependencies2[dependency.id].push(module.id);\n                if (dependency instanceof PluginDependency) {\n                    var plugin = this._modules2[dependency.pluginId];\n                    if (plugin && plugin.isComplete()) {\n                        this._loadPluginDependency(plugin.exports, dependency);\n                        continue;\n                    }\n                    // Record dependency for when the plugin gets loaded\n                    var inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\n                    if (!inversePluginDeps) {\n                        inversePluginDeps = [];\n                        this._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\n                    }\n                    inversePluginDeps.push(dependency);\n                    this._loadModule(dependency.pluginId);\n                    continue;\n                }\n                this._loadModule(dependency.id);\n            }\n            if (module.unresolvedDependenciesCount === 0) {\n                this._onModuleComplete(module);\n            }\n        };\n        ModuleManager.prototype._onModuleComplete = function (module) {\n            var _this = this;\n            var recorder = this.getRecorder();\n            if (module.isComplete()) {\n                // already done\n                return;\n            }\n            var dependencies = module.dependencies;\n            var dependenciesValues = [];\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                var dependency = dependencies[i];\n                if (dependency === RegularDependency.EXPORTS) {\n                    dependenciesValues[i] = module.exports;\n                    continue;\n                }\n                if (dependency === RegularDependency.MODULE) {\n                    dependenciesValues[i] = {\n                        id: module.strId,\n                        config: function () {\n                            return _this._config.getConfigForModule(module.strId);\n                        }\n                    };\n                    continue;\n                }\n                if (dependency === RegularDependency.REQUIRE) {\n                    dependenciesValues[i] = this._createRequire(module.moduleIdResolver);\n                    continue;\n                }\n                var dependencyModule = this._modules2[dependency.id];\n                if (dependencyModule) {\n                    dependenciesValues[i] = dependencyModule.exports;\n                    continue;\n                }\n                dependenciesValues[i] = null;\n            }\n            module.complete(recorder, this._config, dependenciesValues);\n            // Fetch and clear inverse dependencies\n            var inverseDeps = this._inverseDependencies2[module.id];\n            this._inverseDependencies2[module.id] = null;\n            if (inverseDeps) {\n                // Resolve one inverse dependency at a time, always\n                // on the lookout for a completed module.\n                for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                    var inverseDependencyId = inverseDeps[i];\n                    var inverseDependency = this._modules2[inverseDependencyId];\n                    inverseDependency.unresolvedDependenciesCount--;\n                    if (inverseDependency.unresolvedDependenciesCount === 0) {\n                        this._onModuleComplete(inverseDependency);\n                    }\n                }\n            }\n            var inversePluginDeps = this._inversePluginDependencies2.get(module.id);\n            if (inversePluginDeps) {\n                // This module is used as a plugin at least once\n                // Fetch and clear these inverse plugin dependencies\n                this._inversePluginDependencies2.delete(module.id);\n                // Resolve plugin dependencies one at a time\n                for (var i = 0, len = inversePluginDeps.length; i < len; i++) {\n                    this._loadPluginDependency(module.exports, inversePluginDeps[i]);\n                }\n            }\n        };\n        return ModuleManager;\n    }());\n    AMDLoader.ModuleManager = ModuleManager;\n})(AMDLoader || (AMDLoader = {}));\nvar define;\nvar AMDLoader;\n(function (AMDLoader) {\n    var env = new AMDLoader.Environment();\n    var moduleManager = null;\n    var DefineFunc = function (id, dependencies, callback) {\n        if (typeof id !== 'string') {\n            callback = dependencies;\n            dependencies = id;\n            id = null;\n        }\n        if (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\n            callback = dependencies;\n            dependencies = null;\n        }\n        if (!dependencies) {\n            dependencies = ['require', 'exports', 'module'];\n        }\n        if (id) {\n            moduleManager.defineModule(id, dependencies, callback, null, null);\n        }\n        else {\n            moduleManager.enqueueDefineAnonymousModule(dependencies, callback);\n        }\n    };\n    DefineFunc.amd = {\n        jQuery: true\n    };\n    var _requireFunc_config = function (params, shouldOverwrite) {\n        if (shouldOverwrite === void 0) { shouldOverwrite = false; }\n        moduleManager.configure(params, shouldOverwrite);\n    };\n    var RequireFunc = function () {\n        if (arguments.length === 1) {\n            if ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\n                _requireFunc_config(arguments[0]);\n                return;\n            }\n            if (typeof arguments[0] === 'string') {\n                return moduleManager.synchronousRequire(arguments[0]);\n            }\n        }\n        if (arguments.length === 2 || arguments.length === 3) {\n            if (Array.isArray(arguments[0])) {\n                moduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\n                return;\n            }\n        }\n        throw new Error('Unrecognized require call');\n    };\n    RequireFunc.config = _requireFunc_config;\n    RequireFunc.getConfig = function () {\n        return moduleManager.getConfig().getOptionsLiteral();\n    };\n    RequireFunc.reset = function () {\n        moduleManager = moduleManager.reset();\n    };\n    RequireFunc.getBuildInfo = function () {\n        return moduleManager.getBuildInfo();\n    };\n    RequireFunc.getStats = function () {\n        return moduleManager.getLoaderEvents();\n    };\n    RequireFunc.define = function () {\n        return DefineFunc.apply(null, arguments);\n    };\n    function init() {\n        if (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\n            var _nodeRequire_1 = (AMDLoader.global.require || require);\n            if (typeof _nodeRequire_1 === 'function' && typeof _nodeRequire_1.resolve === 'function') {\n                // re-expose node's require function\n                var nodeRequire = function (what) {\n                    moduleManager.getRecorder().record(33 /* NodeBeginNativeRequire */, what);\n                    try {\n                        return _nodeRequire_1(what);\n                    }\n                    finally {\n                        moduleManager.getRecorder().record(34 /* NodeEndNativeRequire */, what);\n                    }\n                };\n                AMDLoader.global.nodeRequire = nodeRequire;\n                RequireFunc.nodeRequire = nodeRequire;\n                RequireFunc.__$__nodeRequire = nodeRequire;\n            }\n        }\n        if (env.isNode && !env.isElectronRenderer) {\n            module.exports = RequireFunc;\n            require = RequireFunc;\n        }\n        else {\n            if (!env.isElectronRenderer) {\n                AMDLoader.global.define = DefineFunc;\n            }\n            AMDLoader.global.require = RequireFunc;\n        }\n    }\n    AMDLoader.init = init;\n    if (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\n        moduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\n        // The global variable require can configure the loader\n        if (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\n            RequireFunc.config(AMDLoader.global.require);\n        }\n        // This define is for the local closure defined in node in the case that the loader is concatenated\n        define = function () {\n            return DefineFunc.apply(null, arguments);\n        };\n        define.amd = DefineFunc.amd;\n        if (typeof doNotInitLoader === 'undefined') {\n            init();\n        }\n    }\n})(AMDLoader || (AMDLoader = {}));\n","\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tlet mid = ((low + high) / 2) | 0;\n\t\tlet comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tlet mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tlet mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: Array<T | undefined | null>): T[] {\n\tif (!array) {\n\t\treturn array;\n\t}\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: ReadonlyArray<T> | undefined | null): obj is Array<T> {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | null;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | null): T | null;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | null = null): T | null {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\tpublic originalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\tpublic originalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tpublic modifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tpublic modifiedLength: number;\n\n\t/**\n\t * Constructs a new DiffChange with the given sequence information\n\t * and content.\n\t */\n\tconstructor(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number) {\n\t\t//Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n\t\tthis.originalStart = originalStart;\n\t\tthis.originalLength = originalLength;\n\t\tthis.modifiedStart = modifiedStart;\n\t\tthis.modifiedLength = modifiedLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the original sequence.\n\t */\n\tpublic getOriginalEnd() {\n\t\treturn this.originalStart + this.originalLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the modified sequence.\n\t */\n\tpublic getModifiedEnd() {\n\t\treturn this.modifiedStart + this.modifiedLength;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DiffChange } from 'vs/base/common/diff/diffChange';\n\nfunction createStringSequence(a: string): ISequence {\n\treturn {\n\t\tgetLength() { return a.length; },\n\t\tgetElementAtIndex(pos: number) { return a.charCodeAt(pos); }\n\t};\n}\n\nexport function stringDiff(original: string, modified: string, pretty: boolean): IDiffChange[] {\n\treturn new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n\n\nexport interface ISequence {\n\tgetLength(): number;\n\tgetElementAtIndex(index: number): number | string;\n}\n\nexport interface IDiffChange {\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\toriginalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\toriginalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tmodifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tmodifiedLength: number;\n}\n\nexport interface IContinueProcessingPredicate {\n\t(furthestOriginalIndex: number, originalSequence: ISequence, matchLengthOfLongest: number): boolean;\n}\n\n//\n// The code below has been ported from a C# implementation in VS\n//\n\nexport class Debug {\n\n\tpublic static Assert(condition: boolean, message: string): void {\n\t\tif (!condition) {\n\t\t\tthrow new Error(message);\n\t\t}\n\t}\n}\n\nexport class MyArray {\n\t/**\n\t * Copies a range of elements from an Array starting at the specified source index and pastes\n\t * them to another Array starting at the specified destination index. The length and the indexes\n\t * are specified as 64-bit integers.\n\t * sourceArray:\n\t *\t\tThe Array that contains the data to copy.\n\t * sourceIndex:\n\t *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n\t * destinationArray:\n\t *\t\tThe Array that receives the data.\n\t * destinationIndex:\n\t *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n\t * length:\n\t *\t\tA 64-bit integer that represents the number of elements to copy.\n\t */\n\tpublic static Copy(sourceArray: any[], sourceIndex: number, destinationArray: any[], destinationIndex: number, length: number) {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n\t\t}\n\t}\n}\n\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nlet MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n\n\n\n\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n\n\tprivate m_changes: DiffChange[];\n\tprivate m_originalStart: number;\n\tprivate m_modifiedStart: number;\n\tprivate m_originalCount: number;\n\tprivate m_modifiedCount: number;\n\n\t/**\n\t * Constructs a new DiffChangeHelper for the given DiffSequences.\n\t */\n\tconstructor() {\n\t\tthis.m_changes = [];\n\t\tthis.m_originalStart = Number.MAX_VALUE;\n\t\tthis.m_modifiedStart = Number.MAX_VALUE;\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t}\n\n\t/**\n\t * Marks the beginning of the next change in the set of differences.\n\t */\n\tpublic MarkNextChange(): void {\n\t\t// Only add to the list if there is something to add\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Add the new change to our list\n\t\t\tthis.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount,\n\t\t\t\tthis.m_modifiedStart, this.m_modifiedCount));\n\t\t}\n\n\t\t// Reset for the next change\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t\tthis.m_originalStart = Number.MAX_VALUE;\n\t\tthis.m_modifiedStart = Number.MAX_VALUE;\n\t}\n\n\t/**\n\t * Adds the original element at the given position to the elements\n\t * affected by the current change. The modified index gives context\n\t * to the change position with respect to the original sequence.\n\t * @param originalIndex The index of the original element to add.\n\t * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n\t */\n\tpublic AddOriginalElement(originalIndex: number, modifiedIndex: number) {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_originalCount++;\n\t}\n\n\t/**\n\t * Adds the modified element at the given position to the elements\n\t * affected by the current change. The original index gives context\n\t * to the change position with respect to the modified sequence.\n\t * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n\t * @param modifiedIndex The index of the modified element to add.\n\t */\n\tpublic AddModifiedElement(originalIndex: number, modifiedIndex: number): void {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_modifiedCount++;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class.\n\t */\n\tpublic getChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\treturn this.m_changes;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class in the reverse order\n\t */\n\tpublic getReverseChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\tthis.m_changes.reverse();\n\t\treturn this.m_changes;\n\t}\n\n}\n\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n\n\tprivate OriginalSequence: ISequence;\n\tprivate ModifiedSequence: ISequence;\n\tprivate ContinueProcessingPredicate: IContinueProcessingPredicate | null;\n\n\tprivate m_forwardHistory: number[][];\n\tprivate m_reverseHistory: number[][];\n\n\t/**\n\t * Constructs the DiffFinder\n\t */\n\tconstructor(originalSequence: ISequence, newSequence: ISequence, continueProcessingPredicate: IContinueProcessingPredicate | null = null) {\n\t\tthis.OriginalSequence = originalSequence;\n\t\tthis.ModifiedSequence = newSequence;\n\t\tthis.ContinueProcessingPredicate = continueProcessingPredicate;\n\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\t}\n\n\tprivate ElementsAreEqual(originalIndex: number, newIndex: number): boolean {\n\t\treturn (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\n\t}\n\n\tprivate OriginalElementsAreEqual(index1: number, index2: number): boolean {\n\t\treturn (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\n\t}\n\n\tprivate ModifiedElementsAreEqual(index1: number, index2: number): boolean {\n\t\treturn (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\n\t}\n\n\tpublic ComputeDiff(pretty: boolean): IDiffChange[] {\n\t\treturn this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n\t}\n\n\t/**\n\t * Computes the differences between the original and modified input\n\t * sequences on the bounded range.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate _ComputeDiff(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, pretty: boolean): DiffChange[] {\n\t\tlet quitEarlyArr = [false];\n\t\tlet changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n\n\t\tif (pretty) {\n\t\t\t// We have to clean up the computed diff to be more intuitive\n\t\t\t// but it turns out this cannot be done correctly until the entire set\n\t\t\t// of diffs have been computed\n\t\t\treturn this.PrettifyChanges(changes);\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\t/**\n\t * Private helper method which computes the differences on the bounded range\n\t * recursively.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate ComputeDiffRecursive(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, quitEarlyArr: boolean[]): DiffChange[] {\n\t\tquitEarlyArr[0] = false;\n\n\t\t// Find the start of the differences\n\t\twhile (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n\t\t\toriginalStart++;\n\t\t\tmodifiedStart++;\n\t\t}\n\n\t\t// Find the end of the differences\n\t\twhile (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n\t\t\toriginalEnd--;\n\t\t\tmodifiedEnd--;\n\t\t}\n\n\t\t// In the special case where we either have all insertions or all deletions or the sequences are identical\n\t\tif (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n\t\t\tlet changes: DiffChange[];\n\n\t\t\tif (modifiedStart <= modifiedEnd) {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\n\t\t\t\t// All insertions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t];\n\t\t\t} else if (originalStart <= originalEnd) {\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// All deletions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// Identical sequences - No differences\n\t\t\t\tchanges = [];\n\t\t\t}\n\n\t\t\treturn changes;\n\t\t}\n\n\t\t// This problem can be solved using the Divide-And-Conquer technique.\n\t\tlet midOriginalArr = [0], midModifiedArr = [0];\n\t\tlet result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n\n\t\tlet midOriginal = midOriginalArr[0];\n\t\tlet midModified = midModifiedArr[0];\n\n\t\tif (result !== null) {\n\t\t\t// Result is not-null when there was enough memory to compute the changes while\n\t\t\t// searching for the recursion point\n\t\t\treturn result;\n\t\t} else if (!quitEarlyArr[0]) {\n\t\t\t// We can break the problem down recursively by finding the changes in the\n\t\t\t// First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n\t\t\t// Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n\t\t\t// NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n\n\t\t\tlet leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n\t\t\tlet rightChanges: DiffChange[] = [];\n\n\t\t\tif (!quitEarlyArr[0]) {\n\t\t\t\trightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n\t\t\t} else {\n\t\t\t\t// We did't have time to finish the first half, so we don't have time to compute this half.\n\t\t\t\t// Consider the entire rest of the sequence different.\n\t\t\t\trightChanges = [\n\t\t\t\t\tnew DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n\t\t\t\t];\n\t\t\t}\n\n\t\t\treturn this.ConcatenateChanges(leftChanges, rightChanges);\n\t\t}\n\n\t\t// If we hit here, we quit early, and so can't return anything meaningful\n\t\treturn [\n\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t];\n\t}\n\n\tprivate WALKTRACE(diagonalForwardBase: number, diagonalForwardStart: number, diagonalForwardEnd: number, diagonalForwardOffset: number,\n\t\tdiagonalReverseBase: number, diagonalReverseStart: number, diagonalReverseEnd: number, diagonalReverseOffset: number,\n\t\tforwardPoints: number[], reversePoints: number[],\n\t\toriginalIndex: number, originalEnd: number, midOriginalArr: number[],\n\t\tmodifiedIndex: number, modifiedEnd: number, midModifiedArr: number[],\n\t\tdeltaIsEven: boolean, quitEarlyArr: boolean[]): DiffChange[] {\n\t\tlet forwardChanges: DiffChange[] | null = null, reverseChanges: DiffChange[] | null = null;\n\n\t\t// First, walk backward through the forward diagonals history\n\t\tlet changeHelper = new DiffChangeHelper();\n\t\tlet diagonalMin = diagonalForwardStart;\n\t\tlet diagonalMax = diagonalForwardEnd;\n\t\tlet diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n\t\tlet lastOriginalIndex = Number.MIN_VALUE;\n\t\tlet historyIndex = this.m_forwardHistory.length - 1;\n\t\tlet diagonal: number;\n\n\t\tdo {\n\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\tdiagonal = diagonalRelative + diagonalForwardBase;\n\n\t\t\t// Figure out where we came from\n\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t// Vertical line (the element is an insert)\n\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t} else {\n\t\t\t\t// Horizontal line (the element is a deletion)\n\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex - 1;\n\t\t\t\tchangeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t}\n\n\t\t\tif (historyIndex >= 0) {\n\t\t\t\tforwardPoints = this.m_forwardHistory[historyIndex];\n\t\t\t\tdiagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n\t\t\t\tdiagonalMin = 1;\n\t\t\t\tdiagonalMax = forwardPoints.length - 1;\n\t\t\t}\n\t\t} while (--historyIndex >= -1);\n\n\t\t// Ironically, we get the forward changes as the reverse of the\n\t\t// order we added them since we technically added them backwards\n\t\tforwardChanges = changeHelper.getReverseChanges();\n\n\t\tif (quitEarlyArr[0]) {\n\t\t\t// TODO: Calculate a partial from the reverse diagonals.\n\t\t\t//       For now, just assume everything after the midOriginal/midModified point is a diff\n\n\t\t\tlet originalStartPoint = midOriginalArr[0] + 1;\n\t\t\tlet modifiedStartPoint = midModifiedArr[0] + 1;\n\n\t\t\tif (forwardChanges !== null && forwardChanges.length > 0) {\n\t\t\t\tlet lastForwardChange = forwardChanges[forwardChanges.length - 1];\n\t\t\t\toriginalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n\t\t\t\tmodifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n\t\t\t}\n\n\t\t\treverseChanges = [\n\t\t\t\tnew DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1,\n\t\t\t\t\tmodifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n\t\t\t];\n\t\t} else {\n\t\t\t// Now walk backward through the reverse diagonals history\n\t\t\tchangeHelper = new DiffChangeHelper();\n\t\t\tdiagonalMin = diagonalReverseStart;\n\t\t\tdiagonalMax = diagonalReverseEnd;\n\t\t\tdiagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n\t\t\tlastOriginalIndex = Number.MAX_VALUE;\n\t\t\thistoryIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n\n\t\t\tdo {\n\t\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\t\tdiagonal = diagonalRelative + diagonalReverseBase;\n\n\t\t\t\t// Figure out where we came from\n\t\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\t// Horizontal line (the element is a deletion))\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex + 1;\n\t\t\t\t\tchangeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t} else {\n\t\t\t\t\t// Vertical line (the element is an insertion)\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t}\n\n\t\t\t\tif (historyIndex >= 0) {\n\t\t\t\t\treversePoints = this.m_reverseHistory[historyIndex];\n\t\t\t\t\tdiagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n\t\t\t\t\tdiagonalMin = 1;\n\t\t\t\t\tdiagonalMax = reversePoints.length - 1;\n\t\t\t\t}\n\t\t\t} while (--historyIndex >= -1);\n\n\t\t\t// There are cases where the reverse history will find diffs that\n\t\t\t// are correct, but not intuitive, so we need shift them.\n\t\t\treverseChanges = changeHelper.getChanges();\n\t\t}\n\n\t\treturn this.ConcatenateChanges(forwardChanges, reverseChanges);\n\t}\n\n\t/**\n\t * Given the range to compute the diff on, this method finds the point:\n\t * (midOriginal, midModified)\n\t * that exists in the middle of the LCS of the two sequences and\n\t * is the point at which the LCS problem may be broken down recursively.\n\t * This method will try to keep the LCS trace in memory. If the LCS recursion\n\t * point is calculated and the full trace is available in memory, then this method\n\t * will return the change list.\n\t * @param originalStart The start bound of the original sequence range\n\t * @param originalEnd The end bound of the original sequence range\n\t * @param modifiedStart The start bound of the modified sequence range\n\t * @param modifiedEnd The end bound of the modified sequence range\n\t * @param midOriginal The middle point of the original sequence range\n\t * @param midModified The middle point of the modified sequence range\n\t * @returns The diff changes, if available, otherwise null\n\t */\n\tprivate ComputeRecursionPoint(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, midOriginalArr: number[], midModifiedArr: number[], quitEarlyArr: boolean[]) {\n\t\tlet originalIndex = 0, modifiedIndex = 0;\n\t\tlet diagonalForwardStart = 0, diagonalForwardEnd = 0;\n\t\tlet diagonalReverseStart = 0, diagonalReverseEnd = 0;\n\t\tlet numDifferences: number;\n\n\t\t// To traverse the edit graph and produce the proper LCS, our actual\n\t\t// start position is just outside the given boundary\n\t\toriginalStart--;\n\t\tmodifiedStart--;\n\n\t\t// We set these up to make the compiler happy, but they will\n\t\t// be replaced before we return with the actual recursion point\n\t\tmidOriginalArr[0] = 0;\n\t\tmidModifiedArr[0] = 0;\n\n\t\t// Clear out the history\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\n\t\t// Each cell in the two arrays corresponds to a diagonal in the edit graph.\n\t\t// The integer value in the cell represents the originalIndex of the furthest\n\t\t// reaching point found so far that ends in that diagonal.\n\t\t// The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n\t\tlet maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n\t\tlet numDiagonals = maxDifferences + 1;\n\t\tlet forwardPoints: number[] = new Array<number>(numDiagonals);\n\t\tlet reversePoints: number[] = new Array<number>(numDiagonals);\n\t\t// diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n\t\t// diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n\t\tlet diagonalForwardBase = (modifiedEnd - modifiedStart);\n\t\tlet diagonalReverseBase = (originalEnd - originalStart);\n\t\t// diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalForwardBase)\n\t\t// diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalReverseBase)\n\t\tlet diagonalForwardOffset = (originalStart - modifiedStart);\n\t\tlet diagonalReverseOffset = (originalEnd - modifiedEnd);\n\n\t\t// delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n\t\t//   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n\t\t// The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n\t\tlet delta = diagonalReverseBase - diagonalForwardBase;\n\t\tlet deltaIsEven = (delta % 2 === 0);\n\n\t\t// Here we set up the start and end points as the furthest points found so far\n\t\t// in both the forward and reverse directions, respectively\n\t\tforwardPoints[diagonalForwardBase] = originalStart;\n\t\treversePoints[diagonalReverseBase] = originalEnd;\n\n\t\t// Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n\t\tquitEarlyArr[0] = false;\n\n\n\n\t\t// A couple of points:\n\t\t// --With this method, we iterate on the number of differences between the two sequences.\n\t\t//   The more differences there actually are, the longer this will take.\n\t\t// --Also, as the number of differences increases, we have to search on diagonals further\n\t\t//   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n\t\t// --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n\t\t//   is even and odd diagonals only when numDifferences is odd.\n\t\tlet diagonal: number, tempOriginalIndex: number;\n\t\tfor (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n\t\t\tlet furthestOriginalIndex = 0;\n\t\t\tlet furthestModifiedIndex = 0;\n\n\t\t\t// Run the algorithm in the forward direction\n\t\t\tdiagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tdiagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tfor (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalStart, modifiedStart)\n\t\t\t\tif (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap in step 3\n\t\t\t\ttempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// so long as the elements are equal.\n\t\t\t\twhile (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n\t\t\t\t\toriginalIndex++;\n\t\t\t\t\tmodifiedIndex++;\n\t\t\t\t}\n\t\t\t\tforwardPoints[diagonal] = originalIndex;\n\n\t\t\t\tif (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n\t\t\t\t\tfurthestOriginalIndex = originalIndex;\n\t\t\t\t\tfurthestModifiedIndex = modifiedIndex;\n\t\t\t\t}\n\n\t\t\t\t// STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n\t\t\t\t// and diagonal is in the range of reverse diagonals computed for numDifferences-1\n\t\t\t\t// (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n\t\t\t\t\tif (originalIndex >= reversePoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check to see if we should be quitting early, before moving on to the next iteration.\n\t\t\tlet matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n\n\t\t\tif (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n\t\t\t\t// We can't finish, so skip ahead to generating a result from what we have.\n\t\t\t\tquitEarlyArr[0] = true;\n\n\t\t\t\t// Use the furthest distance we got in the forward direction.\n\t\t\t\tmidOriginalArr[0] = furthestOriginalIndex;\n\t\t\t\tmidModifiedArr[0] = furthestModifiedIndex;\n\n\t\t\t\tif (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n\t\t\t\t\t// Enough of the history is in memory to walk it backwards\n\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// We didn't actually remember enough of the history.\n\n\t\t\t\t\t//Since we are quiting the diff early, we need to shift back the originalStart and modified start\n\t\t\t\t\t//back into the boundary limits since we decremented their value above beyond the boundary limit.\n\t\t\t\t\toriginalStart++;\n\t\t\t\t\tmodifiedStart++;\n\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1,\n\t\t\t\t\t\t\tmodifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Run the algorithm in the reverse direction\n\t\t\tdiagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tdiagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tfor (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalEnd, modifiedEnd)\n\t\t\t\tif (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap\n\t\t\t\ttempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// as long as the elements are equal.\n\t\t\t\twhile (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n\t\t\t\t\toriginalIndex--;\n\t\t\t\t\tmodifiedIndex--;\n\t\t\t\t}\n\t\t\t\treversePoints[diagonal] = originalIndex;\n\n\t\t\t\t// STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n\t\t\t\t// and diagonal is in the range of forward diagonals computed for numDifferences\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n\t\t\t\t\tif (originalIndex <= forwardPoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Save current vectors to history before the next iteration\n\t\t\tif (numDifferences <= MaxDifferencesHistory) {\n\t\t\t\t// We are allocating space for one extra int, which we fill with\n\t\t\t\t// the index of the diagonal base index\n\t\t\t\tlet temp: number[] = new Array<number>(diagonalForwardEnd - diagonalForwardStart + 2);\n\t\t\t\ttemp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n\t\t\t\tMyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n\t\t\t\tthis.m_forwardHistory.push(temp);\n\n\t\t\t\ttemp = new Array<number>(diagonalReverseEnd - diagonalReverseStart + 2);\n\t\t\t\ttemp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n\t\t\t\tMyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n\t\t\t\tthis.m_reverseHistory.push(temp);\n\t\t\t}\n\n\t\t}\n\n\n\n\t\t// If we got here, then we have the full trace in history. We just have to convert it to a change list\n\t\t// NOTE: This part is a bit messy\n\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\tforwardPoints, reversePoints,\n\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\tdeltaIsEven, quitEarlyArr\n\t\t);\n\t}\n\n\t/**\n\t * Shifts the given changes to provide a more intuitive diff.\n\t * While the first element in a diff matches the first element after the diff,\n\t * we shift the diff down.\n\t *\n\t * @param changes The list of changes to shift\n\t * @returns The shifted changes\n\t */\n\tprivate PrettifyChanges(changes: DiffChange[]): DiffChange[] {\n\n\t\t// Shift all the changes down first\n\t\tfor (let i = 0; i < changes.length; i++) {\n\t\t\tconst change = changes[i];\n\t\t\tconst originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n\t\t\tconst modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\twhile (change.originalStart + change.originalLength < originalStop &&\n\t\t\t\tchange.modifiedStart + change.modifiedLength < modifiedStop &&\n\t\t\t\t(!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n\t\t\t\t(!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n\t\t\t\tchange.originalStart++;\n\t\t\t\tchange.modifiedStart++;\n\t\t\t}\n\n\t\t\tlet mergedChangeArr: Array<DiffChange | null> = [null];\n\t\t\tif (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n\t\t\t\tchanges[i] = mergedChangeArr[0]!;\n\t\t\t\tchanges.splice(i + 1, 1);\n\t\t\t\ti--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t// Shift changes back up until we hit empty or whitespace-only lines\n\t\tfor (let i = changes.length - 1; i >= 0; i--) {\n\t\t\tconst change = changes[i];\n\n\t\t\tlet originalStop = 0;\n\t\t\tlet modifiedStop = 0;\n\t\t\tif (i > 0) {\n\t\t\t\tconst prevChange = changes[i - 1];\n\t\t\t\tif (prevChange.originalLength > 0) {\n\t\t\t\t\toriginalStop = prevChange.originalStart + prevChange.originalLength;\n\t\t\t\t}\n\t\t\t\tif (prevChange.modifiedLength > 0) {\n\t\t\t\t\tmodifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\tlet bestDelta = 0;\n\t\t\tlet bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n\n\t\t\tfor (let delta = 1; ; delta++) {\n\t\t\t\tlet originalStart = change.originalStart - delta;\n\t\t\t\tlet modifiedStart = change.modifiedStart - delta;\n\n\t\t\t\tif (originalStart < originalStop || modifiedStart < modifiedStop) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n\n\t\t\t\tif (score > bestScore) {\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchange.originalStart -= bestDelta;\n\t\t\tchange.modifiedStart -= bestDelta;\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\tprivate _OriginalIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n\t\t\treturn true;\n\t\t}\n\t\tconst element = this.OriginalSequence.getElementAtIndex(index);\n\t\treturn (typeof element === 'string' && /^\\s*$/.test(element));\n\t}\n\n\tprivate _OriginalRegionIsBoundary(originalStart: number, originalLength: number): boolean {\n\t\tif (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (originalLength > 0) {\n\t\t\tlet originalEnd = originalStart + originalLength;\n\t\t\tif (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _ModifiedIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n\t\t\treturn true;\n\t\t}\n\t\tconst element = this.ModifiedSequence.getElementAtIndex(index);\n\t\treturn (typeof element === 'string' && /^\\s*$/.test(element));\n\t}\n\n\tprivate _ModifiedRegionIsBoundary(modifiedStart: number, modifiedLength: number): boolean {\n\t\tif (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (modifiedLength > 0) {\n\t\t\tlet modifiedEnd = modifiedStart + modifiedLength;\n\t\t\tif (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _boundaryScore(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number): number {\n\t\tlet originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n\t\tlet modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n\t\treturn (originalScore + modifiedScore);\n\t}\n\n\t/**\n\t * Concatenates the two input DiffChange lists and returns the resulting\n\t * list.\n\t * @param The left changes\n\t * @param The right changes\n\t * @returns The concatenated list\n\t */\n\tprivate ConcatenateChanges(left: DiffChange[], right: DiffChange[]): DiffChange[] {\n\t\tlet mergedChangeArr: DiffChange[] = [];\n\n\t\tif (left.length === 0 || right.length === 0) {\n\t\t\treturn (right.length > 0) ? right : left;\n\t\t} else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n\t\t\t// Since we break the problem down recursively, it is possible that we\n\t\t\t// might recurse in the middle of a change thereby splitting it into\n\t\t\t// two changes. Here in the combining stage, we detect and fuse those\n\t\t\t// changes back together\n\t\t\tlet result = new Array<DiffChange>(left.length + right.length - 1);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length - 1);\n\t\t\tresult[left.length - 1] = mergedChangeArr[0];\n\t\t\tMyArray.Copy(right, 1, result, left.length, right.length - 1);\n\n\t\t\treturn result;\n\t\t} else {\n\t\t\tlet result = new Array<DiffChange>(left.length + right.length);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length);\n\t\t\tMyArray.Copy(right, 0, result, left.length, right.length);\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the two changes overlap and can be merged into a single\n\t * change\n\t * @param left The left change\n\t * @param right The right change\n\t * @param mergedChange The merged change if the two overlap, null otherwise\n\t * @returns True if the two changes overlap\n\t */\n\tprivate ChangesOverlap(left: DiffChange, right: DiffChange, mergedChangeArr: Array<DiffChange | null>): boolean {\n\t\tDebug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n\t\tDebug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n\n\t\tif (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\tlet originalStart = left.originalStart;\n\t\t\tlet originalLength = left.originalLength;\n\t\t\tlet modifiedStart = left.modifiedStart;\n\t\t\tlet modifiedLength = left.modifiedLength;\n\n\t\t\tif (left.originalStart + left.originalLength >= right.originalStart) {\n\t\t\t\toriginalLength = right.originalStart + right.originalLength - left.originalStart;\n\t\t\t}\n\t\t\tif (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\t\tmodifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n\t\t\t}\n\n\t\t\tmergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tmergedChangeArr[0] = null;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Helper method used to clip a diagonal index to the range of valid\n\t * diagonals. This also decides whether or not the diagonal index,\n\t * if it exceeds the boundary, should be clipped to the boundary or clipped\n\t * one inside the boundary depending on the Even/Odd status of the boundary\n\t * and numDifferences.\n\t * @param diagonal The index of the diagonal to clip.\n\t * @param numDifferences The current number of differences being iterated upon.\n\t * @param diagonalBaseIndex The base reference diagonal.\n\t * @param numDiagonals The total number of diagonals.\n\t * @returns The clipped diagonal index.\n\t */\n\tprivate ClipDiagonalBound(diagonal: number, numDifferences: number, diagonalBaseIndex: number, numDiagonals: number): number {\n\t\tif (diagonal >= 0 && diagonal < numDiagonals) {\n\t\t\t// Nothing to clip, its in range\n\t\t\treturn diagonal;\n\t\t}\n\n\t\t// diagonalsBelow: The number of diagonals below the reference diagonal\n\t\t// diagonalsAbove: The number of diagonals above the reference diagonal\n\t\tlet diagonalsBelow = diagonalBaseIndex;\n\t\tlet diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n\t\tlet diffEven = (numDifferences % 2 === 0);\n\n\t\tif (diagonal < 0) {\n\t\t\tlet lowerBoundEven = (diagonalsBelow % 2 === 0);\n\t\t\treturn (diffEven === lowerBoundEven) ? 0 : 1;\n\t\t} else {\n\t\t\tlet upperBoundEven = (diagonalsAbove % 2 === 0);\n\t\t\treturn (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tpublic onUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tpublic onUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tlet stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tlet error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: any, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: any;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as any as T;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IteratorDefinedResult<T> {\n\treadonly done: false;\n\treadonly value: T;\n}\nexport interface IteratorUndefinedResult {\n\treadonly done: true;\n\treadonly value: undefined;\n}\nexport const FIN: IteratorUndefinedResult = { done: true, value: undefined };\nexport type IteratorResult<T> = IteratorDefinedResult<T> | IteratorUndefinedResult;\n\nexport interface Iterator<T> {\n\tnext(): IteratorResult<T>;\n}\n\nexport module Iterator {\n\tconst _empty: Iterator<any> = {\n\t\tnext() {\n\t\t\treturn FIN;\n\t\t}\n\t};\n\n\texport function empty<T>(): Iterator<T> {\n\t\treturn _empty;\n\t}\n\n\texport function fromArray<T>(array: T[], index = 0, length = array.length): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (index >= length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: array[index++] };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function from<T>(elements: Iterator<T> | T[] | undefined): Iterator<T> {\n\t\tif (!elements) {\n\t\t\treturn Iterator.empty();\n\t\t} else if (Array.isArray(elements)) {\n\t\t\treturn Iterator.fromArray(elements);\n\t\t} else {\n\t\t\treturn elements;\n\t\t}\n\t}\n\n\texport function map<T, R>(iterator: Iterator<T>, fn: (t: T) => R): Iterator<R> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tconst element = iterator.next();\n\t\t\t\tif (element.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t} else {\n\t\t\t\t\treturn { done: false, value: fn(element.value) };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function filter<T>(iterator: Iterator<T>, fn: (t: T) => boolean): Iterator<T> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst element = iterator.next();\n\t\t\t\t\tif (element.done) {\n\t\t\t\t\t\treturn FIN;\n\t\t\t\t\t}\n\t\t\t\t\tif (fn(element.value)) {\n\t\t\t\t\t\treturn { done: false, value: element.value };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function forEach<T>(iterator: Iterator<T>, fn: (t: T) => void): void {\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tfn(next.value);\n\t\t}\n\t}\n\n\texport function collect<T>(iterator: Iterator<T>): T[] {\n\t\tconst result: T[] = [];\n\t\tforEach(iterator, value => result.push(value));\n\t\treturn result;\n\t}\n}\n\nexport type ISequence<T> = Iterator<T> | T[];\n\nexport function getSequenceIterator<T>(arg: Iterator<T> | T[]): Iterator<T> {\n\tif (Array.isArray(arg)) {\n\t\treturn Iterator.fromArray(arg);\n\t} else {\n\t\treturn arg;\n\t}\n}\n\nexport interface INextIterator<T> {\n\tnext(): T | null;\n}\n\nexport class ArrayIterator<T> implements INextIterator<T> {\n\n\tprivate items: T[];\n\tprotected start: number;\n\tprotected end: number;\n\tprotected index: number;\n\n\tconstructor(items: T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tthis.items = items;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.index = index;\n\t}\n\n\tpublic next(): T | null {\n\t\tthis.index = Math.min(this.index + 1, this.end);\n\t\treturn this.current();\n\t}\n\n\tprotected current(): T | null {\n\t\tif (this.index === this.start - 1 || this.index === this.end) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.items[this.index];\n\t}\n}\n\nexport class ArrayNavigator<T> extends ArrayIterator<T> implements INavigator<T> {\n\n\tconstructor(items: T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tsuper(items, start, end, index);\n\t}\n\n\tpublic current(): T | null {\n\t\treturn super.current();\n\t}\n\n\tpublic previous(): T | null {\n\t\tthis.index = Math.max(this.index - 1, this.start - 1);\n\t\treturn this.current();\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic last(): T | null {\n\t\tthis.index = this.end - 1;\n\t\treturn this.current();\n\t}\n\n\tpublic parent(): T | null {\n\t\treturn null;\n\t}\n}\n\nexport class MappedIterator<T, R> implements INextIterator<R> {\n\n\tconstructor(protected iterator: INextIterator<T>, protected fn: (item: T | null) => R) {\n\t\t// noop\n\t}\n\n\tnext() { return this.fn(this.iterator.next()); }\n}\n\nexport interface INavigator<T> extends INextIterator<T> {\n\tprevious(): T | null;\n\tparent(): T | null;\n\tfirst(): T | null;\n\tlast(): T | null;\n\tnext(): T | null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { illegalArgument } from 'vs/base/common/errors';\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport const enum KeyCode {\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown = 0,\n\n\tBackspace = 1,\n\tTab = 2,\n\tEnter = 3,\n\tShift = 4,\n\tCtrl = 5,\n\tAlt = 6,\n\tPauseBreak = 7,\n\tCapsLock = 8,\n\tEscape = 9,\n\tSpace = 10,\n\tPageUp = 11,\n\tPageDown = 12,\n\tEnd = 13,\n\tHome = 14,\n\tLeftArrow = 15,\n\tUpArrow = 16,\n\tRightArrow = 17,\n\tDownArrow = 18,\n\tInsert = 19,\n\tDelete = 20,\n\n\tKEY_0 = 21,\n\tKEY_1 = 22,\n\tKEY_2 = 23,\n\tKEY_3 = 24,\n\tKEY_4 = 25,\n\tKEY_5 = 26,\n\tKEY_6 = 27,\n\tKEY_7 = 28,\n\tKEY_8 = 29,\n\tKEY_9 = 30,\n\n\tKEY_A = 31,\n\tKEY_B = 32,\n\tKEY_C = 33,\n\tKEY_D = 34,\n\tKEY_E = 35,\n\tKEY_F = 36,\n\tKEY_G = 37,\n\tKEY_H = 38,\n\tKEY_I = 39,\n\tKEY_J = 40,\n\tKEY_K = 41,\n\tKEY_L = 42,\n\tKEY_M = 43,\n\tKEY_N = 44,\n\tKEY_O = 45,\n\tKEY_P = 46,\n\tKEY_Q = 47,\n\tKEY_R = 48,\n\tKEY_S = 49,\n\tKEY_T = 50,\n\tKEY_U = 51,\n\tKEY_V = 52,\n\tKEY_W = 53,\n\tKEY_X = 54,\n\tKEY_Y = 55,\n\tKEY_Z = 56,\n\n\tMeta = 57,\n\tContextMenu = 58,\n\n\tF1 = 59,\n\tF2 = 60,\n\tF3 = 61,\n\tF4 = 62,\n\tF5 = 63,\n\tF6 = 64,\n\tF7 = 65,\n\tF8 = 66,\n\tF9 = 67,\n\tF10 = 68,\n\tF11 = 69,\n\tF12 = 70,\n\tF13 = 71,\n\tF14 = 72,\n\tF15 = 73,\n\tF16 = 74,\n\tF17 = 75,\n\tF18 = 76,\n\tF19 = 77,\n\n\tNumLock = 78,\n\tScrollLock = 79,\n\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tUS_SEMICOLON = 80,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tUS_EQUAL = 81,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tUS_COMMA = 82,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tUS_MINUS = 83,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tUS_DOT = 84,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tUS_SLASH = 85,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tUS_BACKTICK = 86,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tUS_OPEN_SQUARE_BRACKET = 87,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tUS_BACKSLASH = 88,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tUS_CLOSE_SQUARE_BRACKET = 89,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tUS_QUOTE = 90,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8 = 91,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tOEM_102 = 92,\n\n\tNUMPAD_0 = 93, // VK_NUMPAD0, 0x60, Numeric keypad 0 key\n\tNUMPAD_1 = 94, // VK_NUMPAD1, 0x61, Numeric keypad 1 key\n\tNUMPAD_2 = 95, // VK_NUMPAD2, 0x62, Numeric keypad 2 key\n\tNUMPAD_3 = 96, // VK_NUMPAD3, 0x63, Numeric keypad 3 key\n\tNUMPAD_4 = 97, // VK_NUMPAD4, 0x64, Numeric keypad 4 key\n\tNUMPAD_5 = 98, // VK_NUMPAD5, 0x65, Numeric keypad 5 key\n\tNUMPAD_6 = 99, // VK_NUMPAD6, 0x66, Numeric keypad 6 key\n\tNUMPAD_7 = 100, // VK_NUMPAD7, 0x67, Numeric keypad 7 key\n\tNUMPAD_8 = 101, // VK_NUMPAD8, 0x68, Numeric keypad 8 key\n\tNUMPAD_9 = 102, // VK_NUMPAD9, 0x69, Numeric keypad 9 key\n\n\tNUMPAD_MULTIPLY = 103,\t// VK_MULTIPLY, 0x6A, Multiply key\n\tNUMPAD_ADD = 104,\t\t// VK_ADD, 0x6B, Add key\n\tNUMPAD_SEPARATOR = 105,\t// VK_SEPARATOR, 0x6C, Separator key\n\tNUMPAD_SUBTRACT = 106,\t// VK_SUBTRACT, 0x6D, Subtract key\n\tNUMPAD_DECIMAL = 107,\t// VK_DECIMAL, 0x6E, Decimal key\n\tNUMPAD_DIVIDE = 108,\t// VK_DIVIDE, 0x6F,\n\n\t/**\n\t * Cover all key codes when IME is processing input.\n\t */\n\tKEY_IN_COMPOSITION = 109,\n\n\tABNT_C1 = 110, // Brazilian (ABNT) Keyboard\n\tABNT_C2 = 111, // Brazilian (ABNT) Keyboard\n\n\t/**\n\t * Placed last to cover the length of the enum.\n\t * Please do not depend on this value!\n\t */\n\tMAX_VALUE\n}\n\nclass KeyCodeStrMap {\n\n\tprivate _keyCodeToStr: string[];\n\tprivate _strToKeyCode: { [str: string]: KeyCode; };\n\n\tconstructor() {\n\t\tthis._keyCodeToStr = [];\n\t\tthis._strToKeyCode = Object.create(null);\n\t}\n\n\tdefine(keyCode: KeyCode, str: string): void {\n\t\tthis._keyCodeToStr[keyCode] = str;\n\t\tthis._strToKeyCode[str.toLowerCase()] = keyCode;\n\t}\n\n\tkeyCodeToStr(keyCode: KeyCode): string {\n\t\treturn this._keyCodeToStr[keyCode];\n\t}\n\n\tstrToKeyCode(str: string): KeyCode {\n\t\treturn this._strToKeyCode[str.toLowerCase()] || KeyCode.Unknown;\n\t}\n}\n\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\n\n(function () {\n\n\tfunction define(keyCode: KeyCode, uiLabel: string, usUserSettingsLabel: string = uiLabel, generalUserSettingsLabel: string = usUserSettingsLabel): void {\n\t\tuiMap.define(keyCode, uiLabel);\n\t\tuserSettingsUSMap.define(keyCode, usUserSettingsLabel);\n\t\tuserSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n\t}\n\n\tdefine(KeyCode.Unknown, 'unknown');\n\n\tdefine(KeyCode.Backspace, 'Backspace');\n\tdefine(KeyCode.Tab, 'Tab');\n\tdefine(KeyCode.Enter, 'Enter');\n\tdefine(KeyCode.Shift, 'Shift');\n\tdefine(KeyCode.Ctrl, 'Ctrl');\n\tdefine(KeyCode.Alt, 'Alt');\n\tdefine(KeyCode.PauseBreak, 'PauseBreak');\n\tdefine(KeyCode.CapsLock, 'CapsLock');\n\tdefine(KeyCode.Escape, 'Escape');\n\tdefine(KeyCode.Space, 'Space');\n\tdefine(KeyCode.PageUp, 'PageUp');\n\tdefine(KeyCode.PageDown, 'PageDown');\n\tdefine(KeyCode.End, 'End');\n\tdefine(KeyCode.Home, 'Home');\n\n\tdefine(KeyCode.LeftArrow, 'LeftArrow', 'Left');\n\tdefine(KeyCode.UpArrow, 'UpArrow', 'Up');\n\tdefine(KeyCode.RightArrow, 'RightArrow', 'Right');\n\tdefine(KeyCode.DownArrow, 'DownArrow', 'Down');\n\tdefine(KeyCode.Insert, 'Insert');\n\tdefine(KeyCode.Delete, 'Delete');\n\n\tdefine(KeyCode.KEY_0, '0');\n\tdefine(KeyCode.KEY_1, '1');\n\tdefine(KeyCode.KEY_2, '2');\n\tdefine(KeyCode.KEY_3, '3');\n\tdefine(KeyCode.KEY_4, '4');\n\tdefine(KeyCode.KEY_5, '5');\n\tdefine(KeyCode.KEY_6, '6');\n\tdefine(KeyCode.KEY_7, '7');\n\tdefine(KeyCode.KEY_8, '8');\n\tdefine(KeyCode.KEY_9, '9');\n\n\tdefine(KeyCode.KEY_A, 'A');\n\tdefine(KeyCode.KEY_B, 'B');\n\tdefine(KeyCode.KEY_C, 'C');\n\tdefine(KeyCode.KEY_D, 'D');\n\tdefine(KeyCode.KEY_E, 'E');\n\tdefine(KeyCode.KEY_F, 'F');\n\tdefine(KeyCode.KEY_G, 'G');\n\tdefine(KeyCode.KEY_H, 'H');\n\tdefine(KeyCode.KEY_I, 'I');\n\tdefine(KeyCode.KEY_J, 'J');\n\tdefine(KeyCode.KEY_K, 'K');\n\tdefine(KeyCode.KEY_L, 'L');\n\tdefine(KeyCode.KEY_M, 'M');\n\tdefine(KeyCode.KEY_N, 'N');\n\tdefine(KeyCode.KEY_O, 'O');\n\tdefine(KeyCode.KEY_P, 'P');\n\tdefine(KeyCode.KEY_Q, 'Q');\n\tdefine(KeyCode.KEY_R, 'R');\n\tdefine(KeyCode.KEY_S, 'S');\n\tdefine(KeyCode.KEY_T, 'T');\n\tdefine(KeyCode.KEY_U, 'U');\n\tdefine(KeyCode.KEY_V, 'V');\n\tdefine(KeyCode.KEY_W, 'W');\n\tdefine(KeyCode.KEY_X, 'X');\n\tdefine(KeyCode.KEY_Y, 'Y');\n\tdefine(KeyCode.KEY_Z, 'Z');\n\n\tdefine(KeyCode.Meta, 'Meta');\n\tdefine(KeyCode.ContextMenu, 'ContextMenu');\n\n\tdefine(KeyCode.F1, 'F1');\n\tdefine(KeyCode.F2, 'F2');\n\tdefine(KeyCode.F3, 'F3');\n\tdefine(KeyCode.F4, 'F4');\n\tdefine(KeyCode.F5, 'F5');\n\tdefine(KeyCode.F6, 'F6');\n\tdefine(KeyCode.F7, 'F7');\n\tdefine(KeyCode.F8, 'F8');\n\tdefine(KeyCode.F9, 'F9');\n\tdefine(KeyCode.F10, 'F10');\n\tdefine(KeyCode.F11, 'F11');\n\tdefine(KeyCode.F12, 'F12');\n\tdefine(KeyCode.F13, 'F13');\n\tdefine(KeyCode.F14, 'F14');\n\tdefine(KeyCode.F15, 'F15');\n\tdefine(KeyCode.F16, 'F16');\n\tdefine(KeyCode.F17, 'F17');\n\tdefine(KeyCode.F18, 'F18');\n\tdefine(KeyCode.F19, 'F19');\n\n\tdefine(KeyCode.NumLock, 'NumLock');\n\tdefine(KeyCode.ScrollLock, 'ScrollLock');\n\n\tdefine(KeyCode.US_SEMICOLON, ';', ';', 'OEM_1');\n\tdefine(KeyCode.US_EQUAL, '=', '=', 'OEM_PLUS');\n\tdefine(KeyCode.US_COMMA, ',', ',', 'OEM_COMMA');\n\tdefine(KeyCode.US_MINUS, '-', '-', 'OEM_MINUS');\n\tdefine(KeyCode.US_DOT, '.', '.', 'OEM_PERIOD');\n\tdefine(KeyCode.US_SLASH, '/', '/', 'OEM_2');\n\tdefine(KeyCode.US_BACKTICK, '`', '`', 'OEM_3');\n\tdefine(KeyCode.ABNT_C1, 'ABNT_C1');\n\tdefine(KeyCode.ABNT_C2, 'ABNT_C2');\n\tdefine(KeyCode.US_OPEN_SQUARE_BRACKET, '[', '[', 'OEM_4');\n\tdefine(KeyCode.US_BACKSLASH, '\\\\', '\\\\', 'OEM_5');\n\tdefine(KeyCode.US_CLOSE_SQUARE_BRACKET, ']', ']', 'OEM_6');\n\tdefine(KeyCode.US_QUOTE, '\\'', '\\'', 'OEM_7');\n\tdefine(KeyCode.OEM_8, 'OEM_8');\n\tdefine(KeyCode.OEM_102, 'OEM_102');\n\n\tdefine(KeyCode.NUMPAD_0, 'NumPad0');\n\tdefine(KeyCode.NUMPAD_1, 'NumPad1');\n\tdefine(KeyCode.NUMPAD_2, 'NumPad2');\n\tdefine(KeyCode.NUMPAD_3, 'NumPad3');\n\tdefine(KeyCode.NUMPAD_4, 'NumPad4');\n\tdefine(KeyCode.NUMPAD_5, 'NumPad5');\n\tdefine(KeyCode.NUMPAD_6, 'NumPad6');\n\tdefine(KeyCode.NUMPAD_7, 'NumPad7');\n\tdefine(KeyCode.NUMPAD_8, 'NumPad8');\n\tdefine(KeyCode.NUMPAD_9, 'NumPad9');\n\n\tdefine(KeyCode.NUMPAD_MULTIPLY, 'NumPad_Multiply');\n\tdefine(KeyCode.NUMPAD_ADD, 'NumPad_Add');\n\tdefine(KeyCode.NUMPAD_SEPARATOR, 'NumPad_Separator');\n\tdefine(KeyCode.NUMPAD_SUBTRACT, 'NumPad_Subtract');\n\tdefine(KeyCode.NUMPAD_DECIMAL, 'NumPad_Decimal');\n\tdefine(KeyCode.NUMPAD_DIVIDE, 'NumPad_Divide');\n\n})();\n\nexport namespace KeyCodeUtils {\n\texport function toString(keyCode: KeyCode): string {\n\t\treturn uiMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromString(key: string): KeyCode {\n\t\treturn uiMap.strToKeyCode(key);\n\t}\n\n\texport function toUserSettingsUS(keyCode: KeyCode): string {\n\t\treturn userSettingsUSMap.keyCodeToStr(keyCode);\n\t}\n\texport function toUserSettingsGeneral(keyCode: KeyCode): string {\n\t\treturn userSettingsGeneralMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromUserSettings(key: string): KeyCode {\n\t\treturn userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n\t}\n}\n\n/**\n * Binary encoding strategy:\n * ```\n *    1111 11\n *    5432 1098 7654 3210\n *    ---- CSAW KKKK KKKK\n *  C = bit 11 = ctrlCmd flag\n *  S = bit 10 = shift flag\n *  A = bit 9 = alt flag\n *  W = bit 8 = winCtrl flag\n *  K = bits 0-7 = key code\n * ```\n */\nconst enum BinaryKeybindingsMask {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n\tKeyCode = 0x000000FF\n}\n\nexport const enum KeyMod {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n}\n\nexport function KeyChord(firstPart: number, secondPart: number): number {\n\tlet chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n\treturn (firstPart | chordPart) >>> 0;\n}\n\nexport function createKeybinding(keybinding: number, OS: OperatingSystem): Keybinding | null {\n\tif (keybinding === 0) {\n\t\treturn null;\n\t}\n\tconst firstPart = (keybinding & 0x0000FFFF) >>> 0;\n\tconst chordPart = (keybinding & 0xFFFF0000) >>> 16;\n\tif (chordPart !== 0) {\n\t\treturn new ChordKeybinding([\n\t\t\tcreateSimpleKeybinding(firstPart, OS),\n\t\t\tcreateSimpleKeybinding(chordPart, OS)\n\t\t]);\n\t}\n\treturn new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\n\nexport function createSimpleKeybinding(keybinding: number, OS: OperatingSystem): SimpleKeybinding {\n\n\tconst ctrlCmd = (keybinding & BinaryKeybindingsMask.CtrlCmd ? true : false);\n\tconst winCtrl = (keybinding & BinaryKeybindingsMask.WinCtrl ? true : false);\n\n\tconst ctrlKey = (OS === OperatingSystem.Macintosh ? winCtrl : ctrlCmd);\n\tconst shiftKey = (keybinding & BinaryKeybindingsMask.Shift ? true : false);\n\tconst altKey = (keybinding & BinaryKeybindingsMask.Alt ? true : false);\n\tconst metaKey = (OS === OperatingSystem.Macintosh ? ctrlCmd : winCtrl);\n\tconst keyCode = (keybinding & BinaryKeybindingsMask.KeyCode);\n\n\treturn new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\n\nexport class SimpleKeybinding {\n\tpublic readonly ctrlKey: boolean;\n\tpublic readonly shiftKey: boolean;\n\tpublic readonly altKey: boolean;\n\tpublic readonly metaKey: boolean;\n\tpublic readonly keyCode: KeyCode;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, keyCode: KeyCode) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyCode = keyCode;\n\t}\n\n\tpublic equals(other: SimpleKeybinding): boolean {\n\t\treturn (\n\t\t\tthis.ctrlKey === other.ctrlKey\n\t\t\t&& this.shiftKey === other.shiftKey\n\t\t\t&& this.altKey === other.altKey\n\t\t\t&& this.metaKey === other.metaKey\n\t\t\t&& this.keyCode === other.keyCode\n\t\t);\n\t}\n\n\tpublic isModifierKey(): boolean {\n\t\treturn (\n\t\t\tthis.keyCode === KeyCode.Unknown\n\t\t\t|| this.keyCode === KeyCode.Ctrl\n\t\t\t|| this.keyCode === KeyCode.Meta\n\t\t\t|| this.keyCode === KeyCode.Alt\n\t\t\t|| this.keyCode === KeyCode.Shift\n\t\t);\n\t}\n\n\tpublic toChord(): ChordKeybinding {\n\t\treturn new ChordKeybinding([this]);\n\t}\n\n\t/**\n\t * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n\t */\n\tpublic isDuplicateModifierCase(): boolean {\n\t\treturn (\n\t\t\t(this.ctrlKey && this.keyCode === KeyCode.Ctrl)\n\t\t\t|| (this.shiftKey && this.keyCode === KeyCode.Shift)\n\t\t\t|| (this.altKey && this.keyCode === KeyCode.Alt)\n\t\t\t|| (this.metaKey && this.keyCode === KeyCode.Meta)\n\t\t);\n\t}\n}\n\nexport class ChordKeybinding {\n\tpublic readonly parts: SimpleKeybinding[];\n\n\tconstructor(parts: SimpleKeybinding[]) {\n\t\tif (parts.length === 0) {\n\t\t\tthrow illegalArgument(`parts`);\n\t\t}\n\t\tthis.parts = parts;\n\t}\n\n\tpublic equals(other: ChordKeybinding | null): boolean {\n\t\tif (other === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.parts.length !== other.parts.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < this.parts.length; i++) {\n\t\t\tif (!this.parts[i].equals(other.parts[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport type Keybinding = ChordKeybinding;\n\nexport class ResolvedKeybindingPart {\n\treadonly ctrlKey: boolean;\n\treadonly shiftKey: boolean;\n\treadonly altKey: boolean;\n\treadonly metaKey: boolean;\n\n\treadonly keyLabel: string | null;\n\treadonly keyAriaLabel: string | null;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, kbLabel: string | null, kbAriaLabel: string | null) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyLabel = kbLabel;\n\t\tthis.keyAriaLabel = kbAriaLabel;\n\t}\n}\n\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nexport abstract class ResolvedKeybinding {\n\t/**\n\t * This prints the binding in a format suitable for displaying in the UI.\n\t */\n\tpublic abstract getLabel(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for ARIA.\n\t */\n\tpublic abstract getAriaLabel(): string | null;\n\n\t/**\n\t * Is the binding a chord?\n\t */\n\tpublic abstract isChord(): boolean;\n\n\t/**\n\t * Returns the parts that comprise of the keybinding.\n\t * Simple keybindings return one element.\n\t */\n\tpublic abstract getParts(): ResolvedKeybindingPart[];\n\n\t/**\n\t * Returns the parts that should be used for dispatching.\n\t */\n\tpublic abstract getDispatchParts(): (string | null)[];\n}\n","\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable><any>thing).dispose === 'function'\n\t\t&& (<IDisposable><any>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(...disposables: Array<T | undefined>): T[];\nexport function dispose<T extends IDisposable>(disposables: T[]): T[];\nexport function dispose<T extends IDisposable>(first: T | T[], ...rest: T[]): T | T[] | undefined {\n\tif (Array.isArray(first)) {\n\t\tfirst.forEach(d => d && d.dispose());\n\t\treturn [];\n\t} else if (rest.length === 0) {\n\t\tif (first) {\n\t\t\tfirst.dispose();\n\t\t\treturn first;\n\t\t}\n\t\treturn undefined;\n\t} else {\n\t\tdispose(first);\n\t\tdispose(rest);\n\t\treturn [];\n\t}\n}\n\nexport function combinedDisposable(disposables: IDisposable[]): IDisposable {\n\treturn { dispose: () => dispose(disposables) };\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\treturn { dispose() { fn(); } };\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprotected _toDispose: IDisposable[] = [];\n\n\tprivate _lifecycle_disposable_isDisposed = false;\n\n\tpublic dispose(): void {\n\t\tthis._lifecycle_disposable_isDisposed = true;\n\t\tthis._toDispose = dispose(this._toDispose);\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif (this._lifecycle_disposable_isDisposed) {\n\t\t\tconsole.warn('Registering disposable on object that has already been disposed.');\n\t\t\tt.dispose();\n\t\t} else {\n\t\t\tthis._toDispose.push(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterator, IteratorResult, FIN } from 'vs/base/common/iterator';\n\nclass Node<E> {\n\telement: E;\n\tnext: Node<E> | undefined;\n\tprev: Node<E> | undefined;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> | undefined;\n\tprivate _last: Node<E> | undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._first;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (!this._first) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\t\treturn this._remove.bind(this, newNode);\n\t}\n\n\n\tshift(): E | undefined {\n\t\tif (!this._first) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tlet candidate: Node<E> | undefined = this._first;\n\t\twhile (candidate instanceof Node) {\n\t\t\tif (candidate !== node) {\n\t\t\t\tcandidate = candidate.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (candidate.prev && candidate.next) {\n\t\t\t\t// middle\n\t\t\t\tlet anchor = candidate.prev;\n\t\t\t\tanchor.next = candidate.next;\n\t\t\t\tcandidate.next.prev = anchor;\n\n\t\t\t} else if (!candidate.prev && !candidate.next) {\n\t\t\t\t// only node\n\t\t\t\tthis._first = undefined;\n\t\t\t\tthis._last = undefined;\n\n\t\t\t} else if (!candidate.next) {\n\t\t\t\t// last\n\t\t\t\tthis._last = this._last!.prev!;\n\t\t\t\tthis._last.next = undefined;\n\n\t\t\t} else if (!candidate.prev) {\n\t\t\t\t// first\n\t\t\t\tthis._first = this._first!.next!;\n\t\t\t\tthis._first.prev = undefined;\n\t\t\t}\n\n\t\t\t// done\n\t\t\tthis._size -= 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\titerator(): Iterator<E> {\n\t\tlet element: { done: false; value: E; };\n\t\tlet node = this._first;\n\t\treturn {\n\t\t\tnext(): IteratorResult<E> {\n\t\t\t\tif (!node) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tif (!element) {\n\t\t\t\t\telement = { done: false, value: node.element };\n\t\t\t\t} else {\n\t\t\t\t\telement.value = node.element;\n\t\t\t\t}\n\t\t\t\tnode = node.next;\n\t\t\t\treturn element;\n\t\t\t}\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { combinedDisposable, Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n}\n\nexport namespace Event {\n\tconst _disposable = { dispose() { } };\n\texport const None: Event<any> = function () { return _disposable; };\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * throught the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tlet _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tlet shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Similar to `buffer` but it buffers indefinitely and repeats\n\t * the buffered events to every new listener.\n\t */\n\texport function echo<T>(event: Event<T>, nextTick = false, buffer: T[] = []): Event<T> {\n\t\tbuffer = buffer.slice();\n\n\t\tevent(e => {\n\t\t\tbuffer.push(e);\n\t\t\temitter.fire(e);\n\t\t});\n\n\t\tconst flush = (listener: (e: T) => any, thisArgs?: any) => buffer.forEach(e => listener.call(thisArgs, e));\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonListenerDidAdd(emitter, listener: (e: T) => any, thisArgs?: any) {\n\t\t\t\tif (nextTick) {\n\t\t\t\t\tsetTimeout(() => flush(listener, thisArgs));\n\t\t\t\t} else {\n\t\t\t\t\tflush(listener, thisArgs);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tlet stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tlet count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tlet count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue: [Listener<T>, T][];\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = [];\n\t\t\t}\n\n\t\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\t\tthis._deliveryQueue.push([e.value, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.length > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners = undefined;\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.length = 0;\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\treadonly isCancellationRequested: boolean;\n\t/**\n\t * An event emitted when cancellation is requested\n\t * @event\n\t */\n\treadonly onCancellationRequested: Event<any>;\n}\n\nconst shortcutEvent = Object.freeze(function (callback, context?): IDisposable {\n\tlet handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n} as Event<any>);\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: any): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token: CancellationToken;\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare let process: INodeProcess;\ndeclare let global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n}\ndeclare let navigator: INavigator;\ndeclare let self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\tconst userAgent = navigator.userAgent;\n\t_isWindows = userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n\t_isLinux = userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isNative) {\n\tif (_isMacintosh) {\n\t\t_platform = Platform.Mac;\n\t} else if (_isWindows) {\n\t\t_platform = Platform.Windows;\n\t} else if (_isLinux) {\n\t\t_platform = Platform.Linux;\n\t}\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\nlet _setImmediate: ((callback: (...args: any[]) => void) => number) | null = null;\nexport function setImmediate(callback: (...args: any[]) => void): number {\n\tif (_setImmediate === null) {\n\t\tif (globals.setImmediate) {\n\t\t\t_setImmediate = globals.setImmediate.bind(globals);\n\t\t} else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\t\t_setImmediate = process.nextTick.bind(process);\n\t\t} else {\n\t\t\t_setImmediate = globals.setTimeout.bind(globals);\n\t\t}\n\t}\n\treturn _setImmediate!(callback);\n}\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * The empty string.\n */\nexport const empty = '';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tlet str = '' + n;\n\tlet r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tlet idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tlet trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tlet needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tlet needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tlet diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tlet match = regexp.exec('');\n\treturn !!(match && <any>regexp.lastIndex === 0);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tlet chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tlet chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tlet chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\tconst len1 = a ? a.length : 0;\n\tconst len2 = b ? b.length : 0;\n\n\tif (len1 !== len2) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tif (typeof a !== 'string' || typeof b !== 'string') {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tlet diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tlet aLastIndex = a.length - 1;\n\tlet bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tlet chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst _typeof = {\n\tnumber: 'number',\n\tstring: 'string',\n\tundefined: 'undefined',\n\tobject: 'object',\n\tfunction: 'function'\n};\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\tif (Array.isArray) {\n\t\treturn Array.isArray(array);\n\t}\n\n\tif (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\tif (typeof (str) === _typeof.string || str instanceof String) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === _typeof.object\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\tif ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn obj === true || obj === false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn isUndefined(obj) || obj === null;\n}\n\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn typeof obj === _typeof.function;\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch{\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\n/**\n * Creates a new object of the provided class and will call the constructor with\n * any additional argument supplied.\n */\nexport function create(ctor: Function, ...args: any[]): any {\n\tif (isNativeClass(ctor)) {\n\t\treturn new (ctor as any)(...args);\n\t} else {\n\t\tlet obj = Object.create(ctor.prototype);\n\t\tctor.apply(obj, args);\n\t\treturn obj;\n\t}\n}\n\n// https://stackoverflow.com/a/32235645/1499159\nfunction isNativeClass(thing): boolean {\n\treturn typeof thing === 'function'\n\t\t&& thing.hasOwnProperty('prototype')\n\t\t&& !thing.hasOwnProperty('arguments');\n}\n\n/**\n *\n *\n */\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nlet _throwOnMissingSchema: boolean = true;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme) {\n\t\tif (_strict || _throwOnMissingSchema) {\n\t\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t\t} else {\n\t\t\tconsole.warn(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t\t}\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = schemeOrData || _empty;\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn _makeFsPath(this);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\tpublic with(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tpublic static parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tdecodeURIComponent(match[4] || _empty),\n\t\t\tdecodeURIComponent(match[5] || _empty),\n\t\t\tdecodeURIComponent(match[7] || _empty),\n\t\t\tdecodeURIComponent(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tpublic static file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tlet idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tpublic static from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\tpublic toString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\tpublic toJSON(): object {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | any): URI {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tlet result = new _URI(data);\n\t\t\tresult._fsPath = (<UriState>data).fsPath;\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\tfsPath: string;\n\texternal: string;\n}\n\n\n// tslint:disable-next-line:class-name\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = _makeFsPath(this);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\tpublic toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): object {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tlet code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tlet escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tlet code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri: URI): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\t// windows drive letter: file:///c:/far/boo\n\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tlet code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tlet code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { transformErrorForSerialization } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport { getAllPropertyNames } from 'vs/base/common/types';\n\nconst INITIALIZE = '$initialize';\n\nexport interface IWorker {\n\tgetId(): number;\n\tpostMessage(message: string): void;\n\tdispose(): void;\n}\n\nexport interface IWorkerCallback {\n\t(message: string): void;\n}\n\nexport interface IWorkerFactory {\n\tcreate(moduleId: string, callback: IWorkerCallback, onErrorCallback: (err: any) => void): IWorker;\n}\n\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err: any): void {\n\tif (!isWeb) {\n\t\t// running tests\n\t\treturn;\n\t}\n\tif (!webWorkerWarningLogged) {\n\t\twebWorkerWarningLogged = true;\n\t\tconsole.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n\t}\n\tconsole.warn(err.message);\n}\n\ninterface IMessage {\n\tvsWorker: number;\n\tseq?: string;\n}\n\ninterface IRequestMessage extends IMessage {\n\treq: string;\n\tmethod: string;\n\targs: any[];\n}\n\ninterface IReplyMessage extends IMessage {\n\tseq: string;\n\terr: any;\n\tres: any;\n}\n\ninterface IMessageReply {\n\tresolve: (value?: any) => void;\n\treject: (error?: any) => void;\n}\n\ninterface IMessageHandler {\n\tsendMessage(msg: string): void;\n\thandleMessage(method: string, args: any[]): Promise<any>;\n}\n\nclass SimpleWorkerProtocol {\n\n\tprivate _workerId: number;\n\tprivate _lastSentReq: number;\n\tprivate _pendingReplies: { [req: string]: IMessageReply; };\n\tprivate _handler: IMessageHandler;\n\n\tconstructor(handler: IMessageHandler) {\n\t\tthis._workerId = -1;\n\t\tthis._handler = handler;\n\t\tthis._lastSentReq = 0;\n\t\tthis._pendingReplies = Object.create(null);\n\t}\n\n\tpublic setWorkerId(workerId: number): void {\n\t\tthis._workerId = workerId;\n\t}\n\n\tpublic sendMessage(method: string, args: any[]): Promise<any> {\n\t\tlet req = String(++this._lastSentReq);\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._pendingReplies[req] = {\n\t\t\t\tresolve: resolve,\n\t\t\t\treject: reject\n\t\t\t};\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\treq: req,\n\t\t\t\tmethod: method,\n\t\t\t\targs: args\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic handleMessage(serializedMessage: string): void {\n\t\tlet message: IMessage;\n\t\ttry {\n\t\t\tmessage = JSON.parse(serializedMessage);\n\t\t} catch (e) {\n\t\t\t// nothing\n\t\t\treturn;\n\t\t}\n\t\tif (!message || !message.vsWorker) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n\t\t\treturn;\n\t\t}\n\t\tthis._handleMessage(message);\n\t}\n\n\tprivate _handleMessage(msg: IMessage): void {\n\t\tif (msg.seq) {\n\t\t\tlet replyMessage = <IReplyMessage>msg;\n\t\t\tif (!this._pendingReplies[replyMessage.seq]) {\n\t\t\t\tconsole.warn('Got reply to unknown seq');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet reply = this._pendingReplies[replyMessage.seq];\n\t\t\tdelete this._pendingReplies[replyMessage.seq];\n\n\t\t\tif (replyMessage.err) {\n\t\t\t\tlet err = replyMessage.err;\n\t\t\t\tif (replyMessage.err.$isError) {\n\t\t\t\t\terr = new Error();\n\t\t\t\t\terr.name = replyMessage.err.name;\n\t\t\t\t\terr.message = replyMessage.err.message;\n\t\t\t\t\terr.stack = replyMessage.err.stack;\n\t\t\t\t}\n\t\t\t\treply.reject(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treply.resolve(replyMessage.res);\n\t\t\treturn;\n\t\t}\n\n\t\tlet requestMessage = <IRequestMessage>msg;\n\t\tlet req = requestMessage.req;\n\t\tlet result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n\t\tresult.then((r) => {\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\tseq: req,\n\t\t\t\tres: r,\n\t\t\t\terr: undefined\n\t\t\t});\n\t\t}, (e) => {\n\t\t\tif (e.detail instanceof Error) {\n\t\t\t\t// Loading errors have a detail property that points to the actual error\n\t\t\t\te.detail = transformErrorForSerialization(e.detail);\n\t\t\t}\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\tseq: req,\n\t\t\t\tres: undefined,\n\t\t\t\terr: transformErrorForSerialization(e)\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _send(msg: IRequestMessage | IReplyMessage): void {\n\t\tlet strMsg = JSON.stringify(msg);\n\t\t// console.log('SENDING: ' + strMsg);\n\t\tthis._handler.sendMessage(strMsg);\n\t}\n}\n\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient<T> extends Disposable {\n\n\tprivate _worker: IWorker;\n\tprivate _onModuleLoaded: Promise<string[]>;\n\tprivate _protocol: SimpleWorkerProtocol;\n\tprivate _lazyProxy: Promise<T>;\n\n\tconstructor(workerFactory: IWorkerFactory, moduleId: string) {\n\t\tsuper();\n\n\t\tlet lazyProxyReject: ((err: any) => void) | null = null;\n\n\t\tthis._worker = this._register(workerFactory.create(\n\t\t\t'vs/base/common/worker/simpleWorker',\n\t\t\t(msg: string) => {\n\t\t\t\tthis._protocol.handleMessage(msg);\n\t\t\t},\n\t\t\t(err: any) => {\n\t\t\t\t// in Firefox, web workers fail lazily :(\n\t\t\t\t// we will reject the proxy\n\t\t\t\tif (lazyProxyReject) {\n\t\t\t\t\tlazyProxyReject(err);\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: string): void => {\n\t\t\t\tthis._worker.postMessage(msg);\n\t\t\t},\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => {\n\t\t\t\t// Intentionally not supporting worker -> main requests\n\t\t\t\treturn Promise.resolve(null);\n\t\t\t}\n\t\t});\n\t\tthis._protocol.setWorkerId(this._worker.getId());\n\n\t\t// Gather loader configuration\n\t\tlet loaderConfiguration: any = null;\n\t\tif (typeof (<any>self).require !== 'undefined' && typeof (<any>self).require.getConfig === 'function') {\n\t\t\t// Get the configuration from the Monaco AMD Loader\n\t\t\tloaderConfiguration = (<any>self).require.getConfig();\n\t\t} else if (typeof (<any>self).requirejs !== 'undefined') {\n\t\t\t// Get the configuration from requirejs\n\t\t\tloaderConfiguration = (<any>self).requirejs.s.contexts._.config;\n\t\t}\n\n\t\t// Send initialize message\n\t\tthis._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n\t\t\tthis._worker.getId(),\n\t\t\tmoduleId,\n\t\t\tloaderConfiguration\n\t\t]);\n\n\t\tthis._lazyProxy = new Promise<T>((resolve, reject) => {\n\t\t\tlazyProxyReject = reject;\n\t\t\tthis._onModuleLoaded.then((availableMethods: string[]) => {\n\t\t\t\tlet proxy = <T>{};\n\t\t\t\tfor (const methodName of availableMethods) {\n\t\t\t\t\t(proxy as any)[methodName] = createProxyMethod(methodName, proxyMethodRequest);\n\t\t\t\t}\n\t\t\t\tresolve(proxy);\n\t\t\t}, (e) => {\n\t\t\t\treject(e);\n\t\t\t\tthis._onError('Worker failed to load ' + moduleId, e);\n\t\t\t});\n\t\t});\n\n\t\t// Create proxy to loaded code\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._request(method, args);\n\t\t};\n\n\t\tconst createProxyMethod = (method: string, proxyMethodRequest: (method: string, args: any[]) => Promise<any>): () => Promise<any> => {\n\t\t\treturn function () {\n\t\t\t\tlet args = Array.prototype.slice.call(arguments, 0);\n\t\t\t\treturn proxyMethodRequest(method, args);\n\t\t\t};\n\t\t};\n\t}\n\n\tpublic getProxyObject(): Promise<T> {\n\t\treturn this._lazyProxy;\n\t}\n\n\tprivate _request(method: string, args: any[]): Promise<any> {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._onModuleLoaded.then(() => {\n\t\t\t\tthis._protocol.sendMessage(method, args).then(resolve, reject);\n\t\t\t}, reject);\n\t\t});\n\t}\n\n\tprivate _onError(message: string, error?: any): void {\n\t\tconsole.error(message);\n\t\tconsole.info(error);\n\t}\n}\n\nexport interface IRequestHandler {\n\t_requestHandlerBrand: any;\n\t[prop: string]: any;\n}\n\n/**\n * Worker side\n */\nexport class SimpleWorkerServer {\n\n\tprivate _requestHandler: IRequestHandler | null;\n\tprivate _protocol: SimpleWorkerProtocol;\n\n\tconstructor(postSerializedMessage: (msg: string) => void, requestHandler: IRequestHandler | null) {\n\t\tthis._requestHandler = requestHandler;\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: string): void => {\n\t\t\t\tpostSerializedMessage(msg);\n\t\t\t},\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => this._handleMessage(method, args)\n\t\t});\n\t}\n\n\tpublic onmessage(msg: string): void {\n\t\tthis._protocol.handleMessage(msg);\n\t}\n\n\tprivate _handleMessage(method: string, args: any[]): Promise<any> {\n\t\tif (method === INITIALIZE) {\n\t\t\treturn this.initialize(<number>args[0], <string>args[1], <any>args[2]);\n\t\t}\n\n\t\tif (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\tprivate initialize(workerId: number, moduleId: string, loaderConfig: any): Promise<string[]> {\n\t\tthis._protocol.setWorkerId(workerId);\n\n\t\tif (this._requestHandler) {\n\t\t\t// static request handler\n\t\t\tlet methods: string[] = [];\n\t\t\tfor (const prop of getAllPropertyNames(this._requestHandler)) {\n\t\t\t\tif (typeof this._requestHandler[prop] === 'function') {\n\t\t\t\t\tmethods.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Promise.resolve(methods);\n\t\t}\n\n\t\tif (loaderConfig) {\n\t\t\t// Remove 'baseUrl', handling it is beyond scope for now\n\t\t\tif (typeof loaderConfig.baseUrl !== 'undefined') {\n\t\t\t\tdelete loaderConfig['baseUrl'];\n\t\t\t}\n\t\t\tif (typeof loaderConfig.paths !== 'undefined') {\n\t\t\t\tif (typeof loaderConfig.paths.vs !== 'undefined') {\n\t\t\t\t\tdelete loaderConfig.paths['vs'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Since this is in a web worker, enable catching errors\n\t\t\tloaderConfig.catchError = true;\n\t\t\t(<any>self).require.config(loaderConfig);\n\t\t}\n\n\t\treturn new Promise<string[]>((resolve, reject) => {\n\t\t\t// Use the global require to be sure to get the global config\n\t\t\t(<any>self).require([moduleId], (...result: any[]) => {\n\t\t\t\tlet handlerModule = result[0];\n\t\t\t\tthis._requestHandler = handlerModule.create();\n\n\t\t\t\tif (!this._requestHandler) {\n\t\t\t\t\treject(new Error(`No RequestHandler!`));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet methods: string[] = [];\n\t\t\t\tfor (const prop of getAllPropertyNames(this._requestHandler)) {\n\t\t\t\t\tif (typeof this._requestHandler[prop] === 'function') {\n\t\t\t\t\t\tmethods.push(prop);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresolve(methods);\n\t\t\t}, reject);\n\t\t});\n\t}\n}\n\n/**\n * Called on the worker side\n */\nexport function create(postMessage: (msg: string) => void): SimpleWorkerServer {\n\treturn new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A position in the editor. This interface is suitable for serialization.\n */\nexport interface IPosition {\n\t/**\n\t * line number (starts at 1)\n\t */\n\treadonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\treadonly column: number;\n}\n\n/**\n * A position in the editor.\n */\nexport class Position {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tpublic readonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tpublic readonly column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\t/**\n\t * Create a new postion from this position.\n\t *\n\t * @param newLineNumber new line number\n\t * @param newColumn new column\n\t */\n\twith(newLineNumber: number = this.lineNumber, newColumn: number = this.column): Position {\n\t\tif (newLineNumber === this.lineNumber && newColumn === this.column) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn new Position(newLineNumber, newColumn);\n\t\t}\n\t}\n\n\t/**\n\t * Derive a new position from this position.\n\t *\n\t * @param deltaLineNumber line number delta\n\t * @param deltaColumn column delta\n\t */\n\tdelta(deltaLineNumber: number = 0, deltaColumn: number = 0): Position {\n\t\treturn this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n\t}\n\n\t/**\n\t * Test if this position equals other position\n\t */\n\tpublic equals(other: IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` equals position `b`\n\t */\n\tpublic static equals(a: IPosition | null, b: IPosition | null): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic isBefore(other: IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic static isBefore(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic isBeforeOrEqual(other: IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic static isBeforeOrEqual(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\t/**\n\t * A function that compares positions, useful for sorting\n\t */\n\tpublic static compare(a: IPosition, b: IPosition): number {\n\t\tlet aLineNumber = a.lineNumber | 0;\n\t\tlet bLineNumber = b.lineNumber | 0;\n\n\t\tif (aLineNumber === bLineNumber) {\n\t\t\tlet aColumn = a.column | 0;\n\t\t\tlet bColumn = b.column | 0;\n\t\t\treturn aColumn - bColumn;\n\t\t}\n\n\t\treturn aLineNumber - bLineNumber;\n\t}\n\n\t/**\n\t * Clone this position.\n\t */\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\t/**\n\t * Convert to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Position` from an `IPosition`.\n\t */\n\tpublic static lift(pos: IPosition): Position {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IPosition`.\n\t */\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\n\n/**\n * A range in the editor. This interface is suitable for serialization.\n */\nexport interface IRange {\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\treadonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\treadonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tpublic readonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tpublic readonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tpublic readonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tpublic readonly endColumn: number;\n\n\tconstructor(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\t/**\n\t * Test if this range is empty.\n\t */\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\t/**\n\t * Test if `range` is empty.\n\t */\n\tpublic static isEmpty(range: IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tpublic containsPosition(position: IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return true.\n\t */\n\tpublic static containsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tpublic containsRange(range: IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n\t */\n\tpublic static containsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic plusRange(range: IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic static plusRange(a: IRange, b: IRange): Range {\n\t\tlet startLineNumber: number;\n\t\tlet startColumn: number;\n\t\tlet endLineNumber: number;\n\t\tlet endColumn: number;\n\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic intersectRanges(range: IRange): Range | null {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic static intersectRanges(a: IRange, b: IRange): Range | null {\n\t\tlet resultStartLineNumber = a.startLineNumber;\n\t\tlet resultStartColumn = a.startColumn;\n\t\tlet resultEndLineNumber = a.endLineNumber;\n\t\tlet resultEndColumn = a.endColumn;\n\t\tlet otherStartLineNumber = b.startLineNumber;\n\t\tlet otherStartColumn = b.startColumn;\n\t\tlet otherEndLineNumber = b.endLineNumber;\n\t\tlet otherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\t/**\n\t * Test if this range equals other.\n\t */\n\tpublic equalsRange(other: IRange | null): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\t/**\n\t * Test if range `a` equals `b`.\n\t */\n\tpublic static equalsRange(a: IRange | null, b: IRange | null): boolean {\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic getEndPosition(): Position {\n\t\treturn new Position(this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic getStartPosition(): Position {\n\t\treturn new Position(this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic collapseToStart(): Range {\n\t\treturn Range.collapseToStart(this);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic static collapseToStart(range: IRange): Range {\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n\t}\n\n\t// ---\n\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Range {\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Range` from an `IRange`.\n\t */\n\tpublic static lift(range: undefined | null): null;\n\tpublic static lift(range: IRange): Range;\n\tpublic static lift(range: IRange | undefined | null): Range | null {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IRange`.\n\t */\n\tpublic static isIRange(obj: any): obj is IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two ranges are touching in any way.\n\t */\n\tpublic static areIntersectingOrTouching(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n\t */\n\tpublic static areIntersecting(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a: IRange | null | undefined, b: IRange | null | undefined): number {\n\t\tif (a && b) {\n\t\t\tconst aStartLineNumber = a.startLineNumber | 0;\n\t\t\tconst bStartLineNumber = b.startLineNumber | 0;\n\n\t\t\tif (aStartLineNumber === bStartLineNumber) {\n\t\t\t\tconst aStartColumn = a.startColumn | 0;\n\t\t\t\tconst bStartColumn = b.startColumn | 0;\n\n\t\t\t\tif (aStartColumn === bStartColumn) {\n\t\t\t\t\tconst aEndLineNumber = a.endLineNumber | 0;\n\t\t\t\t\tconst bEndLineNumber = b.endLineNumber | 0;\n\n\t\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\n\t\t\t\t\t\tconst aEndColumn = a.endColumn | 0;\n\t\t\t\t\t\tconst bEndColumn = b.endColumn | 0;\n\t\t\t\t\t\treturn aEndColumn - bEndColumn;\n\t\t\t\t\t}\n\t\t\t\t\treturn aEndLineNumber - bEndLineNumber;\n\t\t\t\t}\n\t\t\t\treturn aStartColumn - bStartColumn;\n\t\t\t}\n\t\t\treturn aStartLineNumber - bStartLineNumber;\n\t\t}\n\t\tconst aExists = (a ? 1 : 0);\n\t\tconst bExists = (b ? 1 : 0);\n\t\treturn aExists - bExists;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a: IRange, b: IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\t/**\n\t * Test if the range spans multiple lines.\n\t */\n\tpublic static spansMultipleLines(range: IRange): boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport interface ISelection {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\treadonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\treadonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\treadonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\treadonly positionColumn: number;\n}\n\n/**\n * The direction of a selection.\n */\nexport const enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL\n}\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\tpublic readonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\tpublic readonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\tpublic readonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\tpublic readonly positionColumn: number;\n\n\tconstructor(selectionStartLineNumber: number, selectionStartColumn: number, positionLineNumber: number, positionColumn: number) {\n\t\tsuper(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n\t\tthis.selectionStartLineNumber = selectionStartLineNumber;\n\t\tthis.selectionStartColumn = selectionStartColumn;\n\t\tthis.positionLineNumber = positionLineNumber;\n\t\tthis.positionColumn = positionColumn;\n\t}\n\n\t/**\n\t * Clone this selection.\n\t */\n\tpublic clone(): Selection {\n\t\treturn new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n\t}\n\n\t/**\n\t * Transform to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n\t}\n\n\t/**\n\t * Test if equals other selection.\n\t */\n\tpublic equalsSelection(other: ISelection): boolean {\n\t\treturn (\n\t\t\tSelection.selectionsEqual(this, other)\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two selections are equal.\n\t */\n\tpublic static selectionsEqual(a: ISelection, b: ISelection): boolean {\n\t\treturn (\n\t\t\ta.selectionStartLineNumber === b.selectionStartLineNumber &&\n\t\t\ta.selectionStartColumn === b.selectionStartColumn &&\n\t\t\ta.positionLineNumber === b.positionLineNumber &&\n\t\t\ta.positionColumn === b.positionColumn\n\t\t);\n\t}\n\n\t/**\n\t * Get directions (LTR or RTL).\n\t */\n\tpublic getDirection(): SelectionDirection {\n\t\tif (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n\t\t\treturn SelectionDirection.LTR;\n\t\t}\n\t\treturn SelectionDirection.RTL;\n\t}\n\n\t/**\n\t * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t\t}\n\t\treturn new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Get the position at `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic getPosition(): Position {\n\t\treturn new Position(this.positionLineNumber, this.positionColumn);\n\t}\n\n\t/**\n\t * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t\t}\n\t\treturn new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n\t}\n\n\t// ----\n\n\t/**\n\t * Create a `Selection` from one or two positions\n\t */\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Selection {\n\t\treturn new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Selection` from an `ISelection`.\n\t */\n\tpublic static liftSelection(sel: ISelection): Selection {\n\t\treturn new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n\t}\n\n\t/**\n\t * `a` equals `b`.\n\t */\n\tpublic static selectionsArrEqual(a: ISelection[], b: ISelection[]): boolean {\n\t\tif (a && !b || !a && b) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = a.length; i < len; i++) {\n\t\t\tif (!this.selectionsEqual(a[i], b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `obj` is an `ISelection`.\n\t */\n\tpublic static isISelection(obj: any): obj is ISelection {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.selectionStartLineNumber === 'number')\n\t\t\t&& (typeof obj.selectionStartColumn === 'number')\n\t\t\t&& (typeof obj.positionLineNumber === 'number')\n\t\t\t&& (typeof obj.positionColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Create with a direction.\n\t */\n\tpublic static createWithDirection(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, direction: SelectionDirection): Selection {\n\n\t\tif (direction === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t}\n\n\t\treturn new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IState } from 'vs/editor/common/modes';\n\nexport class Token {\n\t_tokenBrand: void;\n\n\tpublic readonly offset: number;\n\tpublic readonly type: string;\n\tpublic readonly language: string;\n\n\tconstructor(offset: number, type: string, language: string) {\n\t\tthis.offset = offset | 0;// @perf\n\t\tthis.type = type;\n\t\tthis.language = language;\n\t}\n\n\tpublic toString(): string {\n\t\treturn '(' + this.offset + ', ' + this.type + ')';\n\t}\n}\n\nexport class TokenizationResult {\n\t_tokenizationResultBrand: void;\n\n\tpublic readonly tokens: Token[];\n\tpublic readonly endState: IState;\n\n\tconstructor(tokens: Token[], endState: IState) {\n\t\tthis.tokens = tokens;\n\t\tthis.endState = endState;\n\t}\n}\n\nexport class TokenizationResult2 {\n\t_tokenizationResult2Brand: void;\n\n\t/**\n\t * The tokens in binary format. Each token occupies two array indices. For token i:\n\t *  - at offset 2*i => startIndex\n\t *  - at offset 2*i + 1 => metadata\n\t *\n\t */\n\tpublic readonly tokens: Uint32Array;\n\tpublic readonly endState: IState;\n\n\tconstructor(tokens: Uint32Array, endState: IState) {\n\t\tthis.tokens = tokens;\n\t\tthis.endState = endState;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Uint8Matrix {\n\n\tprivate _data: Uint8Array;\n\tpublic readonly rows: number;\n\tpublic readonly cols: number;\n\n\tconstructor(rows: number, cols: number, defaultValue: number) {\n\t\tlet data = new Uint8Array(rows * cols);\n\t\tfor (let i = 0, len = rows * cols; i < len; i++) {\n\t\t\tdata[i] = defaultValue;\n\t\t}\n\n\t\tthis._data = data;\n\t\tthis.rows = rows;\n\t\tthis.cols = cols;\n\t}\n\n\tpublic get(row: number, col: number): number {\n\t\treturn this._data[row * this.cols + col];\n\t}\n\n\tpublic set(row: number, col: number, value: number): void {\n\t\tthis._data[row * this.cols + col] = value;\n\t}\n}\n\nexport const enum Constants {\n\t/**\n\t * MAX SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMAX_SAFE_SMALL_INTEGER = 1 << 30,\n\n\t/**\n\t * MIN SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMIN_SAFE_SMALL_INTEGER = -(1 << 30),\n\n\t/**\n\t * Max unsigned integer that fits on 8 bits.\n\t */\n\tMAX_UINT_8 = 255, // 2^8 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 16 bits.\n\t */\n\tMAX_UINT_16 = 65535, // 2^16 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 32 bits.\n\t */\n\tMAX_UINT_32 = 4294967295, // 2^32 - 1\n\n\n}\n\nexport function toUint8(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_8) {\n\t\treturn Constants.MAX_UINT_8;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_32) {\n\t\treturn Constants.MAX_UINT_32;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32Array(arr: number[]): Uint32Array {\n\tlet len = arr.length;\n\tlet r = new Uint32Array(len);\n\tfor (let i = 0; i < len; i++) {\n\t\tr[i] = toUint32(arr[i]);\n\t}\n\treturn r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint8 } from 'vs/editor/common/core/uint';\n\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier<T extends number> {\n\t/**\n\t * Maintain a compact (fully initialized ASCII map for quickly classifying ASCII characters - used more often in code).\n\t */\n\tprivate _asciiMap: Uint8Array;\n\n\t/**\n\t * The entire map (sparse array).\n\t */\n\tprivate _map: Map<number, number>;\n\n\tprivate _defaultValue: number;\n\n\tconstructor(_defaultValue: T) {\n\t\tlet defaultValue = toUint8(_defaultValue);\n\n\t\tthis._defaultValue = defaultValue;\n\t\tthis._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n\t\tthis._map = new Map<number, number>();\n\t}\n\n\tprivate static _createAsciiMap(defaultValue: number): Uint8Array {\n\t\tlet asciiMap: Uint8Array = new Uint8Array(256);\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tasciiMap[i] = defaultValue;\n\t\t}\n\t\treturn asciiMap;\n\t}\n\n\tpublic set(charCode: number, _value: T): void {\n\t\tlet value = toUint8(_value);\n\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\tthis._asciiMap[charCode] = value;\n\t\t} else {\n\t\t\tthis._map.set(charCode, value);\n\t\t}\n\t}\n\n\tpublic get(charCode: number): T {\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\treturn <T>this._asciiMap[charCode];\n\t\t} else {\n\t\t\treturn <T>(this._map.get(charCode) || this._defaultValue);\n\t\t}\n\t}\n}\n\nconst enum Boolean {\n\tFalse = 0,\n\tTrue = 1\n}\n\nexport class CharacterSet {\n\n\tprivate _actual: CharacterClassifier<Boolean>;\n\n\tconstructor() {\n\t\tthis._actual = new CharacterClassifier<Boolean>(Boolean.False);\n\t}\n\n\tpublic add(charCode: number): void {\n\t\tthis._actual.set(charCode, Boolean.True);\n\t}\n\n\tpublic has(charCode: number): boolean {\n\t\treturn (this._actual.get(charCode) === Boolean.True);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiffChange, ISequence, LcsDiff } from 'vs/base/common/diff/diff';\nimport * as strings from 'vs/base/common/strings';\nimport { ICharChange, ILineChange } from 'vs/editor/common/editorCommon';\n\nconst MAXIMUM_RUN_TIME = 5000; // 5 seconds\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\n\nfunction computeDiff(originalSequence: ISequence, modifiedSequence: ISequence, continueProcessingPredicate: () => boolean, pretty: boolean): IDiffChange[] {\n\tconst diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n\treturn diffAlgo.ComputeDiff(pretty);\n}\n\nclass LineMarkerSequence implements ISequence {\n\n\tprivate readonly _lines: string[];\n\tprivate readonly _startColumns: number[];\n\tprivate readonly _endColumns: number[];\n\n\tconstructor(lines: string[]) {\n\t\tlet startColumns: number[] = [];\n\t\tlet endColumns: number[] = [];\n\t\tfor (let i = 0, length = lines.length; i < length; i++) {\n\t\t\tstartColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n\t\t\tendColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n\t\t}\n\t\tthis._lines = lines;\n\t\tthis._startColumns = startColumns;\n\t\tthis._endColumns = endColumns;\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getElementAtIndex(i: number): string {\n\t\treturn this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n\t}\n\n\tpublic getStartLineNumber(i: number): number {\n\t\treturn i + 1;\n\t}\n\n\tpublic getEndLineNumber(i: number): number {\n\t\treturn i + 1;\n\t}\n\n\tpublic static _getFirstNonBlankColumn(txt: string, defaultValue: number): number {\n\t\tconst r = strings.firstNonWhitespaceIndex(txt);\n\t\tif (r === -1) {\n\t\t\treturn defaultValue;\n\t\t}\n\t\treturn r + 1;\n\t}\n\n\tpublic static _getLastNonBlankColumn(txt: string, defaultValue: number): number {\n\t\tconst r = strings.lastNonWhitespaceIndex(txt);\n\t\tif (r === -1) {\n\t\t\treturn defaultValue;\n\t\t}\n\t\treturn r + 2;\n\t}\n\n\tpublic getCharSequence(shouldIgnoreTrimWhitespace: boolean, startIndex: number, endIndex: number): CharSequence {\n\t\tlet charCodes: number[] = [];\n\t\tlet lineNumbers: number[] = [];\n\t\tlet columns: number[] = [];\n\t\tlet len = 0;\n\t\tfor (let index = startIndex; index <= endIndex; index++) {\n\t\t\tconst lineContent = this._lines[index];\n\t\t\tconst startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n\t\t\tconst endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n\t\t\tfor (let col = startColumn; col < endColumn; col++) {\n\t\t\t\tcharCodes[len] = lineContent.charCodeAt(col - 1);\n\t\t\t\tlineNumbers[len] = index + 1;\n\t\t\t\tcolumns[len] = col;\n\t\t\t\tlen++;\n\t\t\t}\n\t\t}\n\t\treturn new CharSequence(charCodes, lineNumbers, columns);\n\t}\n}\n\nclass CharSequence implements ISequence {\n\n\tprivate readonly _charCodes: number[];\n\tprivate readonly _lineNumbers: number[];\n\tprivate readonly _columns: number[];\n\n\tconstructor(charCodes: number[], lineNumbers: number[], columns: number[]) {\n\t\tthis._charCodes = charCodes;\n\t\tthis._lineNumbers = lineNumbers;\n\t\tthis._columns = columns;\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._charCodes.length;\n\t}\n\n\tpublic getElementAtIndex(i: number): number {\n\t\treturn this._charCodes[i];\n\t}\n\n\tpublic getStartLineNumber(i: number): number {\n\t\treturn this._lineNumbers[i];\n\t}\n\n\tpublic getStartColumn(i: number): number {\n\t\treturn this._columns[i];\n\t}\n\n\tpublic getEndLineNumber(i: number): number {\n\t\treturn this._lineNumbers[i];\n\t}\n\n\tpublic getEndColumn(i: number): number {\n\t\treturn this._columns[i] + 1;\n\t}\n}\n\nclass CharChange implements ICharChange {\n\n\tpublic originalStartLineNumber: number;\n\tpublic originalStartColumn: number;\n\tpublic originalEndLineNumber: number;\n\tpublic originalEndColumn: number;\n\n\tpublic modifiedStartLineNumber: number;\n\tpublic modifiedStartColumn: number;\n\tpublic modifiedEndLineNumber: number;\n\tpublic modifiedEndColumn: number;\n\n\tconstructor(\n\t\toriginalStartLineNumber: number,\n\t\toriginalStartColumn: number,\n\t\toriginalEndLineNumber: number,\n\t\toriginalEndColumn: number,\n\t\tmodifiedStartLineNumber: number,\n\t\tmodifiedStartColumn: number,\n\t\tmodifiedEndLineNumber: number,\n\t\tmodifiedEndColumn: number\n\t) {\n\t\tthis.originalStartLineNumber = originalStartLineNumber;\n\t\tthis.originalStartColumn = originalStartColumn;\n\t\tthis.originalEndLineNumber = originalEndLineNumber;\n\t\tthis.originalEndColumn = originalEndColumn;\n\t\tthis.modifiedStartLineNumber = modifiedStartLineNumber;\n\t\tthis.modifiedStartColumn = modifiedStartColumn;\n\t\tthis.modifiedEndLineNumber = modifiedEndLineNumber;\n\t\tthis.modifiedEndColumn = modifiedEndColumn;\n\t}\n\n\tpublic static createFromDiffChange(diffChange: IDiffChange, originalCharSequence: CharSequence, modifiedCharSequence: CharSequence): CharChange {\n\t\tlet originalStartLineNumber: number;\n\t\tlet originalStartColumn: number;\n\t\tlet originalEndLineNumber: number;\n\t\tlet originalEndColumn: number;\n\t\tlet modifiedStartLineNumber: number;\n\t\tlet modifiedStartColumn: number;\n\t\tlet modifiedEndLineNumber: number;\n\t\tlet modifiedEndColumn: number;\n\n\t\tif (diffChange.originalLength === 0) {\n\t\t\toriginalStartLineNumber = 0;\n\t\t\toriginalStartColumn = 0;\n\t\t\toriginalEndLineNumber = 0;\n\t\t\toriginalEndColumn = 0;\n\t\t} else {\n\t\t\toriginalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n\t\t\toriginalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n\t\t\toriginalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t\toriginalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t}\n\n\t\tif (diffChange.modifiedLength === 0) {\n\t\t\tmodifiedStartLineNumber = 0;\n\t\t\tmodifiedStartColumn = 0;\n\t\t\tmodifiedEndLineNumber = 0;\n\t\t\tmodifiedEndColumn = 0;\n\t\t} else {\n\t\t\tmodifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n\t\t\tmodifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n\t\t\tmodifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t\tmodifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t}\n\n\t\treturn new CharChange(\n\t\t\toriginalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn,\n\t\t\tmodifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn,\n\t\t);\n\t}\n}\n\nfunction postProcessCharChanges(rawChanges: IDiffChange[]): IDiffChange[] {\n\tif (rawChanges.length <= 1) {\n\t\treturn rawChanges;\n\t}\n\n\tlet result = [rawChanges[0]];\n\tlet prevChange = result[0];\n\n\tfor (let i = 1, len = rawChanges.length; i < len; i++) {\n\t\tconst currChange = rawChanges[i];\n\n\t\tconst originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n\t\tconst modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n\t\t// Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n\t\tconst matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n\n\t\tif (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n\t\t\t// Merge the current change into the previous one\n\t\t\tprevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n\t\t\tprevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n\t\t} else {\n\t\t\t// Add the current change\n\t\t\tresult.push(currChange);\n\t\t\tprevChange = currChange;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nclass LineChange implements ILineChange {\n\tpublic originalStartLineNumber: number;\n\tpublic originalEndLineNumber: number;\n\tpublic modifiedStartLineNumber: number;\n\tpublic modifiedEndLineNumber: number;\n\tpublic charChanges: CharChange[] | undefined;\n\n\tconstructor(\n\t\toriginalStartLineNumber: number,\n\t\toriginalEndLineNumber: number,\n\t\tmodifiedStartLineNumber: number,\n\t\tmodifiedEndLineNumber: number,\n\t\tcharChanges: CharChange[] | undefined\n\t) {\n\t\tthis.originalStartLineNumber = originalStartLineNumber;\n\t\tthis.originalEndLineNumber = originalEndLineNumber;\n\t\tthis.modifiedStartLineNumber = modifiedStartLineNumber;\n\t\tthis.modifiedEndLineNumber = modifiedEndLineNumber;\n\t\tthis.charChanges = charChanges;\n\t}\n\n\tpublic static createFromDiffResult(shouldIgnoreTrimWhitespace: boolean, diffChange: IDiffChange, originalLineSequence: LineMarkerSequence, modifiedLineSequence: LineMarkerSequence, continueProcessingPredicate: () => boolean, shouldComputeCharChanges: boolean, shouldPostProcessCharChanges: boolean): LineChange {\n\t\tlet originalStartLineNumber: number;\n\t\tlet originalEndLineNumber: number;\n\t\tlet modifiedStartLineNumber: number;\n\t\tlet modifiedEndLineNumber: number;\n\t\tlet charChanges: CharChange[] | undefined = undefined;\n\n\t\tif (diffChange.originalLength === 0) {\n\t\t\toriginalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n\t\t\toriginalEndLineNumber = 0;\n\t\t} else {\n\t\t\toriginalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n\t\t\toriginalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t}\n\n\t\tif (diffChange.modifiedLength === 0) {\n\t\t\tmodifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n\t\t\tmodifiedEndLineNumber = 0;\n\t\t} else {\n\t\t\tmodifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n\t\t\tmodifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t}\n\n\t\tif (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n\t\t\tconst originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n\t\t\tconst modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\n\t\t\tlet rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n\n\t\t\tif (shouldPostProcessCharChanges) {\n\t\t\t\trawChanges = postProcessCharChanges(rawChanges);\n\t\t\t}\n\n\t\t\tcharChanges = [];\n\t\t\tfor (let i = 0, length = rawChanges.length; i < length; i++) {\n\t\t\t\tcharChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n\t\t\t}\n\t\t}\n\n\t\treturn new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n\t}\n}\n\nexport interface IDiffComputerOpts {\n\tshouldComputeCharChanges: boolean;\n\tshouldPostProcessCharChanges: boolean;\n\tshouldIgnoreTrimWhitespace: boolean;\n\tshouldMakePrettyDiff: boolean;\n}\n\nexport class DiffComputer {\n\n\tprivate readonly shouldComputeCharChanges: boolean;\n\tprivate readonly shouldPostProcessCharChanges: boolean;\n\tprivate readonly shouldIgnoreTrimWhitespace: boolean;\n\tprivate readonly shouldMakePrettyDiff: boolean;\n\tprivate readonly maximumRunTimeMs: number;\n\tprivate readonly originalLines: string[];\n\tprivate readonly modifiedLines: string[];\n\tprivate readonly original: LineMarkerSequence;\n\tprivate readonly modified: LineMarkerSequence;\n\n\tprivate computationStartTime: number;\n\n\tconstructor(originalLines: string[], modifiedLines: string[], opts: IDiffComputerOpts) {\n\t\tthis.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n\t\tthis.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n\t\tthis.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n\t\tthis.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n\t\tthis.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n\t\tthis.originalLines = originalLines;\n\t\tthis.modifiedLines = modifiedLines;\n\t\tthis.original = new LineMarkerSequence(originalLines);\n\t\tthis.modified = new LineMarkerSequence(modifiedLines);\n\t}\n\n\tpublic computeDiff(): ILineChange[] {\n\n\t\tif (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\n\t\t\t// empty original => fast path\n\t\t\treturn [{\n\t\t\t\toriginalStartLineNumber: 1,\n\t\t\t\toriginalEndLineNumber: 1,\n\t\t\t\tmodifiedStartLineNumber: 1,\n\t\t\t\tmodifiedEndLineNumber: this.modified.getLength(),\n\t\t\t\tcharChanges: [{\n\t\t\t\t\tmodifiedEndColumn: 0,\n\t\t\t\t\tmodifiedEndLineNumber: 0,\n\t\t\t\t\tmodifiedStartColumn: 0,\n\t\t\t\t\tmodifiedStartLineNumber: 0,\n\t\t\t\t\toriginalEndColumn: 0,\n\t\t\t\t\toriginalEndLineNumber: 0,\n\t\t\t\t\toriginalStartColumn: 0,\n\t\t\t\t\toriginalStartLineNumber: 0\n\t\t\t\t}]\n\t\t\t}];\n\t\t}\n\n\t\tif (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\n\t\t\t// empty modified => fast path\n\t\t\treturn [{\n\t\t\t\toriginalStartLineNumber: 1,\n\t\t\t\toriginalEndLineNumber: this.original.getLength(),\n\t\t\t\tmodifiedStartLineNumber: 1,\n\t\t\t\tmodifiedEndLineNumber: 1,\n\t\t\t\tcharChanges: [{\n\t\t\t\t\tmodifiedEndColumn: 0,\n\t\t\t\t\tmodifiedEndLineNumber: 0,\n\t\t\t\t\tmodifiedStartColumn: 0,\n\t\t\t\t\tmodifiedStartLineNumber: 0,\n\t\t\t\t\toriginalEndColumn: 0,\n\t\t\t\t\toriginalEndLineNumber: 0,\n\t\t\t\t\toriginalStartColumn: 0,\n\t\t\t\t\toriginalStartLineNumber: 0\n\t\t\t\t}]\n\t\t\t}];\n\t\t}\n\n\t\tthis.computationStartTime = (new Date()).getTime();\n\n\t\tlet rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n\n\t\t// The diff is always computed with ignoring trim whitespace\n\t\t// This ensures we get the prettiest diff\n\n\t\tif (this.shouldIgnoreTrimWhitespace) {\n\t\t\tlet lineChanges: LineChange[] = [];\n\t\t\tfor (let i = 0, length = rawChanges.length; i < length; i++) {\n\t\t\t\tlineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n\t\t\t}\n\t\t\treturn lineChanges;\n\t\t}\n\n\t\t// Need to post-process and introduce changes where the trim whitespace is different\n\t\t// Note that we are looping starting at -1 to also cover the lines before the first change\n\t\tlet result: LineChange[] = [];\n\n\t\tlet originalLineIndex = 0;\n\t\tlet modifiedLineIndex = 0;\n\t\tfor (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n\t\t\tconst nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n\t\t\tconst originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n\t\t\tconst modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n\n\t\t\twhile (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n\t\t\t\tconst originalLine = this.originalLines[originalLineIndex];\n\t\t\t\tconst modifiedLine = this.modifiedLines[modifiedLineIndex];\n\n\t\t\t\tif (originalLine !== modifiedLine) {\n\t\t\t\t\t// These lines differ only in trim whitespace\n\n\t\t\t\t\t// Check the leading whitespace\n\t\t\t\t\t{\n\t\t\t\t\t\tlet originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n\t\t\t\t\t\tlet modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n\t\t\t\t\t\twhile (originalStartColumn > 1 && modifiedStartColumn > 1) {\n\t\t\t\t\t\t\tconst originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n\t\t\t\t\t\t\tconst modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n\t\t\t\t\t\t\tif (originalChar !== modifiedChar) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toriginalStartColumn--;\n\t\t\t\t\t\t\tmodifiedStartColumn--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (originalStartColumn > 1 || modifiedStartColumn > 1) {\n\t\t\t\t\t\t\tthis._pushTrimWhitespaceCharChange(result,\n\t\t\t\t\t\t\t\toriginalLineIndex + 1, 1, originalStartColumn,\n\t\t\t\t\t\t\t\tmodifiedLineIndex + 1, 1, modifiedStartColumn\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check the trailing whitespace\n\t\t\t\t\t{\n\t\t\t\t\t\tlet originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n\t\t\t\t\t\tlet modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n\t\t\t\t\t\tconst originalMaxColumn = originalLine.length + 1;\n\t\t\t\t\t\tconst modifiedMaxColumn = modifiedLine.length + 1;\n\t\t\t\t\t\twhile (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n\t\t\t\t\t\t\tconst originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n\t\t\t\t\t\t\tconst modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n\t\t\t\t\t\t\tif (originalChar !== modifiedChar) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toriginalEndColumn++;\n\t\t\t\t\t\t\tmodifiedEndColumn++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n\t\t\t\t\t\t\tthis._pushTrimWhitespaceCharChange(result,\n\t\t\t\t\t\t\t\toriginalLineIndex + 1, originalEndColumn, originalMaxColumn,\n\t\t\t\t\t\t\t\tmodifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toriginalLineIndex++;\n\t\t\t\tmodifiedLineIndex++;\n\t\t\t}\n\n\t\t\tif (nextChange) {\n\t\t\t\t// Emit the actual change\n\t\t\t\tresult.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n\n\t\t\t\toriginalLineIndex += nextChange.originalLength;\n\t\t\t\tmodifiedLineIndex += nextChange.modifiedLength;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _pushTrimWhitespaceCharChange(\n\t\tresult: LineChange[],\n\t\toriginalLineNumber: number, originalStartColumn: number, originalEndColumn: number,\n\t\tmodifiedLineNumber: number, modifiedStartColumn: number, modifiedEndColumn: number\n\t): void {\n\t\tif (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n\t\t\t// Merged into previous\n\t\t\treturn;\n\t\t}\n\n\t\tlet charChanges: CharChange[] | undefined = undefined;\n\t\tif (this.shouldComputeCharChanges) {\n\t\t\tcharChanges = [new CharChange(\n\t\t\t\toriginalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn,\n\t\t\t\tmodifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn\n\t\t\t)];\n\t\t}\n\t\tresult.push(new LineChange(\n\t\t\toriginalLineNumber, originalLineNumber,\n\t\t\tmodifiedLineNumber, modifiedLineNumber,\n\t\t\tcharChanges\n\t\t));\n\t}\n\n\tprivate _mergeTrimWhitespaceCharChange(\n\t\tresult: LineChange[],\n\t\toriginalLineNumber: number, originalStartColumn: number, originalEndColumn: number,\n\t\tmodifiedLineNumber: number, modifiedStartColumn: number, modifiedEndColumn: number\n\t): boolean {\n\t\tconst len = result.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst prevChange = result[len - 1];\n\n\t\tif (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n\t\t\t// Don't merge with inserts/deletes\n\t\t\treturn false;\n\t\t}\n\n\t\tif (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n\t\t\tprevChange.originalEndLineNumber = originalLineNumber;\n\t\t\tprevChange.modifiedEndLineNumber = modifiedLineNumber;\n\t\t\tif (this.shouldComputeCharChanges) {\n\t\t\t\tprevChange.charChanges!.push(new CharChange(\n\t\t\t\t\toriginalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn,\n\t\t\t\t\tmodifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn\n\t\t\t\t));\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _continueProcessingPredicate(): boolean {\n\t\tif (this.maximumRunTimeMs === 0) {\n\t\t\treturn true;\n\t\t}\n\t\tconst now = (new Date()).getTime();\n\t\treturn now - this.computationStartTime < this.maximumRunTimeMs;\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWordAtPosition } from 'vs/editor/common/model';\n\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords: string = ''): RegExp {\n\tlet source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\tfor (const sep of USUAL_WORD_SEPARATORS) {\n\t\tif (allowInWords.indexOf(sep) >= 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tsource += '\\\\' + sep;\n\t}\n\tsource += '\\\\s]+)';\n\treturn new RegExp(source, 'g');\n}\n\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\n\nexport function ensureValidWordDefinition(wordDefinition?: RegExp | null): RegExp {\n\tlet result: RegExp = DEFAULT_WORD_REGEXP;\n\n\tif (wordDefinition && (wordDefinition instanceof RegExp)) {\n\t\tif (!wordDefinition.global) {\n\t\t\tlet flags = 'g';\n\t\t\tif (wordDefinition.ignoreCase) {\n\t\t\t\tflags += 'i';\n\t\t\t}\n\t\t\tif (wordDefinition.multiline) {\n\t\t\t\tflags += 'm';\n\t\t\t}\n\t\t\tif ((wordDefinition as any).unicode) {\n\t\t\t\tflags += 'u';\n\t\t\t}\n\t\t\tresult = new RegExp(wordDefinition.source, flags);\n\t\t} else {\n\t\t\tresult = wordDefinition;\n\t\t}\n\t}\n\n\tresult.lastIndex = 0;\n\n\treturn result;\n}\n\nfunction getWordAtPosFast(column: number, wordDefinition: RegExp, text: string, textOffset: number): IWordAtPosition | null {\n\t// find whitespace enclosed text around column and match from there\n\n\tlet pos = column - 1 - textOffset;\n\tlet start = text.lastIndexOf(' ', pos - 1) + 1;\n\n\twordDefinition.lastIndex = start;\n\tlet match: RegExpMatchArray | null;\n\twhile (match = wordDefinition.exec(text)) {\n\t\tconst matchIndex = match.index || 0;\n\t\tif (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n\t\t\treturn {\n\t\t\t\tword: match[0],\n\t\t\t\tstartColumn: textOffset + 1 + matchIndex,\n\t\t\t\tendColumn: textOffset + 1 + wordDefinition.lastIndex\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\n\nfunction getWordAtPosSlow(column: number, wordDefinition: RegExp, text: string, textOffset: number): IWordAtPosition | null {\n\t// matches all words starting at the beginning\n\t// of the input until it finds a match that encloses\n\t// the desired column. slow but correct\n\n\tlet pos = column - 1 - textOffset;\n\twordDefinition.lastIndex = 0;\n\n\tlet match: RegExpMatchArray | null;\n\twhile (match = wordDefinition.exec(text)) {\n\t\tconst matchIndex = match.index || 0;\n\t\tif (matchIndex > pos) {\n\t\t\t// |nW -> matched only after the pos\n\t\t\treturn null;\n\n\t\t} else if (wordDefinition.lastIndex >= pos) {\n\t\t\t// W|W -> match encloses pos\n\t\t\treturn {\n\t\t\t\tword: match[0],\n\t\t\t\tstartColumn: textOffset + 1 + matchIndex,\n\t\t\t\tendColumn: textOffset + 1 + wordDefinition.lastIndex\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function getWordAtText(column: number, wordDefinition: RegExp, text: string, textOffset: number): IWordAtPosition | null {\n\n\t// if `words` can contain whitespace character we have to use the slow variant\n\t// otherwise we use the fast variant of finding a word\n\twordDefinition.lastIndex = 0;\n\tlet match = wordDefinition.exec(text);\n\tif (!match) {\n\t\treturn null;\n\t}\n\t// todo@joh the `match` could already be the (first) word\n\tconst ret = match[0].indexOf(' ') >= 0\n\t\t// did match a word which contains a space character -> use slow word find\n\t\t? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n\t\t// sane word definition -> use fast word find\n\t\t: getWordAtPosFast(column, wordDefinition, text, textOffset);\n\n\t// both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n\t// in an undefined state and to not confuse other users of the wordDefinition\n\t// we reset the lastIndex\n\twordDefinition.lastIndex = 0;\n\n\treturn ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { CharacterClassifier } from 'vs/editor/common/core/characterClassifier';\nimport { Uint8Matrix } from 'vs/editor/common/core/uint';\nimport { ILink } from 'vs/editor/common/modes';\n\nexport interface ILinkComputerTarget {\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport const enum State {\n\tInvalid = 0,\n\tStart = 1,\n\tH = 2,\n\tHT = 3,\n\tHTT = 4,\n\tHTTP = 5,\n\tF = 6,\n\tFI = 7,\n\tFIL = 8,\n\tBeforeColon = 9,\n\tAfterColon = 10,\n\tAlmostThere = 11,\n\tEnd = 12,\n\tAccept = 13,\n\tLastKnownState = 14 // marker, custom states may follow\n}\n\nexport type Edge = [State, number, State];\n\nexport class StateMachine {\n\n\tprivate _states: Uint8Matrix;\n\tprivate _maxCharCode: number;\n\n\tconstructor(edges: Edge[]) {\n\t\tlet maxCharCode = 0;\n\t\tlet maxState = State.Invalid;\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tlet [from, chCode, to] = edges[i];\n\t\t\tif (chCode > maxCharCode) {\n\t\t\t\tmaxCharCode = chCode;\n\t\t\t}\n\t\t\tif (from > maxState) {\n\t\t\t\tmaxState = from;\n\t\t\t}\n\t\t\tif (to > maxState) {\n\t\t\t\tmaxState = to;\n\t\t\t}\n\t\t}\n\n\t\tmaxCharCode++;\n\t\tmaxState++;\n\n\t\tlet states = new Uint8Matrix(maxState, maxCharCode, State.Invalid);\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tlet [from, chCode, to] = edges[i];\n\t\t\tstates.set(from, chCode, to);\n\t\t}\n\n\t\tthis._states = states;\n\t\tthis._maxCharCode = maxCharCode;\n\t}\n\n\tpublic nextState(currentState: State, chCode: number): State {\n\t\tif (chCode < 0 || chCode >= this._maxCharCode) {\n\t\t\treturn State.Invalid;\n\t\t}\n\t\treturn this._states.get(currentState, chCode);\n\t}\n}\n\n// State machine for http:// or https:// or file://\nlet _stateMachine: StateMachine | null = null;\nfunction getStateMachine(): StateMachine {\n\tif (_stateMachine === null) {\n\t\t_stateMachine = new StateMachine([\n\t\t\t[State.Start, CharCode.h, State.H],\n\t\t\t[State.Start, CharCode.H, State.H],\n\t\t\t[State.Start, CharCode.f, State.F],\n\t\t\t[State.Start, CharCode.F, State.F],\n\n\t\t\t[State.H, CharCode.t, State.HT],\n\t\t\t[State.H, CharCode.T, State.HT],\n\n\t\t\t[State.HT, CharCode.t, State.HTT],\n\t\t\t[State.HT, CharCode.T, State.HTT],\n\n\t\t\t[State.HTT, CharCode.p, State.HTTP],\n\t\t\t[State.HTT, CharCode.P, State.HTTP],\n\n\t\t\t[State.HTTP, CharCode.s, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.S, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.F, CharCode.i, State.FI],\n\t\t\t[State.F, CharCode.I, State.FI],\n\n\t\t\t[State.FI, CharCode.l, State.FIL],\n\t\t\t[State.FI, CharCode.L, State.FIL],\n\n\t\t\t[State.FIL, CharCode.e, State.BeforeColon],\n\t\t\t[State.FIL, CharCode.E, State.BeforeColon],\n\n\t\t\t[State.BeforeColon, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.AfterColon, CharCode.Slash, State.AlmostThere],\n\n\t\t\t[State.AlmostThere, CharCode.Slash, State.End],\n\t\t]);\n\t}\n\treturn _stateMachine;\n}\n\n\nconst enum CharacterClass {\n\tNone = 0,\n\tForceTermination = 1,\n\tCannotEndIn = 2\n}\n\nlet _classifier: CharacterClassifier<CharacterClass> | null = null;\nfunction getClassifier(): CharacterClassifier<CharacterClass> {\n\tif (_classifier === null) {\n\t\t_classifier = new CharacterClassifier<CharacterClass>(CharacterClass.None);\n\n\t\tconst FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n\t\tfor (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), CharacterClass.ForceTermination);\n\t\t}\n\n\t\tconst CANNOT_END_WITH_CHARACTERS = '.,;';\n\t\tfor (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), CharacterClass.CannotEndIn);\n\t\t}\n\t}\n\treturn _classifier;\n}\n\nexport class LinkComputer {\n\n\tprivate static _createLink(classifier: CharacterClassifier<CharacterClass>, line: string, lineNumber: number, linkBeginIndex: number, linkEndIndex: number): ILink {\n\t\t// Do not allow to end link in certain characters...\n\t\tlet lastIncludedCharIndex = linkEndIndex - 1;\n\t\tdo {\n\t\t\tconst chCode = line.charCodeAt(lastIncludedCharIndex);\n\t\t\tconst chClass = classifier.get(chCode);\n\t\t\tif (chClass !== CharacterClass.CannotEndIn) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlastIncludedCharIndex--;\n\t\t} while (lastIncludedCharIndex > linkBeginIndex);\n\n\t\t// Handle links enclosed in parens, square brackets and curlys.\n\t\tif (linkBeginIndex > 0) {\n\t\t\tconst charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n\t\t\tconst lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n\n\t\t\tif (\n\t\t\t\t(charCodeBeforeLink === CharCode.OpenParen && lastCharCodeInLink === CharCode.CloseParen)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenSquareBracket && lastCharCodeInLink === CharCode.CloseSquareBracket)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenCurlyBrace && lastCharCodeInLink === CharCode.CloseCurlyBrace)\n\t\t\t) {\n\t\t\t\t// Do not end in ) if ( is before the link start\n\t\t\t\t// Do not end in ] if [ is before the link start\n\t\t\t\t// Do not end in } if { is before the link start\n\t\t\t\tlastIncludedCharIndex--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trange: {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn: linkBeginIndex + 1,\n\t\t\t\tendLineNumber: lineNumber,\n\t\t\t\tendColumn: lastIncludedCharIndex + 2\n\t\t\t},\n\t\t\turl: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n\t\t};\n\t}\n\n\tpublic static computeLinks(model: ILinkComputerTarget, stateMachine: StateMachine = getStateMachine()): ILink[] {\n\t\tconst classifier = getClassifier();\n\n\t\tlet result: ILink[] = [];\n\t\tfor (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n\t\t\tconst line = model.getLineContent(i);\n\t\t\tconst len = line.length;\n\n\t\t\tlet j = 0;\n\t\t\tlet linkBeginIndex = 0;\n\t\t\tlet linkBeginChCode = 0;\n\t\t\tlet state = State.Start;\n\t\t\tlet hasOpenParens = false;\n\t\t\tlet hasOpenSquareBracket = false;\n\t\t\tlet hasOpenCurlyBracket = false;\n\n\t\t\twhile (j < len) {\n\n\t\t\t\tlet resetStateMachine = false;\n\t\t\t\tconst chCode = line.charCodeAt(j);\n\n\t\t\t\tif (state === State.Accept) {\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tswitch (chCode) {\n\t\t\t\t\t\tcase CharCode.OpenParen:\n\t\t\t\t\t\t\thasOpenParens = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseParen:\n\t\t\t\t\t\t\tchClass = (hasOpenParens ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenSquareBracket:\n\t\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseSquareBracket:\n\t\t\t\t\t\t\tchClass = (hasOpenSquareBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenCurlyBrace:\n\t\t\t\t\t\t\thasOpenCurlyBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseCurlyBrace:\n\t\t\t\t\t\t\tchClass = (hasOpenCurlyBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t/* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n\t\t\t\t\t\tcase CharCode.SingleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.DoubleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.DoubleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.BackTick:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.DoubleQuote) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (state === State.End) {\n\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tif (chCode === CharCode.OpenSquareBracket) {\n\t\t\t\t\t\t// Allow for the authority part to contain ipv6 addresses which contain [ and ]\n\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate = State.Accept;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate = stateMachine.nextState(state, chCode);\n\t\t\t\t\tif (state === State.Invalid) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resetStateMachine) {\n\t\t\t\t\tstate = State.Start;\n\t\t\t\t\thasOpenParens = false;\n\t\t\t\t\thasOpenSquareBracket = false;\n\t\t\t\t\thasOpenCurlyBracket = false;\n\n\t\t\t\t\t// Record where the link started\n\t\t\t\t\tlinkBeginIndex = j + 1;\n\t\t\t\t\tlinkBeginChCode = chCode;\n\t\t\t\t}\n\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\tif (state === State.Accept) {\n\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model: ILinkComputerTarget | null): ILink[] {\n\tif (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n\t\t// Unknown caller!\n\t\treturn [];\n\t}\n\treturn LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IInplaceReplaceSupportResult } from 'vs/editor/common/modes';\n\nexport class BasicInplaceReplace {\n\n\tpublic static readonly INSTANCE = new BasicInplaceReplace();\n\n\tpublic navigateValueSet(range1: IRange, text1: string, range2: IRange, text2: string | null, up: boolean): IInplaceReplaceSupportResult | null {\n\n\t\tif (range1 && text1) {\n\t\t\tlet result = this.doNavigateValueSet(text1, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range1,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (range2 && text2) {\n\t\t\tlet result = this.doNavigateValueSet(text2, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range2,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate doNavigateValueSet(text: string, up: boolean): string | null {\n\t\tlet numberResult = this.numberReplace(text, up);\n\t\tif (numberResult !== null) {\n\t\t\treturn numberResult;\n\t\t}\n\t\treturn this.textReplace(text, up);\n\t}\n\n\tprivate numberReplace(value: string, up: boolean): string | null {\n\t\tlet precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n\t\tlet n1 = Number(value);\n\t\tlet n2 = parseFloat(value);\n\n\t\tif (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n\n\t\t\tif (n1 === 0 && !up) {\n\t\t\t\treturn null; // don't do negative\n\t\t\t\t//\t\t\t} else if(n1 === 9 && up) {\n\t\t\t\t//\t\t\t\treturn null; // don't insert 10 into a number\n\t\t\t} else {\n\t\t\t\tn1 = Math.floor(n1 * precision);\n\t\t\t\tn1 += up ? precision : -precision;\n\t\t\t\treturn String(n1 / precision);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _defaultValueSet: string[][] = [\n\t\t['true', 'false'],\n\t\t['True', 'False'],\n\t\t['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n\t\t['public', 'protected', 'private'],\n\t];\n\n\tprivate textReplace(value: string, up: boolean): string | null {\n\t\treturn this.valueSetsReplace(this._defaultValueSet, value, up);\n\t}\n\n\tprivate valueSetsReplace(valueSets: string[][], value: string, up: boolean): string | null {\n\t\tlet result: string | null = null;\n\t\tfor (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n\t\t\tresult = this.valueSetReplace(valueSets[i], value, up);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate valueSetReplace(valueSet: string[], value: string, up: boolean): string | null {\n\t\tlet idx = valueSet.indexOf(value);\n\t\tif (idx >= 0) {\n\t\t\tidx += up ? +1 : -1;\n\t\t\tif (idx < 0) {\n\t\t\t\tidx = valueSet.length - 1;\n\t\t\t} else {\n\t\t\t\tidx %= valueSet.length;\n\t\t\t}\n\t\t\treturn valueSet[idx];\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\t\ttypeof define === 'function' && define.amd ? define(\"vs/editor/common/standalone/promise-polyfill/polyfill\", factory) :\n\t\t\t(factory());\n}(this, (function () {\n\t'use strict';\n\n\t/**\n\t * @this {Promise}\n\t */\n\tfunction finallyConstructor(callback) {\n\t\tvar constructor = this.constructor;\n\t\treturn this.then(\n\t\t\tfunction (value) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (reason) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn constructor.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\tvar setTimeoutFunc = setTimeout;\n\n\tfunction noop() { }\n\n\t// Polyfill for Function.prototype.bind\n\tfunction bind(fn, thisArg) {\n\t\treturn function () {\n\t\t\tfn.apply(thisArg, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Function} fn\n\t */\n\tfunction Promise(fn) {\n\t\tif (!(this instanceof Promise))\n\t\t\tthrow new TypeError('Promises must be constructed via new');\n\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t/** @type {!number} */\n\t\tthis._state = 0;\n\t\t/** @type {!boolean} */\n\t\tthis._handled = false;\n\t\t/** @type {Promise|undefined} */\n\t\tthis._value = undefined;\n\t\t/** @type {!Array<!Function>} */\n\t\tthis._deferreds = [];\n\n\t\tdoResolve(fn, this);\n\t}\n\n\tfunction handle(self, deferred) {\n\t\twhile (self._state === 3) {\n\t\t\tself = self._value;\n\t\t}\n\t\tif (self._state === 0) {\n\t\t\tself._deferreds.push(deferred);\n\t\t\treturn;\n\t\t}\n\t\tself._handled = true;\n\t\tPromise._immediateFn(function () {\n\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\tif (cb === null) {\n\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret;\n\t\t\ttry {\n\t\t\t\tret = cb(self._value);\n\t\t\t} catch (e) {\n\t\t\t\treject(deferred.promise, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(deferred.promise, ret);\n\t\t});\n\t}\n\n\tfunction resolve(self, newValue) {\n\t\ttry {\n\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === self)\n\t\t\t\tthrow new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (\n\t\t\t\tnewValue &&\n\t\t\t\t(typeof newValue === 'object' || typeof newValue === 'function')\n\t\t\t) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\tself._state = 3;\n\t\t\t\t\tself._value = newValue;\n\t\t\t\t\tfinale(self);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself._state = 1;\n\t\t\tself._value = newValue;\n\t\t\tfinale(self);\n\t\t} catch (e) {\n\t\t\treject(self, e);\n\t\t}\n\t}\n\n\tfunction reject(self, newValue) {\n\t\tself._state = 2;\n\t\tself._value = newValue;\n\t\tfinale(self);\n\t}\n\n\tfunction finale(self) {\n\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\tPromise._immediateFn(function () {\n\t\t\t\tif (!self._handled) {\n\t\t\t\t\tPromise._unhandledRejectionFn(self._value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\thandle(self, self._deferreds[i]);\n\t\t}\n\t\tself._deferreds = null;\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\tthis.promise = promise;\n\t}\n\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, self) {\n\t\tvar done = false;\n\t\ttry {\n\t\t\tfn(\n\t\t\t\tfunction (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(self, value);\n\t\t\t\t},\n\t\t\t\tfunction (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(self, reason);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tif (done) return;\n\t\t\tdone = true;\n\t\t\treject(self, ex);\n\t\t}\n\t}\n\n\tPromise.prototype['catch'] = function (onRejected) {\n\t\treturn this.then(null, onRejected);\n\t};\n\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t// @ts-ignore\n\t\tvar prom = new this.constructor(noop);\n\n\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\treturn prom;\n\t};\n\n\tPromise.prototype['finally'] = finallyConstructor;\n\n\tPromise.all = function (arr) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!arr || typeof arr.length === 'undefined')\n\t\t\t\tthrow new TypeError('Promise.all accepts an array');\n\t\t\tvar args = Array.prototype.slice.call(arr);\n\t\t\tif (args.length === 0) return resolve([]);\n\t\t\tvar remaining = args.length;\n\n\t\t\tfunction res(i, val) {\n\t\t\t\ttry {\n\t\t\t\t\tif (val && (typeof val === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tfunction (val) {\n\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tres(i, args[i]);\n\t\t\t}\n\t\t});\n\t};\n\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\n\tPromise.reject = function (value) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(value);\n\t\t});\n\t};\n\n\tPromise.race = function (values) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Use polyfill for setImmediate for performance gains\n\tPromise._immediateFn =\n\t\t(typeof setImmediate === 'function' &&\n\t\t\tfunction (fn) {\n\t\t\t\tsetImmediate(fn);\n\t\t\t}) ||\n\t\tfunction (fn) {\n\t\t\tsetTimeoutFunc(fn, 0);\n\t\t};\n\n\tPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t\tif (typeof console !== 'undefined' && console) {\n\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t}\n\t};\n\n\t/** @suppress {undefinedVars} */\n\tvar globalNS = (function () {\n\t\t// the only reliable means to get the global object is\n\t\t// `Function('return this')()`\n\t\t// However, this causes CSP violations in Chrome apps.\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self;\n\t\t}\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn window;\n\t\t}\n\t\tif (typeof global !== 'undefined') {\n\t\t\treturn global;\n\t\t}\n\t\tthrow new Error('unable to locate global object');\n\t})();\n\n\tif (!('Promise' in globalNS)) {\n\t\tglobalNS['Promise'] = Promise;\n\t} else if (!globalNS.Promise.prototype['finally']) {\n\t\tglobalNS.Promise.prototype['finally'] = finallyConstructor;\n\t}\n\n})));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\n\n\nexport enum MarkerTag {\n\tUnnecessary = 1\n}\n\nexport enum MarkerSeverity {\n\tHint = 1,\n\tInfo = 2,\n\tWarning = 4,\n\tError = 8\n}\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport enum KeyCode {\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown = 0,\n\tBackspace = 1,\n\tTab = 2,\n\tEnter = 3,\n\tShift = 4,\n\tCtrl = 5,\n\tAlt = 6,\n\tPauseBreak = 7,\n\tCapsLock = 8,\n\tEscape = 9,\n\tSpace = 10,\n\tPageUp = 11,\n\tPageDown = 12,\n\tEnd = 13,\n\tHome = 14,\n\tLeftArrow = 15,\n\tUpArrow = 16,\n\tRightArrow = 17,\n\tDownArrow = 18,\n\tInsert = 19,\n\tDelete = 20,\n\tKEY_0 = 21,\n\tKEY_1 = 22,\n\tKEY_2 = 23,\n\tKEY_3 = 24,\n\tKEY_4 = 25,\n\tKEY_5 = 26,\n\tKEY_6 = 27,\n\tKEY_7 = 28,\n\tKEY_8 = 29,\n\tKEY_9 = 30,\n\tKEY_A = 31,\n\tKEY_B = 32,\n\tKEY_C = 33,\n\tKEY_D = 34,\n\tKEY_E = 35,\n\tKEY_F = 36,\n\tKEY_G = 37,\n\tKEY_H = 38,\n\tKEY_I = 39,\n\tKEY_J = 40,\n\tKEY_K = 41,\n\tKEY_L = 42,\n\tKEY_M = 43,\n\tKEY_N = 44,\n\tKEY_O = 45,\n\tKEY_P = 46,\n\tKEY_Q = 47,\n\tKEY_R = 48,\n\tKEY_S = 49,\n\tKEY_T = 50,\n\tKEY_U = 51,\n\tKEY_V = 52,\n\tKEY_W = 53,\n\tKEY_X = 54,\n\tKEY_Y = 55,\n\tKEY_Z = 56,\n\tMeta = 57,\n\tContextMenu = 58,\n\tF1 = 59,\n\tF2 = 60,\n\tF3 = 61,\n\tF4 = 62,\n\tF5 = 63,\n\tF6 = 64,\n\tF7 = 65,\n\tF8 = 66,\n\tF9 = 67,\n\tF10 = 68,\n\tF11 = 69,\n\tF12 = 70,\n\tF13 = 71,\n\tF14 = 72,\n\tF15 = 73,\n\tF16 = 74,\n\tF17 = 75,\n\tF18 = 76,\n\tF19 = 77,\n\tNumLock = 78,\n\tScrollLock = 79,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tUS_SEMICOLON = 80,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tUS_EQUAL = 81,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tUS_COMMA = 82,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tUS_MINUS = 83,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tUS_DOT = 84,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tUS_SLASH = 85,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tUS_BACKTICK = 86,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tUS_OPEN_SQUARE_BRACKET = 87,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tUS_BACKSLASH = 88,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tUS_CLOSE_SQUARE_BRACKET = 89,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tUS_QUOTE = 90,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8 = 91,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tOEM_102 = 92,\n\tNUMPAD_0 = 93,\n\tNUMPAD_1 = 94,\n\tNUMPAD_2 = 95,\n\tNUMPAD_3 = 96,\n\tNUMPAD_4 = 97,\n\tNUMPAD_5 = 98,\n\tNUMPAD_6 = 99,\n\tNUMPAD_7 = 100,\n\tNUMPAD_8 = 101,\n\tNUMPAD_9 = 102,\n\tNUMPAD_MULTIPLY = 103,\n\tNUMPAD_ADD = 104,\n\tNUMPAD_SEPARATOR = 105,\n\tNUMPAD_SUBTRACT = 106,\n\tNUMPAD_DECIMAL = 107,\n\tNUMPAD_DIVIDE = 108,\n\t/**\n\t * Cover all key codes when IME is processing input.\n\t */\n\tKEY_IN_COMPOSITION = 109,\n\tABNT_C1 = 110,\n\tABNT_C2 = 111,\n\t/**\n\t * Placed last to cover the length of the enum.\n\t * Please do not depend on this value!\n\t */\n\tMAX_VALUE = 112\n}\n\n/**\n * The direction of a selection.\n */\nexport enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR = 0,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL = 1\n}\n\nexport enum ScrollbarVisibility {\n\tAuto = 1,\n\tHidden = 2,\n\tVisible = 3\n}\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLinePreference {\n\t/**\n\t * Use the end of line character identified in the text buffer.\n\t */\n\tTextDefined = 0,\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * The default end of line to use when instantiating models.\n */\nexport enum DefaultEndOfLine {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLineSequence {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 0,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 1\n}\n\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport enum TrackedRangeStickiness {\n\tAlwaysGrowsWhenTypingAtEdges = 0,\n\tNeverGrowsWhenTypingAtEdges = 1,\n\tGrowsOnlyWhenTypingBefore = 2,\n\tGrowsOnlyWhenTypingAfter = 3\n}\n\nexport enum ScrollType {\n\tSmooth = 0,\n\tImmediate = 1\n}\n\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport enum CursorChangeReason {\n\t/**\n\t * Unknown or not set.\n\t */\n\tNotSet = 0,\n\t/**\n\t * A `model.setValue()` was called.\n\t */\n\tContentFlush = 1,\n\t/**\n\t * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n\t */\n\tRecoverFromMarkers = 2,\n\t/**\n\t * There was an explicit user gesture.\n\t */\n\tExplicit = 3,\n\t/**\n\t * There was a Paste.\n\t */\n\tPaste = 4,\n\t/**\n\t * There was an Undo.\n\t */\n\tUndo = 5,\n\t/**\n\t * There was a Redo.\n\t */\n\tRedo = 6\n}\n\nexport enum RenderMinimap {\n\tNone = 0,\n\tSmall = 1,\n\tLarge = 2,\n\tSmallBlocks = 3,\n\tLargeBlocks = 4\n}\n\n/**\n * Describes how to indent wrapped lines.\n */\nexport enum WrappingIndent {\n\t/**\n\t * No indentation => wrapped lines begin at column 1.\n\t */\n\tNone = 0,\n\t/**\n\t * Same => wrapped lines get the same indentation as the parent.\n\t */\n\tSame = 1,\n\t/**\n\t * Indent => wrapped lines get +1 indentation toward the parent.\n\t */\n\tIndent = 2,\n\t/**\n\t * DeepIndent => wrapped lines get +2 indentation toward the parent.\n\t */\n\tDeepIndent = 3\n}\n\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorBlinkingStyle {\n\t/**\n\t * Hidden\n\t */\n\tHidden = 0,\n\t/**\n\t * Blinking\n\t */\n\tBlink = 1,\n\t/**\n\t * Blinking with smooth fading\n\t */\n\tSmooth = 2,\n\t/**\n\t * Blinking with prolonged filled state and smooth fading\n\t */\n\tPhase = 3,\n\t/**\n\t * Expand collapse animation on the y axis\n\t */\n\tExpand = 4,\n\t/**\n\t * No-Blinking\n\t */\n\tSolid = 5\n}\n\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorStyle {\n\t/**\n\t * As a vertical line (sitting between two characters).\n\t */\n\tLine = 1,\n\t/**\n\t * As a block (sitting on top of a character).\n\t */\n\tBlock = 2,\n\t/**\n\t * As a horizontal line (sitting under a character).\n\t */\n\tUnderline = 3,\n\t/**\n\t * As a thin vertical line (sitting between two characters).\n\t */\n\tLineThin = 4,\n\t/**\n\t * As an outlined block (sitting on top of a character).\n\t */\n\tBlockOutline = 5,\n\t/**\n\t * As a thin horizontal line (sitting under a character).\n\t */\n\tUnderlineThin = 6\n}\n\nexport enum RenderLineNumbersType {\n\tOff = 0,\n\tOn = 1,\n\tRelative = 2,\n\tInterval = 3,\n\tCustom = 4\n}\n\n/**\n * A positioning preference for rendering content widgets.\n */\nexport enum ContentWidgetPositionPreference {\n\t/**\n\t * Place the content widget exactly at a position\n\t */\n\tEXACT = 0,\n\t/**\n\t * Place the content widget above a position\n\t */\n\tABOVE = 1,\n\t/**\n\t * Place the content widget below a position\n\t */\n\tBELOW = 2\n}\n\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport enum OverlayWidgetPositionPreference {\n\t/**\n\t * Position the overlay widget in the top right corner\n\t */\n\tTOP_RIGHT_CORNER = 0,\n\t/**\n\t * Position the overlay widget in the bottom right corner\n\t */\n\tBOTTOM_RIGHT_CORNER = 1,\n\t/**\n\t * Position the overlay widget in the top center\n\t */\n\tTOP_CENTER = 2\n}\n\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport enum MouseTargetType {\n\t/**\n\t * Mouse is on top of an unknown element.\n\t */\n\tUNKNOWN = 0,\n\t/**\n\t * Mouse is on top of the textarea used for input.\n\t */\n\tTEXTAREA = 1,\n\t/**\n\t * Mouse is on top of the glyph margin\n\t */\n\tGUTTER_GLYPH_MARGIN = 2,\n\t/**\n\t * Mouse is on top of the line numbers\n\t */\n\tGUTTER_LINE_NUMBERS = 3,\n\t/**\n\t * Mouse is on top of the line decorations\n\t */\n\tGUTTER_LINE_DECORATIONS = 4,\n\t/**\n\t * Mouse is on top of the whitespace left in the gutter by a view zone.\n\t */\n\tGUTTER_VIEW_ZONE = 5,\n\t/**\n\t * Mouse is on top of text in the content.\n\t */\n\tCONTENT_TEXT = 6,\n\t/**\n\t * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n\t */\n\tCONTENT_EMPTY = 7,\n\t/**\n\t * Mouse is on top of a view zone in the content.\n\t */\n\tCONTENT_VIEW_ZONE = 8,\n\t/**\n\t * Mouse is on top of a content widget.\n\t */\n\tCONTENT_WIDGET = 9,\n\t/**\n\t * Mouse is on top of the decorations overview ruler.\n\t */\n\tOVERVIEW_RULER = 10,\n\t/**\n\t * Mouse is on top of a scrollbar.\n\t */\n\tSCROLLBAR = 11,\n\t/**\n\t * Mouse is on top of an overlay widget.\n\t */\n\tOVERLAY_WIDGET = 12,\n\t/**\n\t * Mouse is outside of the editor.\n\t */\n\tOUTSIDE_EDITOR = 13\n}\n\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport enum IndentAction {\n\t/**\n\t * Insert new line and copy the previous line's indentation.\n\t */\n\tNone = 0,\n\t/**\n\t * Insert new line and indent once (relative to the previous line's indentation).\n\t */\n\tIndent = 1,\n\t/**\n\t * Insert two new lines:\n\t *  - the first one indented which will hold the cursor\n\t *  - the second one at the same indentation level\n\t */\n\tIndentOutdent = 2,\n\t/**\n\t * Insert new line and outdent once (relative to the previous line's indentation).\n\t */\n\tOutdent = 3\n}\n\nexport enum CompletionItemKind {\n\tMethod = 0,\n\tFunction = 1,\n\tConstructor = 2,\n\tField = 3,\n\tVariable = 4,\n\tClass = 5,\n\tStruct = 6,\n\tInterface = 7,\n\tModule = 8,\n\tProperty = 9,\n\tEvent = 10,\n\tOperator = 11,\n\tUnit = 12,\n\tValue = 13,\n\tConstant = 14,\n\tEnum = 15,\n\tEnumMember = 16,\n\tKeyword = 17,\n\tText = 18,\n\tColor = 19,\n\tFile = 20,\n\tReference = 21,\n\tCustomcolor = 22,\n\tFolder = 23,\n\tTypeParameter = 24,\n\tSnippet = 25\n}\n\nexport enum CompletionItemInsertTextRule {\n\t/**\n\t * Adjust whitespace/indentation of multiline insert texts to\n\t * match the current line indentation.\n\t */\n\tKeepWhitespace = 1,\n\t/**\n\t * `insertText` is a snippet.\n\t */\n\tInsertAsSnippet = 4\n}\n\n/**\n * How a suggest provider was triggered.\n */\nexport enum CompletionTriggerKind {\n\tInvoke = 0,\n\tTriggerCharacter = 1,\n\tTriggerForIncompleteCompletions = 2\n}\n\nexport enum SignatureHelpTriggerKind {\n\tInvoke = 1,\n\tTriggerCharacter = 2,\n\tContentChange = 3\n}\n\n/**\n * A document highlight kind.\n */\nexport enum DocumentHighlightKind {\n\t/**\n\t * A textual occurrence.\n\t */\n\tText = 0,\n\t/**\n\t * Read-access of a symbol, like reading a variable.\n\t */\n\tRead = 1,\n\t/**\n\t * Write-access of a symbol, like writing to a variable.\n\t */\n\tWrite = 2\n}\n\n/**\n * A symbol kind.\n */\nexport enum SymbolKind {\n\tFile = 0,\n\tModule = 1,\n\tNamespace = 2,\n\tPackage = 3,\n\tClass = 4,\n\tMethod = 5,\n\tProperty = 6,\n\tField = 7,\n\tConstructor = 8,\n\tEnum = 9,\n\tInterface = 10,\n\tFunction = 11,\n\tVariable = 12,\n\tConstant = 13,\n\tString = 14,\n\tNumber = 15,\n\tBoolean = 16,\n\tArray = 17,\n\tObject = 18,\n\tKey = 19,\n\tNull = 20,\n\tEnumMember = 21,\n\tStruct = 22,\n\tEvent = 23,\n\tOperator = 24,\n\tTypeParameter = 25\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/editor/common/standalone/promise-polyfill/polyfill';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { KeyChord, KeyMod as ConstKeyMod } from 'vs/base/common/keyCodes';\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { Token } from 'vs/editor/common/core/token';\nimport * as standaloneEnums from 'vs/editor/common/standalone/standaloneEnums';\n\nexport class KeyMod {\n\tpublic static readonly CtrlCmd: number = ConstKeyMod.CtrlCmd;\n\tpublic static readonly Shift: number = ConstKeyMod.Shift;\n\tpublic static readonly Alt: number = ConstKeyMod.Alt;\n\tpublic static readonly WinCtrl: number = ConstKeyMod.WinCtrl;\n\n\tpublic static chord(firstPart: number, secondPart: number): number {\n\t\treturn KeyChord(firstPart, secondPart);\n\t}\n}\n\nexport function createMonacoBaseAPI(): typeof monaco {\n\treturn {\n\t\teditor: undefined!, // undefined override expected here\n\t\tlanguages: undefined!, // undefined override expected here\n\t\tCancellationTokenSource: CancellationTokenSource,\n\t\tEmitter: Emitter,\n\t\tKeyCode: standaloneEnums.KeyCode,\n\t\tKeyMod: KeyMod,\n\t\tPosition: Position,\n\t\tRange: Range,\n\t\tSelection: <any>Selection,\n\t\tSelectionDirection: standaloneEnums.SelectionDirection,\n\t\tMarkerSeverity: standaloneEnums.MarkerSeverity,\n\t\tMarkerTag: standaloneEnums.MarkerTag,\n\t\tUri: <any>URI,\n\t\tToken: Token\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint32 } from 'vs/editor/common/core/uint';\n\nexport class PrefixSumIndexOfResult {\n\t_prefixSumIndexOfResultBrand: void;\n\n\tindex: number;\n\tremainder: number;\n\n\tconstructor(index: number, remainder: number) {\n\t\tthis.index = index;\n\t\tthis.remainder = remainder;\n\t}\n}\n\nexport class PrefixSumComputer {\n\n\t/**\n\t * values[i] is the value at index i\n\t */\n\tprivate values: Uint32Array;\n\n\t/**\n\t * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\n\t */\n\tprivate prefixSum: Uint32Array;\n\n\t/**\n\t * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\n\t */\n\tprivate prefixSumValidIndex: Int32Array;\n\n\tconstructor(values: Uint32Array) {\n\t\tthis.values = values;\n\t\tthis.prefixSum = new Uint32Array(values.length);\n\t\tthis.prefixSumValidIndex = new Int32Array(1);\n\t\tthis.prefixSumValidIndex[0] = -1;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this.values.length;\n\t}\n\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): boolean {\n\t\tinsertIndex = toUint32(insertIndex);\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\t\tconst insertValuesLen = insertValues.length;\n\n\t\tif (insertValuesLen === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length + insertValuesLen);\n\t\tthis.values.set(oldValues.subarray(0, insertIndex), 0);\n\t\tthis.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n\t\tthis.values.set(insertValues, insertIndex);\n\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = insertIndex - 1;\n\t\t}\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic changeValue(index: number, value: number): boolean {\n\t\tindex = toUint32(index);\n\t\tvalue = toUint32(value);\n\n\t\tif (this.values[index] === value) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.values[index] = value;\n\t\tif (index - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = index - 1;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic removeValues(startIndex: number, cnt: number): boolean {\n\t\tstartIndex = toUint32(startIndex);\n\t\tcnt = toUint32(cnt);\n\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\n\t\tif (startIndex >= oldValues.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet maxCnt = oldValues.length - startIndex;\n\t\tif (cnt >= maxCnt) {\n\t\t\tcnt = maxCnt;\n\t\t}\n\n\t\tif (cnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length - cnt);\n\t\tthis.values.set(oldValues.subarray(0, startIndex), 0);\n\t\tthis.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (startIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = startIndex - 1;\n\t\t}\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getTotalValue(): number {\n\t\tif (this.values.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._getAccumulatedValue(this.values.length - 1);\n\t}\n\n\tpublic getAccumulatedValue(index: number): number {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tindex = toUint32(index);\n\t\treturn this._getAccumulatedValue(index);\n\t}\n\n\tprivate _getAccumulatedValue(index: number): number {\n\t\tif (index <= this.prefixSumValidIndex[0]) {\n\t\t\treturn this.prefixSum[index];\n\t\t}\n\n\t\tlet startIndex = this.prefixSumValidIndex[0] + 1;\n\t\tif (startIndex === 0) {\n\t\t\tthis.prefixSum[0] = this.values[0];\n\t\t\tstartIndex++;\n\t\t}\n\n\t\tif (index >= this.values.length) {\n\t\t\tindex = this.values.length - 1;\n\t\t}\n\n\t\tfor (let i = startIndex; i <= index; i++) {\n\t\t\tthis.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n\t\t}\n\t\tthis.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n\t\treturn this.prefixSum[index];\n\t}\n\n\tpublic getIndexOf(accumulatedValue: number): PrefixSumIndexOfResult {\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\n\n\t\t// Compute all sums (to get a fully valid prefixSum)\n\t\tthis.getTotalValue();\n\n\t\tlet low = 0;\n\t\tlet high = this.values.length - 1;\n\t\tlet mid = 0;\n\t\tlet midStop = 0;\n\t\tlet midStart = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ((high - low) / 2) | 0;\n\n\t\t\tmidStop = this.prefixSum[mid];\n\t\t\tmidStart = midStop - this.values[mid];\n\n\t\t\tif (accumulatedValue < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (accumulatedValue >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n\t}\n}\n\nexport class PrefixSumComputerWithCache {\n\n\tprivate readonly _actual: PrefixSumComputer;\n\tprivate _cacheAccumulatedValueStart: number = 0;\n\tprivate _cache: PrefixSumIndexOfResult[] | null = null;\n\n\tconstructor(values: Uint32Array) {\n\t\tthis._actual = new PrefixSumComputer(values);\n\t\tthis._bustCache();\n\t}\n\n\tprivate _bustCache(): void {\n\t\tthis._cacheAccumulatedValueStart = 0;\n\t\tthis._cache = null;\n\t}\n\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): void {\n\t\tif (this._actual.insertValues(insertIndex, insertValues)) {\n\t\t\tthis._bustCache();\n\t\t}\n\t}\n\n\tpublic changeValue(index: number, value: number): void {\n\t\tif (this._actual.changeValue(index, value)) {\n\t\t\tthis._bustCache();\n\t\t}\n\t}\n\n\tpublic removeValues(startIndex: number, cnt: number): void {\n\t\tif (this._actual.removeValues(startIndex, cnt)) {\n\t\t\tthis._bustCache();\n\t\t}\n\t}\n\n\tpublic getTotalValue(): number {\n\t\treturn this._actual.getTotalValue();\n\t}\n\n\tpublic getAccumulatedValue(index: number): number {\n\t\treturn this._actual.getAccumulatedValue(index);\n\t}\n\n\tpublic getIndexOf(accumulatedValue: number): PrefixSumIndexOfResult {\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\n\n\t\tif (this._cache !== null) {\n\t\t\tlet cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n\t\t\tif (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n\t\t\t\t// Cache hit!\n\t\t\t\treturn this._cache[cacheIndex];\n\t\t\t}\n\t\t}\n\n\t\t// Cache miss!\n\t\treturn this._actual.getIndexOf(accumulatedValue);\n\t}\n\n\t/**\n\t * Gives a hint that a lot of requests are about to come in for these accumulated values.\n\t */\n\tpublic warmUpCache(accumulatedValueStart: number, accumulatedValueEnd: number): void {\n\t\tlet newCache: PrefixSumIndexOfResult[] = [];\n\t\tfor (let accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n\t\t\tnewCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n\t\t}\n\t\tthis._cache = newCache;\n\t\tthis._cacheAccumulatedValueStart = accumulatedValueStart;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IModelContentChange } from 'vs/editor/common/model/textModelEvents';\nimport { PrefixSumComputer } from 'vs/editor/common/viewModel/prefixSumComputer';\n\nexport interface IModelChangedEvent {\n\t/**\n\t * The actual changes.\n\t */\n\treadonly changes: IModelContentChange[];\n\t/**\n\t * The (new) end-of-line character.\n\t */\n\treadonly eol: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\treadonly versionId: number;\n}\n\nexport class MirrorTextModel {\n\n\tprotected _uri: URI;\n\tprotected _lines: string[];\n\tprotected _eol: string;\n\tprotected _versionId: number;\n\tprotected _lineStarts: PrefixSumComputer | null;\n\n\tconstructor(uri: URI, lines: string[], eol: string, versionId: number) {\n\t\tthis._uri = uri;\n\t\tthis._lines = lines;\n\t\tthis._eol = eol;\n\t\tthis._versionId = versionId;\n\t\tthis._lineStarts = null;\n\t}\n\n\tdispose(): void {\n\t\tthis._lines.length = 0;\n\t}\n\n\tgetText(): string {\n\t\treturn this._lines.join(this._eol);\n\t}\n\n\tonEvents(e: IModelChangedEvent): void {\n\t\tif (e.eol && e.eol !== this._eol) {\n\t\t\tthis._eol = e.eol;\n\t\t\tthis._lineStarts = null;\n\t\t}\n\n\t\t// Update my lines\n\t\tconst changes = e.changes;\n\t\tfor (const change of changes) {\n\t\t\tthis._acceptDeleteRange(change.range);\n\t\t\tthis._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n\t\t}\n\n\t\tthis._versionId = e.versionId;\n\t}\n\n\tprotected _ensureLineStarts(): void {\n\t\tif (!this._lineStarts) {\n\t\t\tconst eolLength = this._eol.length;\n\t\t\tconst linesLength = this._lines.length;\n\t\t\tconst lineStartValues = new Uint32Array(linesLength);\n\t\t\tfor (let i = 0; i < linesLength; i++) {\n\t\t\t\tlineStartValues[i] = this._lines[i].length + eolLength;\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\t/**\n\t * All changes to a line's text go through this method\n\t */\n\tprivate _setLineText(lineIndex: number, newValue: string): void {\n\t\tthis._lines[lineIndex] = newValue;\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n\t\t}\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\tif (range.startColumn === range.endColumn) {\n\t\t\t\t// Nothing to delete\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Delete text on the affected line\n\t\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t\t+ this._lines[range.startLineNumber - 1].substring(range.endColumn - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t+ this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)\n\t\t);\n\n\t\t// Delete middle lines\n\t\tthis._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, insertText: string): void {\n\t\tif (insertText.length === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\t\tlet insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n\t\tif (insertLines.length === 1) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t\t+ insertLines[0]\n\t\t\t\t+ this._lines[position.lineNumber - 1].substring(position.column - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Append overflowing text from first line to the end of text to insert\n\t\tinsertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n\n\t\t// Delete overflowing text from first line and insert text on first line\n\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t+ insertLines[0]\n\t\t);\n\n\t\t// Insert new lines & store lengths\n\t\tlet newLengths = new Uint32Array(insertLines.length - 1);\n\t\tfor (let i = 1; i < insertLines.length; i++) {\n\t\t\tthis._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\t\t\tnewLengths[i - 1] = insertLines[i].length + this._eol.length;\n\t\t}\n\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.insertValues(position.lineNumber, newLengths);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mergeSort } from 'vs/base/common/arrays';\nimport { stringDiff } from 'vs/base/common/diff/diff';\nimport { FIN, Iterator, IteratorResult } from 'vs/base/common/iterator';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { globals } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IRequestHandler } from 'vs/base/common/worker/simpleWorker';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { DiffComputer } from 'vs/editor/common/diff/diffComputer';\nimport { EndOfLineSequence, IWordAtPosition } from 'vs/editor/common/model';\nimport { IModelChangedEvent, MirrorTextModel as BaseMirrorModel } from 'vs/editor/common/model/mirrorTextModel';\nimport { ensureValidWordDefinition, getWordAtText } from 'vs/editor/common/model/wordHelper';\nimport { CompletionItem, CompletionItemKind, CompletionList, IInplaceReplaceSupportResult, ILink, TextEdit } from 'vs/editor/common/modes';\nimport { ILinkComputerTarget, computeLinks } from 'vs/editor/common/modes/linkComputer';\nimport { BasicInplaceReplace } from 'vs/editor/common/modes/supports/inplaceReplaceSupport';\nimport { IDiffComputationResult } from 'vs/editor/common/services/editorWorkerService';\nimport { createMonacoBaseAPI } from 'vs/editor/common/standalone/standaloneBase';\nimport { getAllPropertyNames } from 'vs/base/common/types';\n\nexport interface IMirrorModel {\n\treadonly uri: URI;\n\treadonly version: number;\n\tgetValue(): string;\n}\n\nexport interface IWorkerContext {\n\t/**\n\t * Get all available mirror models in this worker.\n\t */\n\tgetMirrorModels(): IMirrorModel[];\n}\n\n/**\n * @internal\n */\nexport interface IRawModelData {\n\turl: string;\n\tversionId: number;\n\tlines: string[];\n\tEOL: string;\n}\n\n/**\n * @internal\n */\nexport interface ICommonModel extends ILinkComputerTarget, IMirrorModel {\n\teol: string;\n\n\tgetLinesContent(): string[];\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n\tgetLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[];\n\tcreateWordIterator(wordDefinition: RegExp): Iterator<string>;\n\tgetWordUntilPosition(position: IPosition, wordDefinition: RegExp): IWordAtPosition;\n\tgetValueInRange(range: IRange): string;\n\tgetWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null;\n\toffsetAt(position: IPosition): number;\n\tpositionAt(offset: number): IPosition;\n}\n\n/**\n * Range of a word inside a model.\n * @internal\n */\ninterface IWordRange {\n\t/**\n\t * The index where the word starts.\n\t */\n\treadonly start: number;\n\t/**\n\t * The index where the word ends.\n\t */\n\treadonly end: number;\n}\n\n/**\n * @internal\n */\nclass MirrorModel extends BaseMirrorModel implements ICommonModel {\n\n\tpublic get uri(): URI {\n\t\treturn this._uri;\n\t}\n\n\tpublic get version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tpublic get eol(): string {\n\t\treturn this._eol;\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this.getText();\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._lines.slice(0);\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._lines[lineNumber - 1];\n\t}\n\n\tpublic getWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null {\n\n\t\tlet wordAtText = getWordAtText(\n\t\t\tposition.column,\n\t\t\tensureValidWordDefinition(wordDefinition),\n\t\t\tthis._lines[position.lineNumber - 1],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getWordUntilPosition(position: IPosition, wordDefinition: RegExp): IWordAtPosition {\n\t\tconst wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n\t\tif (!wordAtPosition) {\n\t\t\treturn {\n\t\t\t\tword: '',\n\t\t\t\tstartColumn: position.column,\n\t\t\t\tendColumn: position.column\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tword: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n\t\t\tstartColumn: wordAtPosition.startColumn,\n\t\t\tendColumn: position.column\n\t\t};\n\t}\n\n\tpublic createWordIterator(wordDefinition: RegExp): Iterator<string> {\n\t\tlet obj: { done: false; value: string; };\n\t\tlet lineNumber = 0;\n\t\tlet lineText: string;\n\t\tlet wordRangesIdx = 0;\n\t\tlet wordRanges: IWordRange[] = [];\n\t\tlet next = (): IteratorResult<string> => {\n\n\t\t\tif (wordRangesIdx < wordRanges.length) {\n\t\t\t\tconst value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n\t\t\t\twordRangesIdx += 1;\n\t\t\t\tif (!obj) {\n\t\t\t\t\tobj = { done: false, value: value };\n\t\t\t\t} else {\n\t\t\t\t\tobj.value = value;\n\t\t\t\t}\n\t\t\t\treturn obj;\n\n\t\t\t} else if (lineNumber >= this._lines.length) {\n\t\t\t\treturn FIN;\n\n\t\t\t} else {\n\t\t\t\tlineText = this._lines[lineNumber];\n\t\t\t\twordRanges = this._wordenize(lineText, wordDefinition);\n\t\t\t\twordRangesIdx = 0;\n\t\t\t\tlineNumber += 1;\n\t\t\t\treturn next();\n\t\t\t}\n\t\t};\n\t\treturn { next };\n\t}\n\n\tpublic getLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[] {\n\t\tlet content = this._lines[lineNumber - 1];\n\t\tlet ranges = this._wordenize(content, wordDefinition);\n\t\tlet words: IWordAtPosition[] = [];\n\t\tfor (const range of ranges) {\n\t\t\twords.push({\n\t\t\t\tword: content.substring(range.start, range.end),\n\t\t\t\tstartColumn: range.start + 1,\n\t\t\t\tendColumn: range.end + 1\n\t\t\t});\n\t\t}\n\t\treturn words;\n\t}\n\n\tprivate _wordenize(content: string, wordDefinition: RegExp): IWordRange[] {\n\t\tconst result: IWordRange[] = [];\n\t\tlet match: RegExpExecArray | null;\n\n\t\twordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n\n\t\twhile (match = wordDefinition.exec(content)) {\n\t\t\tif (match[0].length === 0) {\n\t\t\t\t// it did match the empty string\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getValueInRange(range: IRange): string {\n\t\trange = this._validateRange(range);\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\n\t\tlet lineEnding = this._eol;\n\t\tlet startLineIndex = range.startLineNumber - 1;\n\t\tlet endLineIndex = range.endLineNumber - 1;\n\t\tlet resultLines: string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\t\tfor (let i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tpublic offsetAt(position: IPosition): number {\n\t\tposition = this._validatePosition(position);\n\t\tthis._ensureLineStarts();\n\t\treturn this._lineStarts!.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n\t}\n\n\tpublic positionAt(offset: number): IPosition {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tthis._ensureLineStarts();\n\t\tlet out = this._lineStarts!.getIndexOf(offset);\n\t\tlet lineLength = this._lines[out.index].length;\n\n\t\t// Ensure we return a valid position\n\t\treturn {\n\t\t\tlineNumber: 1 + out.index,\n\t\t\tcolumn: 1 + Math.min(out.remainder, lineLength)\n\t\t};\n\t}\n\n\tprivate _validateRange(range: IRange): IRange {\n\n\t\tconst start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n\t\tconst end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n\n\t\tif (start.lineNumber !== range.startLineNumber\n\t\t\t|| start.column !== range.startColumn\n\t\t\t|| end.lineNumber !== range.endLineNumber\n\t\t\t|| end.column !== range.endColumn) {\n\n\t\t\treturn {\n\t\t\t\tstartLineNumber: start.lineNumber,\n\t\t\t\tstartColumn: start.column,\n\t\t\t\tendLineNumber: end.lineNumber,\n\t\t\t\tendColumn: end.column\n\t\t\t};\n\t\t}\n\n\t\treturn range;\n\t}\n\n\tprivate _validatePosition(position: IPosition): IPosition {\n\t\tif (!Position.isIPosition(position)) {\n\t\t\tthrow new Error('bad position');\n\t\t}\n\t\tlet { lineNumber, column } = position;\n\t\tlet hasChanged = false;\n\n\t\tif (lineNumber < 1) {\n\t\t\tlineNumber = 1;\n\t\t\tcolumn = 1;\n\t\t\thasChanged = true;\n\n\t\t} else if (lineNumber > this._lines.length) {\n\t\t\tlineNumber = this._lines.length;\n\t\t\tcolumn = this._lines[lineNumber - 1].length + 1;\n\t\t\thasChanged = true;\n\n\t\t} else {\n\t\t\tlet maxCharacter = this._lines[lineNumber - 1].length + 1;\n\t\t\tif (column < 1) {\n\t\t\t\tcolumn = 1;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t\telse if (column > maxCharacter) {\n\t\t\t\tcolumn = maxCharacter;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasChanged) {\n\t\t\treturn position;\n\t\t} else {\n\t\t\treturn { lineNumber, column };\n\t\t}\n\t}\n}\n\n/**\n * @internal\n */\nexport interface IForeignModuleFactory {\n\t(ctx: IWorkerContext, createData: any): any;\n}\n\ndeclare var require: any;\n\n/**\n * @internal\n */\nexport abstract class BaseEditorSimpleWorker {\n\tprivate _foreignModuleFactory: IForeignModuleFactory | null;\n\tprivate _foreignModule: any;\n\n\tconstructor(foreignModuleFactory: IForeignModuleFactory | null) {\n\t\tthis._foreignModuleFactory = foreignModuleFactory;\n\t\tthis._foreignModule = null;\n\t}\n\n\tprotected abstract _getModel(uri: string): ICommonModel;\n\tprotected abstract _getModels(): ICommonModel[];\n\n\t// ---- BEGIN diff --------------------------------------------------------------------------\n\n\tpublic computeDiff(originalUrl: string, modifiedUrl: string, ignoreTrimWhitespace: boolean): Promise<IDiffComputationResult | null> {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\t\tif (!original || !modified) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst originalLines = original.getLinesContent();\n\t\tconst modifiedLines = modified.getLinesContent();\n\t\tconst diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\tshouldComputeCharChanges: true,\n\t\t\tshouldPostProcessCharChanges: true,\n\t\t\tshouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n\t\t\tshouldMakePrettyDiff: true\n\t\t});\n\n\t\tconst changes = diffComputer.computeDiff();\n\t\tlet identical = (changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n\t\treturn Promise.resolve({\n\t\t\tidentical: identical,\n\t\t\tchanges: changes\n\t\t});\n\t}\n\n\tprivate _modelsAreIdentical(original: ICommonModel, modified: ICommonModel): boolean {\n\t\tconst originalLineCount = original.getLineCount();\n\t\tconst modifiedLineCount = modified.getLineCount();\n\t\tif (originalLineCount !== modifiedLineCount) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let line = 1; line <= originalLineCount; line++) {\n\t\t\tconst originalLine = original.getLineContent(line);\n\t\t\tconst modifiedLine = modified.getLineContent(line);\n\t\t\tif (originalLine !== modifiedLine) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t// ---- END diff --------------------------------------------------------------------------\n\n\n\t// ---- BEGIN minimal edits ---------------------------------------------------------------\n\n\tprivate static readonly _diffLimit = 10000;\n\n\tpublic computeMoreMinimalEdits(modelUrl: string, edits: TextEdit[]): Promise<TextEdit[]> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(edits);\n\t\t}\n\n\t\tconst result: TextEdit[] = [];\n\t\tlet lastEol: EndOfLineSequence | undefined = undefined;\n\n\t\tedits = mergeSort(edits, (a, b) => {\n\t\t\tif (a.range && b.range) {\n\t\t\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\n\t\t\t}\n\t\t\t// eol only changes should go to the end\n\t\t\tlet aRng = a.range ? 0 : 1;\n\t\t\tlet bRng = b.range ? 0 : 1;\n\t\t\treturn aRng - bRng;\n\t\t});\n\n\t\tfor (let { range, text, eol } of edits) {\n\n\t\t\tif (typeof eol === 'number') {\n\t\t\t\tlastEol = eol;\n\t\t\t}\n\n\t\t\tif (Range.isEmpty(range) && !text) {\n\t\t\t\t// empty change\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst original = model.getValueInRange(range);\n\t\t\ttext = text!.replace(/\\r\\n|\\n|\\r/g, model.eol);\n\n\t\t\tif (original === text) {\n\t\t\t\t// noop\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// make sure diff won't take too long\n\t\t\tif (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n\t\t\t\tresult.push({ range, text });\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// compute diff between original and edit.text\n\t\t\tconst changes = stringDiff(original, text, false);\n\t\t\tconst editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n\n\t\t\tfor (const change of changes) {\n\t\t\t\tconst start = model.positionAt(editOffset + change.originalStart);\n\t\t\t\tconst end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n\t\t\t\tconst newEdit: TextEdit = {\n\t\t\t\t\ttext: text.substr(change.modifiedStart, change.modifiedLength),\n\t\t\t\t\trange: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n\t\t\t\t};\n\n\t\t\t\tif (model.getValueInRange(newEdit.range) !== newEdit.text) {\n\t\t\t\t\tresult.push(newEdit);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lastEol === 'number') {\n\t\t\tresult.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n\t\t}\n\n\t\treturn Promise.resolve(result);\n\t}\n\n\t// ---- END minimal edits ---------------------------------------------------------------\n\n\tpublic computeLinks(modelUrl: string): Promise<ILink[] | null> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn Promise.resolve(computeLinks(model));\n\t}\n\n\t// ---- BEGIN suggest --------------------------------------------------------------------------\n\n\tprivate static readonly _suggestionsLimit = 10000;\n\n\tpublic textualSuggest(modelUrl: string, position: IPosition, wordDef: string, wordDefFlags: string): Promise<CompletionList | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst suggestions: CompletionItem[] = [];\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst currentWord = model.getWordUntilPosition(position, wordDefRegExp);\n\n\t\tconst seen: Record<string, boolean> = Object.create(null);\n\t\tseen[currentWord.word] = true;\n\n\t\tfor (\n\t\t\tlet iter = model.createWordIterator(wordDefRegExp), e = iter.next();\n\t\t\t!e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit;\n\t\t\te = iter.next()\n\t\t) {\n\t\t\tconst word = e.value;\n\t\t\tif (seen[word]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tseen[word] = true;\n\t\t\tif (!isNaN(Number(word))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsuggestions.push({\n\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\tlabel: word,\n\t\t\t\tinsertText: word,\n\t\t\t\trange: { startLineNumber: position.lineNumber, startColumn: currentWord.startColumn, endLineNumber: position.lineNumber, endColumn: currentWord.endColumn }\n\t\t\t});\n\t\t}\n\n\t\treturn Promise.resolve({ suggestions });\n\t}\n\n\n\t// ---- END suggest --------------------------------------------------------------------------\n\n\t//#region -- word ranges --\n\n\tcomputeWordRanges(modelUrl: string, range: IRange, wordDef: string, wordDefFlags: string): Promise<{ [word: string]: IRange[] }> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(Object.create(null));\n\t\t}\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst result: { [word: string]: IRange[] } = Object.create(null);\n\t\tfor (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n\t\t\tlet words = model.getLineWords(line, wordDefRegExp);\n\t\t\tfor (const word of words) {\n\t\t\t\tif (!isNaN(Number(word.word))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet array = result[word.word];\n\t\t\t\tif (!array) {\n\t\t\t\t\tarray = [];\n\t\t\t\t\tresult[word.word] = array;\n\t\t\t\t}\n\t\t\t\tarray.push({\n\t\t\t\t\tstartLineNumber: line,\n\t\t\t\t\tstartColumn: word.startColumn,\n\t\t\t\t\tendLineNumber: line,\n\t\t\t\t\tendColumn: word.endColumn\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(result);\n\t}\n\n\t//#endregion\n\n\tpublic navigateValueSet(modelUrl: string, range: IRange, up: boolean, wordDef: string, wordDefFlags: string): Promise<IInplaceReplaceSupportResult | null> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tlet wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n\t\tif (range.startColumn === range.endColumn) {\n\t\t\trange = {\n\t\t\t\tstartLineNumber: range.startLineNumber,\n\t\t\t\tstartColumn: range.startColumn,\n\t\t\t\tendLineNumber: range.endLineNumber,\n\t\t\t\tendColumn: range.endColumn + 1\n\t\t\t};\n\t\t}\n\n\t\tlet selectionText = model.getValueInRange(range);\n\n\t\tlet wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n\t\tif (!wordRange) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t\tlet word = model.getValueInRange(wordRange);\n\t\tlet result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n\t\treturn Promise.resolve(result);\n\t}\n\n\t// ---- BEGIN foreign module support --------------------------------------------------------------------------\n\n\tpublic loadForeignModule(moduleId: string, createData: any): Promise<string[]> {\n\t\tlet ctx: IWorkerContext = {\n\t\t\tgetMirrorModels: (): IMirrorModel[] => {\n\t\t\t\treturn this._getModels();\n\t\t\t}\n\t\t};\n\n\t\tif (this._foreignModuleFactory) {\n\t\t\tthis._foreignModule = this._foreignModuleFactory(ctx, createData);\n\t\t\t// static foreing module\n\t\t\tlet methods: string[] = [];\n\t\t\tfor (const prop of getAllPropertyNames(this._foreignModule)) {\n\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n\t\t\t\t\tmethods.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Promise.resolve(methods);\n\t\t}\n\t\t// ESM-comment-begin\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n\t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n\n\t\t\t\tlet methods: string[] = [];\n\t\t\t\tfor (const prop of getAllPropertyNames(this._foreignModule)) {\n\t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n\t\t\t\t\t\tmethods.push(prop);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresolve(methods);\n\n\t\t\t}, reject);\n\t\t});\n\t\t// ESM-comment-end\n\n\t\t// ESM-uncomment-begin\n\t\t// return Promise.reject(new Error(`Unexpected usage`));\n\t\t// ESM-uncomment-end\n\t}\n\n\t// foreign method request\n\tpublic fmr(method: string, args: any[]): Promise<any> {\n\t\tif (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\t// ---- END foreign module support --------------------------------------------------------------------------\n}\n\n/**\n * @internal\n */\nexport class EditorSimpleWorkerImpl extends BaseEditorSimpleWorker implements IRequestHandler, IDisposable {\n\t_requestHandlerBrand: any;\n\n\tprivate _models: { [uri: string]: MirrorModel; };\n\n\tconstructor(foreignModuleFactory: IForeignModuleFactory | null) {\n\t\tsuper(foreignModuleFactory);\n\t\tthis._models = Object.create(null);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._models = Object.create(null);\n\t}\n\n\tprotected _getModel(uri: string): ICommonModel {\n\t\treturn this._models[uri];\n\t}\n\n\tprotected _getModels(): ICommonModel[] {\n\t\tlet all: MirrorModel[] = [];\n\t\tObject.keys(this._models).forEach((key) => all.push(this._models[key]));\n\t\treturn all;\n\t}\n\n\tpublic acceptNewModel(data: IRawModelData): void {\n\t\tthis._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n\t}\n\n\tpublic acceptModelChanged(strURL: string, e: IModelChangedEvent): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tlet model = this._models[strURL];\n\t\tmodel.onEvents(e);\n\t}\n\n\tpublic acceptRemovedModel(strURL: string): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[strURL];\n\t}\n}\n\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(): IRequestHandler {\n\treturn new EditorSimpleWorkerImpl(null);\n}\n\n// This is only available in a Web Worker\ndeclare function importScripts(...urls: string[]): void;\n\nif (typeof importScripts === 'function') {\n\t// Running in a web worker\n\tglobals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n(function () {\n\n\tlet MonacoEnvironment = (<any>self).MonacoEnvironment;\n\tlet monacoBaseUrl = MonacoEnvironment && MonacoEnvironment.baseUrl ? MonacoEnvironment.baseUrl : '../../../';\n\n\tif (typeof (<any>self).define !== 'function' || !(<any>self).define.amd) {\n\t\timportScripts(monacoBaseUrl + 'vs/loader.js');\n\t}\n\n\trequire.config({\n\t\tbaseUrl: monacoBaseUrl,\n\t\tcatchError: true\n\t});\n\n\tlet loadCode = function (moduleId: string) {\n\t\trequire([moduleId], function (ws) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tlet messageHandler = ws.create((msg: any) => {\n\t\t\t\t\t(<any>self).postMessage(msg);\n\t\t\t\t}, null);\n\n\t\t\t\tself.onmessage = (e) => messageHandler.onmessage(e.data);\n\t\t\t\twhile (beforeReadyMessages.length > 0) {\n\t\t\t\t\tself.onmessage(beforeReadyMessages.shift()!);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t});\n\t};\n\n\tlet isFirstMessage = true;\n\tlet beforeReadyMessages: MessageEvent[] = [];\n\tself.onmessage = (message) => {\n\t\tif (!isFirstMessage) {\n\t\t\tbeforeReadyMessages.push(message);\n\t\t\treturn;\n\t\t}\n\n\t\tisFirstMessage = false;\n\t\tloadCode(message.data);\n\t};\n})();\n"]}